{"version":3,"sources":["core/state/ducks/track/track.types.ts","core/state/ducks/view/view.state.ts","core/state/ducks/track/track.state.ts","core/state/ducks/viewed-track/viewed-track.types.ts","core/state/ducks/track/index.ts","core/state/ducks/track/track.reducers.ts","core/state/ducks/viewed-track/viewed-track.state.ts","core/state/ducks/user/user.state.ts","core/state/ducks/viewed-track/index.ts","core/state/ducks/viewed-track/viewed-track.reducers.ts","core/state/ducks/user/user.types.ts","core/shared/index.ts","core/state/ducks/rating-editor/rating-editor.state.ts","core/state/ducks/user/index.ts","core/state/ducks/user/user.reducers.ts","core/state/ducks/rating-editor/rating-editor.types.ts","core/state/ducks/view/view.types.ts","core/state/ducks/rating-editor/index.ts","core/state/ducks/rating-editor/rating-editor.reducers.ts","core/state/ducks/view/index.ts","core/state/ducks/view/view.reducers.ts","core/state/store.ts","components/main/logo/Logo.tsx","components/shared/gradient-header/gradient-header.tsx","core/state/ducks/user/user.actions.ts","components/main/user-bar/user-bar.tsx","core/state/ducks/track/track.actions.ts","core/soundcloud.tsx","core/state/ducks/viewed-track/viewed-track.actions.ts","core/state/ducks/track/track.operations.ts","mocks/index.ts","core/state/ducks/viewed-track/viewed-track.operations.ts","core/state/ducks/viewed-track/viewed-track.selectors.ts","core/state/ducks/rating-editor/rating-editor.actions.ts","core/state/ducks/rating-editor/rating-editor.operations.ts","utils/index.ts","core/state/ducks/user/user.operations.ts","core/state/ducks/view/view.actions.ts","components/main/login-bar/login-bar.tsx","components/main/top-bar/top-bar.tsx","components/main/menu/Menu.tsx","components/entities/track-info/track-info.tsx","components/entities/track-waver/track-waver.tsx","components/entities/mini-timeline/mini-timeline.tsx","components/entities/timeline-moment/TimelineMoment.tsx","components/entities/timeline/timeline-timer.tsx","components/shared/resizable/resizable.tsx","components/entities/timeline-moment-editable/timeline-moment-editable.tsx","components/entities/timeline/Timeline.tsx","components/entities/moment-editor/moment-editor.tsx","components/entities/rating-list/rating-list.tsx","components/pages/track/track.tsx","components/main/global-player/global-player.tsx","components/pages/my-profile/my-profile.tsx","components/shared/spinner/spinner.tsx","components/pages/rate/rate.tsx","components/pages/access/access.tsx","components/main/content/Content.tsx","components/entities/timeline-moment-contextmenu/timeline-moment-contextmenu.tsx","components/main/view/view.tsx","components/main/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionTypes","initialState","timelineMomentContextMenu","isHidden","position","x","y","data","moment","timelineMomentTooltip","startPosition","currentPosition","trackId","autoplay","cover","author","title","audioSource","isPlaying","currentTime","newTime","duration","volume","reducer","state","action","type","SET_TRACK_ID","payload","FETCH_META_PENDING","FETCH_META_SUCCESS","FETCH_META_ERROR","SET_AUDIO_SOURCE","SET_AUDIO_DURATION","SET_AUDIO_STATUS","status","TOOGLE_AUDIO_STATUS","SET_AUDIO_CURRENT_TIME","SET_AUDIO_NEW_TIME","TRANSFER_META_SUCCESS","SET_AUDIO_AUTOPLAY","SET_AUDIO_VOLUME","isSetInPlayer","wave","userRatingId","selectedRatingId","ratings","LoginStage","RegisterStage","FETCH_WAVE_PENDING","FETCH_WAVE_SUCCEESS","FETCH_WAVE_ERROR","FETCH_RATINGS_PENDING","FETCH_RATINGS_SUCCEESS","FETCH_RATINGS_ERROR","SET_SELECTED_RATING_ID","ratingId","SET_USER_RATING_ID","SET_IN_PLAYER","UNSET_IN_PLAYER","isLogged","loginStage","NOT_LOGGED","loginError","undefined","registerStage","NOT_REGISTER","registerError","token","userId","soundcloudId","nickname","avatar","MomentReaction","RatingEditorMode","REGISTER_PENDING","REGISTER_SUCCESS","REGISTER_REJECT","LOGIN_PENDING","LOGIN_SUCCESS","user","LOGIN_REJECT","LOGIN_ERROR","LOGOUT","mode","DISABLED","selectedTime","start","end","newMoment","name","description","color","reaction","NONE","section","SET_MODE","SET_SELECTED_TIME_START","SET_SELECTED_TIME_END","SET_NEW_MOMENT_NAME","SET_NEW_MOMENT_DESCRIPTION","SET_NEW_MOMENT_COLOR","SET_NEW_MOMENT_REACTION","SET_NEW_MOMENT_TIME_START","SET_NEW_MOMENT_TIME_END","SET_NEW_MOMENT_SECTION","RESET_MOMENT_EDITOR","SHOW_TIMELINE_MOMENT_CONTEXTMENU","HIDE_TIMELINE_MOMENT_CONTEXTMENU","SHOW_TIMELINE_MOMENT_TOOLTIP","HIDE_TIMELINE_MOMENT_TOOLTIP","persistDataMiddleware","store","next","localStorage","JSON","stringify","getState","getPersistedState","persistedState","getItem","Error","view","resetView","parse","error","Logo","props","id","viewBox","xmlSpace","cx","cy","rx","ry","fill","stroke","strokeWidth","strokeMiterlimit","className","d","GradientHeader","text","registerPending","PENDING","registerSuccess","SUCCESS","registerReject","REJECT","REGISTER_ERROR","loginPending","loginSuccess","loginReject","logout","UserBar","handleUserLogoutClick","event","logOut","this","style","backgroundImage","onClick","React","Component","UserBarContainer","withRouter","connect","dispatch","userActions","setTrackId","fetchMetaPending","fetchMetaSuccess","artwork_url","toString","replace","username","fetchMetaError","setAudioSource","setAudioDuration","setAudioStatus","toogleAudioStatus","setAudioCurrentTime","setAudioNewTime","transferMetaSuccess","setAudioAutoplay","setAudioVolume","API_KEY","fetchWavePending","fetchWaveSuccess","fetchWaveError","fetchRatingsPending","fetchRatingsSuccess","fetchRatingsError","setInPlayer","setSelectedRatingId","setUserRatingId","unsetInPlayer","fetchTrack","a","async","track","metaUrl","audioUrl","actions","fetch","response","json","transferTrackToPlayer","transferViewedTrackToPlayer","viewedTrack","viewedTrackActions","random","min","max","Math","floor","randomRating","trackDuration","moments","i","push","randomMoment","momentsName","momentsColors","momentStart","momentEnd","length","randomWave","ceil","randomRatings","fetchViewedTrack","isNaN","responseMock","mocks","ratingsData","userRating","find","rating","getSelectedRating","getUserRating","getSelectedMoments","selectedRating","getOtherRatings","filter","setMode","setSelectedTimeStart","setSelectedTimeEnd","setNewMomentTimeStart","setNewMomentTimeEnd","setNewMomentName","setNewMomentDescription","setNewMomentColor","setNewMomentReaction","setNewMomentSection","resetMomentEditor","startRecording","viewedTackActions","ratingEditorActions","RECORDING","stopRecording","ratingEditor","MODIFYING","moveMoment","nextStart","prevStart","diff","nextEnd","scrollTo","ref","window","current","offsetTop","convertToMMSSMS","seconds","m","abs","s","ms","signed","convertToSeconds","fetchFromApi","endpoint","method","cache","credentials","headers","Authorization","redirect","referrerPolicy","body","adjustPositionToScreen","size","innerWidth","innerHeight","width","height","signIn","login","password","console","signUp","soundcloudUri","LoginBar","formStage","loginEntered","passwordEntered","handleLoginInputKeyUp","keyCode","setState","target","value","handlePasswordInputKeyUp","loginInput","autoFocus","placeholder","disabled","onKeyUp","passwordInput","loginIcon","LoginBarContainer","tasks","TopBar","TopBarContainer","Menu","icon","activeClassName","to","TrackInfo","handlePlayButtonClick","onTransferTrackToPlayer","onToogleStatusTrack","handleVolumeClick","log","nativeEvent","offsetX","handleVolumeDrag","handleVolumeDragStop","onVolumeChange","playButtonClassName","playButtonIcon","axis","bounds","onDrag","onStop","TrackInfoContainer","newVolume","svgWidth","stickSpace","TrackWaverStick","isActive","index","transform","TrackWaver","sticksCount","areaRef","createSticks","sticks","activeArea","key","handleClick","onChangeTime","handleMouseMove","createRef","data-name","onMouseMove","x2","y2","offset","stopColor","TrackWaverContainer","soundcloudDuration","MiniTimeline","dragStartPosition","currentTimeOffset","handleActiveBoxDrag","handleActiveBoxStart","onNewAudioStatus","handleActiveBoxEnd","delta","onNewCurrentTime","containerStyle","momentStyle","maxHeight","top","backgroundColor","prevProps","prevState","ActiveBoxPosition","fullStyle","onStart","cancel","transition","createMoments","MiniTimelineContainer","viewedTrackSelectors","time","trackActions","TimelineMoment","countWidth","isFullWidth","getMomentBackgroundClass","getMomentNameClass","getMomentNameStyle","handleContextMenu","preventDefault","onContextMenu","clientX","clientY","momentWrapperStyleNormal","display","momentBackgroundStyle","TimelineTimer","TimelineTimers","ResizePanel","virtualStartWidth","virtualDeltaWidth","virtualCurrentWidth","virtualStartHeight","virtualDeltaHeight","virtualCurrentHeight","startClientX","startClientY","isHorizontal","direction","isInverted","getNextWidth","handler","factor","handleDrag","nextWidth","onResize","handleDragStart","handleStop","realWidth","createHandler","newDelta","draggableOpts","realHeight","resizableWrapperStyles","children","TimelineMomentEditable","timeout","setTimeout","handleNewMomentDragStart","handleNewMomentDrag","handleNewMomentDragStop","secondWidth","sectionHeight","sectionNumber","lastY","lastX","onVerticalPositionChange","onHorizontalPositionChange","handleNewMomentResizeStart","clear","handleNewMomentResize","newEnd","onRightSideResize","newStart","onLeftSideResize","handleNewMomentResizeStop","handleSelect","xPosition","yPosition","grid","directions","onResizeStart","onResizeStop","onSelect","Timeline","map","handleMomentContextMenu","getRecordingWrapperStyles","selectedTimeStart","selectedTimeEnd","left","handleTimelineContextMenu","handleRecordingCancelButton","onCancelModyfing","handleVerticalPositionChange","newSection","onNewMomentSectionChange","handleHorizontalPositionChange","onNewMomentPositionChange","handleLeftSideResize","onNewMomentStartChange","handleRightSideResize","onNewMomentEndChange","onMomentContextMenu","tapeStyles","recordingWrapperStyles","recordingCancelButtonStyles","newMomentWrapperStyles","TimelineContainer","MomentEditor","startMinutesRef","startSecondsRef","startMilisecondsRef","endMinutesRef","endSecondsRef","endMilisecondsRef","defaultColor","defaultReaction","defaultSection","countShade","setMomentColorButtonStyle","handleColorButtonClick","colorData","currentTarget","getAttribute","onColorChange","handleReactionClick","reactionData","onReactionChange","handleSectionClick","sectionData","parseInt","onSectionChange","handleStartChangeTime","newCurrentTime","newRecordingTimeStart","handleEndChangeTime","newRecordingTimeEnd","getTimeValueInputArgs","isStart","recordingValueArg","editingValueArg","handleTypeArg","mmInput","refTypeArg","readOnly","defaultValue","ssInput","msInput","createMomentReactions","reactions","reactionsData","reactionClass","src","path","data-reaction","alt","createMomentColorButtons","buttons","colorsData","buttonClass","data-color","createSectionButtons","sectionButtons","sectionButtonClass","data-section","handleMomentNameInputKeyUp","onNameChange","handleMomentDescriptionAreaKeyUp","onDescriptionChange","MomentEditorContainer","newColor","newReaction","RatingList","renderButton","ratingButtonClassName","avatarStyles","onChangeRating","otherRatings","renderUserButton","concat","renderButtons","RatingListContainer","TrackComponent","infoWrapperRef","waverWrapperRef","ratingsWrapperRef","timelineWrapperRef","momentEditorWrapperRef","momentsDescriptionWrapperRef","loadTrack","oldProps","match","params","readParams","viewedTrackId","unsetPlayer","setPlayer","TrackContainer","playerTrackId","GlobalPlayerComponent","audio","allowToKeyPressOnSpaceTimeout","isAllowToKeyPressOnSpace","handleAudioCanPlay","onAudioAutoplay","onAudioCanPlay","handleAudioPlay","onAudioPlay","handleAudioPause","onAudioPause","handleAudioTimeUpdate","onAudioTimeUpdate","handleAudioEnded","handleAudioWaiting","handleAudioError","handleRecordButtonClick","onAudioRecordStop","onAudioRecordStart","handleBarAreaClick","toElement","offsetWidth","onAudioTimeChange","Audio","loadAudio","loadAudioController","play","pause","load","oncanplaythrough","onplay","ontimeupdate","onpause","onended","onwaiting","onerror","onkeypress","tagName","which","toogleAudioPlay","onkeydown","prevTime","nextTime","BarNotFillStyles","TrackCoverStyles","recordButtonActive","GlobalPlayerContainer","onAudioVolumeChange","MyProfileComponent","MyProfileContainer","SpinnerComponent","spacing","randomHeights","getRandomHeights","heights","area","progress","degs","deg","RateComponent","interval","isUserFavourtiesLoaded","userFavourites","createBoxes","userFavourite","streamable","slice","createBox","url","artUrl","coverStyles","handleKeyDown","fetchTrackInfo","fetchUserFavourites","setInterval","clearInterval","apiUrl","history","favouritesWrapperStyles","onKeyDown","RateComponentContainer","AccessComponent","signInLoginRef","signInPasswordRef","signUpLoginRef","signUpSoundCloudUriRef","signUpPasswordRef","handleLoginButtonClick","handleRegisterButtonClick","isDisabled","message","tabIndex","AccessContainer","Content","exact","component","TimelineMomentContextmenu","contextMenuRef","TimelineMomentContextmenuStyles","options","option","TimelineMomentContextmenuContainer","View","document","addEventListener","isContextMenuHidden","onCloseContextMenu","ViewContainer","rootReducer","combineReducers","reducers","middlewares","applyMiddleware","thunkMiddleware","composeEnhancers","composeWithDevTools","createStore","getStore","App","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"y8DAAKA,E,+DCyBQC,EAA6B,CACxCC,0BAA2B,CACzBC,UAAU,EACVC,SAAU,CAAEC,EAAG,EAAGC,EAAG,GACrBC,KAAM,CACJC,OAAQ,OAIZC,sBAAuB,CACrBN,UAAU,EACVO,cAAe,CAAEL,EAAG,EAAGC,EAAG,GAC1BK,gBAAiB,CAAEN,EAAG,EAAGC,EAAG,GAC5BC,KAAM,CACJC,OAAQ,Q,wBCzBDP,EAA8B,CACzCW,QAAS,EACTC,UAAU,EACVC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,YAAa,GACbC,WAAW,EACXC,YAAa,EACbC,QAAS,EACTC,SAAU,EACVC,OAAQ,I,SFzBLtB,K,kCAAAA,E,8CAAAA,E,8CAAAA,E,0CAAAA,E,0CAAAA,E,8CAAAA,E,0CAAAA,E,gDAAAA,E,sDAAAA,E,8CAAAA,E,oDAAAA,E,wCAAAA,E,2CAAAA,M,KAgBUA,IGhBVA,EHgBUA,IIdAuB,ECCM,WAGA,IAFnBC,EAEkB,uDAFKvB,EACvBwB,EACkB,uCAClB,OAAQA,EAAOC,MACb,KAAK1B,EAAY2B,aACf,OAAO,eACFH,EADL,CAEEZ,QAASa,EAAOG,QAAQhB,UAE5B,KAAKZ,EAAY6B,mBACf,OAAO,eACFL,GAEP,KAAKxB,EAAY8B,mBACf,OAAO,eACFN,EADL,CAEEV,MAAOW,EAAOG,QAAQd,MACtBE,MAAOS,EAAOG,QAAQZ,MACtBD,OAAQU,EAAOG,QAAQb,SAE3B,KAAKf,EAAY+B,iBACf,OAAO,eACFP,GAEP,KAAKxB,EAAYgC,iBACf,OAAO,eACFR,EADL,CAEEP,YAAaQ,EAAOG,QAAQX,YAC5BC,WAAW,EACXC,YAAa,IAEjB,KAAKnB,EAAYiC,mBACf,OAAO,eACFT,EADL,CAEEH,SAAUI,EAAOG,QAAQP,WAE7B,KAAKrB,EAAYkC,iBACf,OAAO,eACFV,EADL,CAEEN,UAAWO,EAAOG,QAAQO,SAE9B,KAAKnC,EAAYoC,oBACf,OAAO,eACFZ,EADL,CAEEN,WAAYM,EAAMN,YAGtB,KAAKlB,EAAYqC,uBACf,OAAO,eACFb,EADL,CAEEL,YAAaM,EAAOG,QAAQT,cAEhC,KAAKnB,EAAYsC,mBACf,OAAO,eACFd,EADL,CAEEJ,QAASK,EAAOG,QAAQR,UAE5B,KAAKpB,EAAYuC,sBACf,OAAO,eACFf,EADL,CAEEV,MAAOW,EAAOG,QAAQd,MACtBE,MAAOS,EAAOG,QAAQZ,MACtBD,OAAQU,EAAOG,QAAQb,SAE3B,KAAKf,EAAYwC,mBACf,OAAO,eACFhB,EADL,CAEEX,SAAUY,EAAOG,QAAQf,WAE7B,KAAKb,EAAYyC,iBACf,OAAO,eACFjB,EADL,CAEEF,OAAQG,EAAOG,QAAQN,SAE3B,QACE,OAAOE,IChEAvB,EAAoC,CAC/CW,QAAS,EACT8B,eAAe,EACfrB,SAAU,EACVP,MAAO,GACPC,OAAQ,GACRC,MAAO,GACP2B,KAAM,GACNC,cAAe,EACfC,iBAAkB,EAClBC,QAAS,K,SHzBN9C,K,yCAAAA,E,qDAAAA,E,qDAAAA,E,iDAAAA,E,qDAAAA,E,sDAAAA,E,iDAAAA,E,2DAAAA,E,4DAAAA,E,uDAAAA,E,6DAAAA,E,qDAAAA,E,iDAAAA,E,qDAAAA,E,iDAAAA,E,uDAAAA,E,6DAAAA,E,2CAAAA,E,gDAAAA,M,KAsBUA,IItBH+C,EAOAC,EJeGhD,IKpBAuB,ECCY,WAGA,IAFzBC,EAEwB,uDAFKvB,EAC7BwB,EACwB,uCACxB,OAAQA,EAAOC,MACb,KAAK1B,EAAY2B,aACf,OAAO,eACFH,EADL,CAEEZ,QAASa,EAAOG,QAAQhB,UAE5B,KAAKZ,EAAY6B,mBACf,OAAO,eACFL,GAEP,KAAKxB,EAAY8B,mBACf,OAAO,eACFN,EADL,CAEEV,MAAOW,EAAOG,QAAQd,MACtBE,MAAOS,EAAOG,QAAQZ,MACtBD,OAAQU,EAAOG,QAAQb,OACvBM,SAAUI,EAAOG,QAAQP,WAE7B,KAAKrB,EAAY+B,iBAKjB,KAAK/B,EAAYiD,mBACf,OAAO,eACFzB,GAEP,KAAKxB,EAAYkD,oBACf,OAAO,eACF1B,EADL,CAEEmB,KAAMlB,EAAOG,QAAQe,OAEzB,KAAK3C,EAAYmD,iBAKjB,KAAKnD,EAAYoD,sBACf,OAAO,eACF5B,GAEP,KAAKxB,EAAYqD,uBACf,OAAO,eACF7B,EADL,CAEEsB,QAASrB,EAAOG,QAAQkB,UAE5B,KAAK9C,EAAYsD,oBACf,OAAO,eACF9B,GAGP,KAAKxB,EAAYuD,uBACf,OAAO,eACF/B,EADL,CAEEqB,iBAAkBpB,EAAOG,QAAQ4B,WAErC,KAAKxD,EAAYyD,mBACf,OAAO,eACFjC,EADL,CAEEoB,aAAcnB,EAAOG,QAAQ4B,WAGjC,KAAKxD,EAAY0D,cACf,OAAO,eACFlC,EADL,CAEEkB,eAAe,IAEnB,KAAK1C,EAAY2D,gBACf,OAAO,eACFnC,EADL,CAEEkB,eAAe,IAEnB,QACE,OAAOlB,K,SFhFDuB,K,wBAAAA,E,kBAAAA,E,gBAAAA,E,mBAAAA,M,cAOAC,K,8BAAAA,E,kBAAAA,E,gBAAAA,E,mBAAAA,M,KAyBL,IGhCFhD,EHgCQC,EAA6B,CACxC2D,UAAU,EACVC,WAAYd,EAAWe,WACvBC,gBAAYC,EACZC,cAAejB,EAAckB,aAC7BC,mBAAeH,EACfI,MAAO,GACPC,OAAQ,EACRC,aAAc,EACdC,SAAU,GACVC,OAAQ,K,SG1CLxE,K,yCAAAA,E,yCAAAA,E,uCAAAA,E,sCAAAA,E,mCAAAA,E,mCAAAA,E,iCAAAA,E,+BAAAA,E,sBAAAA,M,KAYUA,ICRHyE,ECGAC,EFKG1E,IGVAuB,ECQK,WAGA,IAFlBC,EAEiB,uDAFKvB,EACtBwB,EACiB,uCACjB,OAAQA,EAAOC,MACb,KAAK1B,EAAY2E,iBAMjB,KAAK3E,EAAY4E,iBACf,OAAO,eACFpD,EADL,CAEEyC,cAAexC,EAAOG,QAAQqC,cAC9BE,mBAAeH,IAEnB,KAAKhE,EAAY6E,gBACf,OAAO,eACFrD,EADL,CAEEyC,cAAexC,EAAOG,QAAQqC,cAC9BE,cAAe1C,EAAOG,QAAQuC,gBAGlC,KAAKnE,EAAY8E,cACf,OAAO,eACFtD,EADL,CAEEoC,UAAU,EACVC,WAAYpC,EAAOG,QAAQiC,aAG/B,KAAK7D,EAAY+E,cACf,OAAO,eACFvD,EADL,CAEEoC,UAAU,EACVC,WAAYpC,EAAOG,QAAQiC,WAC3BO,MAAO3C,EAAOG,QAAQwC,MACtBC,QAAS,EACTC,aAAc7C,EAAOG,QAAQoD,KAAKV,aAClCC,SAAU9C,EAAOG,QAAQoD,KAAKT,SAC9BC,OAAQ/C,EAAOG,QAAQoD,KAAKR,SAGhC,KAAKxE,EAAYiF,aACf,OAAO,eACFzD,EADL,CAEEoC,UAAU,EACVC,WAAYpC,EAAOG,QAAQiC,aAG/B,KAAK7D,EAAYkF,YACf,OAAO,eACF1D,EADL,CAEEoC,UAAU,IAGd,KAAK5D,EAAYmF,OACf,OAAO,eACF3D,EADL,CAEEoC,UAAU,EACVC,WAAYpC,EAAOG,QAAQiC,aAG/B,QACE,OAAOrC,K,SHtEDiD,K,YAAAA,E,8BAAAA,E,yBAAAA,E,2BAAAA,E,YAAAA,E,6BAAAA,E,uBAAAA,E,oBAAAA,M,cCGAC,K,oBAAAA,E,sBAAAA,E,uBAAAA,M,KAYL,IGnBF1E,EHmBQC,EAAqC,CAChDmF,KAAMV,EAAiBW,SACvBC,aAAc,CAAEC,MAAO,EAAGC,IAAK,GAC/BC,UAAW,CACTC,KAAM,cACNC,YAAa,GACbC,MAAO,UACPC,SAAUpB,EAAeqB,KACzBP,MAAO,EACPC,IAAK,EACLO,QAAS,K,SG7BR/F,K,kCAAAA,E,gEAAAA,E,4DAAAA,E,wDAAAA,E,sEAAAA,E,0DAAAA,E,gEAAAA,E,oEAAAA,E,gEAAAA,E,8DAAAA,E,wDAAAA,E,gEAAAA,E,8DAAAA,E,gEAAAA,E,6DAAAA,M,KAkBUA,IClBVA,EDkBUA,IEhBAuB,ECOX,WAGwB,IAF1BC,EAEyB,uDAFKvB,EAC9BwB,EACyB,uCACzB,OAAQA,EAAOC,MACb,KAAK1B,EAAYgG,SACf,OAAO,eACFxE,EADL,CAEE4D,KAAM3D,EAAOG,QAAQwD,OAEzB,KAAKpF,EAAYiG,wBACf,OAAO,eACFzE,EADL,CAEE8D,aAAa,eACR9D,EAAM8D,aADC,CAEVC,MAAO9D,EAAOG,QAAQ2D,UAG5B,KAAKvF,EAAYkG,sBACf,OAAO,eACF1E,EADL,CAEE8D,aAAa,eACR9D,EAAM8D,aADC,CAEVE,IAAK/D,EAAOG,QAAQ4D,QAI1B,KAAKxF,EAAYmG,oBACf,OAAO,eACF3E,EADL,CAEEiE,UAAU,eACLjE,EAAMiE,UADF,CAEPC,KAAMjE,EAAOG,QAAQ8D,SAI3B,KAAK1F,EAAYoG,2BACf,OAAO,eACF5E,EADL,CAEEiE,UAAU,eACLjE,EAAMiE,UADF,CAEPE,YAAalE,EAAOG,QAAQ+D,gBAIlC,KAAK3F,EAAYqG,qBACf,OAAO,eACF7E,EADL,CAEEiE,UAAU,eACLjE,EAAMiE,UADF,CAEPG,MAAOnE,EAAOG,QAAQgE,UAI5B,KAAK5F,EAAYsG,wBACf,OAAO,eACF9E,EADL,CAEEiE,UAAU,eACLjE,EAAMiE,UADF,CAEPI,SAAUpE,EAAOG,QAAQiE,aAG/B,KAAK7F,EAAYuG,0BACf,OAAO,eACF/E,EADL,CAEEiE,UAAU,eACLjE,EAAMiE,UADF,CAEPF,MAAO9D,EAAOG,QAAQ2D,UAG5B,KAAKvF,EAAYwG,wBACf,OAAO,eACFhF,EADL,CAEEiE,UAAU,eACLjE,EAAMiE,UADF,CAEPD,IAAK/D,EAAOG,QAAQ4D,QAG1B,KAAKxF,EAAYyG,uBACf,OAAO,eACFjF,EADL,CAEEiE,UAAU,eACLjE,EAAMiE,UADF,CAEPM,QAAStE,EAAOG,QAAQmE,YAG9B,KAAK/F,EAAY0G,oBACf,OAAO,eACFlF,EADL,CAEEiE,UAAU,eACLjE,EAAMiE,UADF,CAEPC,KAAM,cACNC,YAAa,GACbC,MAAO,UACPC,SAAUpB,EAAeqB,KACzBC,QAAS,MAGf,QACE,OAAOvE,K,SF5GRxB,K,yEAAAA,E,yEAAAA,E,iEAAAA,E,qEAAAA,E,kEAAAA,M,KAQUA,QGNAuB,ECGwD,WAGnD,IAFlBC,EAEiB,uDAFKvB,EACtBwB,EACiB,uCACjB,OAAQA,EAAOC,MACb,KAAK1B,EAAY2G,iCACf,OAAO,eACFnF,EADL,CAEEtB,0BAA0B,eACrBsB,EAAMtB,0BADc,CAEvBC,UAAU,EACVC,SAAUqB,EAAOG,QAAQxB,aAG/B,KAAKJ,EAAY4G,iCACf,OAAO,eACFpF,EADL,CAEEtB,0BAA0B,eACrBsB,EAAMtB,0BADc,CAEvBC,UAAU,MAGhB,KAAKH,EAAY6G,6BACf,OAAO,eACFrF,EADL,CAEEf,sBAAsB,eACjBe,EAAMf,sBADU,CAEnBN,UAAU,MAGhB,KAAKH,EAAY8G,6BAQjB,KAAK9G,EAAY8G,6BACf,OAAO,eACFtF,EADL,CAEEtB,0BAA0B,eACrBsB,EAAMtB,0BADc,CAEvBC,UAAU,MAIhB,QACE,OAAOqB,IC3BPuF,EAAwB,SAACC,GAAD,OAAgB,SAACC,GAAD,OAAe,SAACxF,GAC5D,GAAIA,EAAOC,OAAS1B,EAAYqC,uBAAwB,OAAO4E,EAAKxF,GACpEwF,EAAKxF,GACLyF,aAAY,SAAeC,KAAKC,UAAUJ,EAAMK,eAG5CC,EAAoB,WACxB,IACE,IAAMC,EAAiBL,aAAaM,QAAQ,YAC5C,GAAuB,OAAnBD,EAAyB,MAAM,IAAIE,MAEvC,OpBOqB,SAACjG,GAAD,sBACpBA,EADoB,CAEvBkG,KAAMzH,IoBTG0H,CADiBR,KAAKS,MAAML,IAEnC,MAAOM,GACP,S,sBCGWC,EAtCQ,SAACC,GAAD,OACrB,yBAAKC,GAAG,YACN,uCACEA,GAAG,oBACH3H,EAAG,EACHC,EAAG,EACH2H,QAAQ,eACRC,SAAS,YACLH,GAEJ,+BAEI,6HAGJ,6BACEI,GAAI,OACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,KAAK,OACLC,OAAO,OACPC,YAAa,OACbC,iBAAkB,KAEpB,0BAAMC,UAAU,cAAcC,EAAE,yBAChC,0BACED,UAAU,cACVC,EAAE,qxIAEJ,0BACED,UAAU,cACVC,EAAE,+JChBKC,G,MAZgD,SAAC,GAEpC,IAD1BC,EACyB,EADzBA,KAEA,OACE,yBAAKH,UAAU,mBACb,6BACE,8BAAOG,O,yDC+DA,GACbC,gBAnEsB,iBAAe,CACrCrH,KAAM1B,EAAY2E,iBAClB/C,QAAS,CACPqC,cAAejB,EAAcgG,WAiE/BC,gBA7DsB,iBAAe,CACrCvH,KAAM1B,EAAY4E,iBAClBhD,QAAS,CACPqC,cAAejB,EAAckG,WA2D/BC,eAvDqB,SAACtB,GAAD,MAAoC,CACzDnG,KAAM1B,EAAY6E,gBAClBjD,QAAS,CACPqC,cAAejB,EAAcoG,OAC7BjF,cAAe0D,KAoDjB1D,cAhDoB,SAAC0D,GAAD,MAAyB,CAC7CnG,KAAM1B,EAAYqJ,eAClBxB,MAAOA,IA+CPyB,aA5CmB,iBAAe,CAClC5H,KAAM1B,EAAY8E,cAClBlD,QAAS,CACPiC,WAAYd,EAAWiG,WA0CzBO,aAtCmB,SACnBvE,EACAZ,GAFmB,MAGP,CACZ1C,KAAM1B,EAAY+E,cAClBnD,QAAS,CACPiC,WAAYd,EAAWmG,QACvBlE,KAAMA,EACNZ,MAAOA,KA+BToF,YA3BkB,SAAC3B,GAAD,MAAoC,CACtDnG,KAAM1B,EAAYiF,aAClBrD,QAAS,CACPiC,WAAYd,EAAWqG,OACvBrF,WAAY8D,KAwBd9D,WApBiB,SAAC8D,GAAD,MAAyB,CAC1CnG,KAAM1B,EAAYkF,YAClB2C,MAAOA,IAmBP4B,OAhBa,iBAAe,CAC5B/H,KAAM1B,EAAYmF,OAClBvD,QAAS,CACPiC,WAAYd,EAAWe,eCzCrB4F,E,YACJ,WAAY3B,GAAsB,IAAD,8BAC/B,4CAAMA,KAGR4B,sBAAwB,SAACC,GACvB,EAAK7B,MAAM8B,UALoB,E,sEAS/B,OACE,yBAAKlB,UAAU,YACb,6BACE,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,8BAAOmB,KAAK/B,MAAMxD,WAEpB,yBAAKoE,UAAU,cACb,yBACEoB,MAAO,CAAEC,gBAAgB,OAAD,OAASF,KAAK/B,MAAMvD,OAApB,UAI9B,yBAAKmE,UAAU,cAAcsB,QAASH,KAAKH,uBACzC,gD,GAxBUO,IAAMC,WAuCbC,EAP0BC,YACvCC,aAtDsB,SAAC9I,GAAD,MAA0C,CAChEoC,SAAUpC,EAAMwD,KAAKpB,SACrBW,SAAU/C,EAAMwD,KAAKT,SACrBC,OAAQhD,EAAMwD,KAAKR,WAGM,SAAC+F,GAAD,MAAkD,CAC3EV,OAAQ,WACNU,EAASC,EAAYf,cA8CvBa,CAA6CZ,ICuChC,G,MAAA,CACbe,WA/FiB,SAAC7J,GAAD,MAA8B,CAC/Cc,KAAM1B,EAAY2B,aAClBC,QAAS,CACPhB,QAASA,KA6FX8J,iBAzFuB,SAAC9J,GAAD,MAA8B,CACrDc,KAAM1B,EAAY6B,mBAClBD,QAAS,CACPhB,QAASA,KAuFX+J,iBAnFuB,SAACpK,GAAD,MAAyC,CAChEmB,KAAM1B,EAAY8B,mBAClBF,QAAS,CACPd,MAAOP,EAAKqK,YAAYC,WAAWC,QAAQ,QAAS,YACpD9J,MAAOT,EAAKS,MACZD,OAAQR,EAAKyE,KAAK+F,YA+EpBC,eA3EqB,SAACnD,GAAD,MAAyB,CAC9CnG,KAAM1B,EAAY+B,iBAClB8F,MAAOA,IA0EPoD,eAvEqB,SAAChK,GAAD,MAAkC,CACvDS,KAAM1B,EAAYgC,iBAClBJ,QAAS,CACPX,YAAaA,KAqEfiK,iBAjEuB,SAAC7J,GAAD,MAA+B,CACtDK,KAAM1B,EAAYiC,mBAClBL,QAAS,CACPP,SAAUA,KA+DZ8J,eA3DqB,SAAChJ,GAAD,MAA8B,CACnDT,KAAM1B,EAAYkC,iBAClBN,QAAS,CACPO,OAAQA,KAyDViJ,kBArDwB,iBAAe,CACvC1J,KAAM1B,EAAYoC,sBAqDlBiJ,oBAlD0B,SAAClK,GAAD,MAAkC,CAC5DO,KAAM1B,EAAYqC,uBAClBT,QAAS,CACPT,YAAaA,KAgDfmK,gBA5CsB,SAAClK,GAAD,MAA8B,CACpDM,KAAM1B,EAAYsC,mBAClBV,QAAS,CACPR,QAASA,KA0CXmK,oBA/B0B,SAAChL,GAAD,MAIb,CACbmB,KAAM1B,EAAYuC,sBAClBX,QAAS,CACPZ,MAAOT,EAAKS,MACZF,MAAOP,EAAKO,MACZC,OAAQR,EAAKQ,UAuBfyK,iBAnBuB,SAAC3K,GAAD,MAAwB,CAC/Ca,KAAM1B,EAAYwC,mBAClBZ,QAAS,CACPf,SAAUA,KAiBZ4K,eAxCqB,SAACnK,GAAD,MAA6B,CAClDI,KAAM1B,EAAYyC,iBAClBb,QAAS,CACPN,OAAQA,O,gBChFCoK,GAAU,mCC8FR,IACbjB,WApFiB,SAAC7J,GAAD,MAA8B,CAC/Cc,KAAM1B,EAAY2B,aAClBC,QAAS,CACPhB,QAASA,KAkFX8J,iBA9EuB,SAAC9J,GAAD,MAA8B,CACrDc,KAAM1B,EAAY6B,mBAClBD,QAAS,CACPhB,QAASA,KA4EX+J,iBAxEuB,SAACpK,GAAD,MAAyC,CAChEmB,KAAM1B,EAAY8B,mBAClBF,QAAS,CACPd,MAAOP,EAAKqK,YAAYC,WAAWC,QAAQ,QAAS,YACpD9J,MAAOT,EAAKS,MACZD,OAAQR,EAAKyE,KAAK+F,SAClB1J,SAAUd,EAAKc,SAAW,OAmE5B2J,eA/DqB,SAACnD,GAAD,MAAyB,CAC9CnG,KAAM1B,EAAY+B,iBAClB8F,MAAOA,IA8DP8D,iBA3DuB,iBAAe,CACtCjK,KAAM1B,EAAYiD,qBA2DlB2I,iBAxDuB,SAACjJ,GAAD,MAAkC,CACzDjB,KAAM1B,EAAYkD,oBAClBtB,QAAS,CACPe,KAAMA,KAsDRkJ,eAlDqB,SAAChE,GAAD,MAAyB,CAC9CnG,KAAM1B,EAAYmD,iBAClB0E,MAAOA,IAiDPiE,oBA9C0B,iBAAe,CACzCpK,KAAM1B,EAAYoD,wBA8ClB2I,oBA3C0B,SAACjJ,GAAD,MAAqC,CAC/DpB,KAAM1B,EAAYqD,uBAClBzB,QAAS,CACPkB,QAASA,KAyCXkJ,kBArCwB,SAACnE,GAAD,MAAyB,CACjDnG,KAAM1B,EAAYsD,oBAClBuE,MAAOA,IAoCPoE,YAnBkB,iBAAe,CACjCvK,KAAM1B,EAAY0D,gBAmBlBwI,oBAlC0B,SAAC1I,GAAD,MAA+B,CACzD9B,KAAM1B,EAAYuD,uBAClB3B,QAAS,CACP4B,SAAUA,KAgCZ2I,gBA5BsB,SAAC3I,GAAD,MAA+B,CACrD9B,KAAM1B,EAAYyD,mBAClB7B,QAAS,CACP4B,SAAUA,KA0BZ4I,cAlBoB,iBAAe,CACnC1K,KAAM1B,EAAY2D,mBCrBL,QACb0I,WAhEF,WAA0C,IAAtBzL,EAAqB,uDAAH,EACpC,OAAO,SACL2J,EACAlD,GAFK,qBAAAiF,EAAAC,OAAA,uDAIA3L,QAAuBoD,IAAZpD,IAAuBA,EAAUyG,IAAWmF,MAAM5L,SAC7DA,IAASA,EAAU,WAClB6L,EAND,4CAMwD7L,EANxD,sBAM6E8K,IAC5EgB,EAPD,4CAOyD9L,EAPzD,6BAOqF8K,IAPrF,SASHnB,EAASoC,EAAQlC,WAAW7J,IAC5B2J,EAASoC,EAAQjC,iBAAiB9J,IAV/B,WAAA0L,EAAA,MAW8BM,MAAMH,IAXpC,cAWGI,EAXH,mBAAAP,EAAA,MAYsCO,EAASC,QAZ/C,QAYGvM,EAZH,OAaHgK,EAASoC,EAAQhC,iBAAiBpK,IAClCgK,EAASoC,EAAQ1B,eAAeyB,IAd7B,yDAgBHnC,EAASoC,EAAQ3B,eAAR,OAhBN,8EAgEP+B,sBA1CF,SAA+BxM,GAO7B,OAAO,SAACgK,EAA+BlD,GACrC,IAAMqF,EAAgB,4CAAwCnM,EAAKK,QAA7C,6BAAyE8K,IAC/FnB,EAASoC,EAAQlC,WAAWlK,EAAKK,UACjC2J,EACEoC,EAAQpB,oBAAoB,CAC1BzK,MAAOP,EAAKO,MACZC,OAAQR,EAAKQ,OACbC,MAAOT,EAAKS,SAGhBuJ,EAASoC,EAAQ1B,eAAeyB,IAChCnC,EAASoC,EAAQnB,iBAAiBjL,EAAKM,aAyBzCmM,4BArBF,SAAqCnM,GACnC,OAAO,SAAC0J,EAA+BlD,GAAoC,IAAD,EAC9BA,IAAW4F,YAA7CrM,EADgE,EAChEA,QAASE,EADuD,EACvDA,MAAOC,EADgD,EAChDA,OAAQC,EADwC,EACxCA,MAC1B0L,EAAgB,4CAAwC9L,EAAxC,6BAAoE8K,IAC1FnB,EAASoC,EAAQlC,WAAW7J,IAC5B2J,EACEoC,EAAQpB,oBAAoB,CAC1BzK,MAAOA,EACPC,OAAQA,EACRC,MAAOA,KAGXuJ,EAASoC,EAAQ1B,eAAeyB,IAChCnC,EAASoC,EAAQnB,iBAAiB3K,IAClC0J,EAAS2C,GAAmBjB,kBChE1BkB,GAAS,SAACC,EAAaC,GAC3B,OAAOC,KAAKC,MAAMD,KAAKH,UAAYE,EAAMD,IAAQA,GAuB7CI,GAAe,SAACC,EAAuBjK,GAG3C,IAFA,IAAIkK,EAAyB,GAEpBC,EAAI,EAAGA,EAAIR,GAAO,EAAG,MAAOQ,EACnCD,EAAQE,KAAKC,GAAaJ,IAG5B,MAAO,CACLjK,SAAUA,EACVwB,KAAM,CACJX,OAAQ8I,GAAO,EAAG,KAClB5I,SAAS,QAAD,OAAU4I,GAAO,IAAM,OAC/B3I,OAAQ,IAEVkJ,QAASA,IAIPI,GAA6B,CACjC,OACA,QACA,OACA,OACA,QACA,QACA,SACA,YACA,SACA,aACA,KACA,SACA,QACA,UACA,UACA,OACA,aACA,OACA,QACA,QACA,QACA,mBACA,cACA,UAEIC,GAA+B,CACnC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIF,GAAe,SAACJ,GACpB,IAAIO,EAAcb,GAAO,EAAGG,KAAKC,MAAME,GAAiB,EAAI,IAExDQ,EAAYD,EADKb,GAAO,EAAG,IAE/B,MAAO,CACLzH,KAAMoI,GAAYX,GAAO,EAAGW,GAAYI,SACxCvI,YAAa,GACbC,MAAOmI,GAAcZ,GAAO,EAAGY,GAAcG,SAC7C3I,MAAOyI,EACPxI,IAAKyI,EACLpI,SAAUpB,EAAeqB,KACzBC,QAASoH,GAAO,EAAG,KAIR,IACbgB,WAhGiB,WAKjB,IAJA,IAAIxL,EAAsB,GACtByK,EAAcE,KAAKc,KAAK,IACxBf,EAAcC,KAAKC,MAAM,IAEpBI,EAAI,EAAGA,EAAI,MAAOA,EACzBhL,EAAKiL,KAAKT,GAAOC,EAAKC,IAGxB,OAAO1K,GAwFP0L,cArFoB,SAACZ,GAErB,IADA,IAAI3K,EAAyB,GACpB6K,EAAI,EAAGA,EAAI,IAAKA,EACvB7K,EAAQ8K,KAAKJ,GAAaC,EAAeE,EAAI,IAE/C,OAAO7K,ICmCM,QACbwL,iBAlDF,SAA0B1N,GAAiD,IAAhCiC,EAA+B,wDAAH,EACrE,OAAO,SACL0H,EACAlD,GAFK,6BAAAiF,EAAAC,OAAA,uDAIL1J,EAAmB0L,MAAM1L,IAAqB,EAAIA,EAClD0H,EAASoC,GAAQlC,WAAW7J,IACxBA,IAAYyG,IAAWmF,MAAM5L,SAC/B2J,EAASoC,GAAQP,iBAEbK,EATD,4CASwD7L,EATxD,sBAS6E8K,IAT7E,qBAYHnB,EAASoC,GAAQjC,iBAAiB9J,IAZ/B,WAAA0L,EAAA,MAa8BM,MAAMH,IAbpC,cAaGI,EAbH,mBAAAP,EAAA,MAcsCO,EAASC,QAd/C,QAcGvM,EAdH,OAeHgK,EAASoC,GAAQhC,iBAAiBpK,IAf/B,yDAiBHgK,EAASoC,GAAQ3B,eAAR,OAjBN,qCAqBHT,EAASoC,GAAQhB,oBACX6C,EAAeC,GAAMN,aAC3B5D,EAASoC,GAAQf,iBAAiB4C,IAvB/B,0DAyBHjE,EAASoC,GAAQd,eAAR,OAzBN,2BA4BL,IACQxH,EAASgD,IAAWrC,KAAKX,OAC/BkG,EAASoC,GAAQb,uBACX4C,EAA6BD,GAAMJ,cAAc,KACjDM,EAAiCD,EAAYE,MACjD,SAAAC,GAAM,OAAIA,EAAOrL,WAAaa,KAE1BzB,OAA8BoB,IAAf2K,GAA4B,EAAIA,EAAWnL,SAChE+G,EAASoC,GAAQZ,oBAAoB2C,IACrCnE,EAASoC,GAAQT,oBAAoBrJ,IACrC0H,EAASoC,GAAQR,gBAAgBvJ,IACjC,MAAOiF,GACP0C,EAASoC,GAAQX,kBAAkBnE,IAEjCjH,GAAWyG,IAAWmF,MAAM5L,SAC9B2J,EAASoC,GAAQV,eA3Cd,oECwBT,SAAS6C,GAAkBtN,GAAsC,IAAD,EACxBA,EAAMyL,YAApCpK,EADsD,EACtDA,iBACR,OAF8D,EACpCC,QACX8L,MAAK,SAAAC,GAAM,OAAIA,EAAOrL,WAAaX,KAkBrC,QACbkM,cAnDF,SAAuBvN,GAA0B,IAAD,EACCA,EAAMwD,KAA7CpB,EADsC,EACtCA,SAAUW,EAD4B,EAC5BA,SAAUC,EADkB,EAClBA,OAAQH,EADU,EACVA,OACpC,IAAKT,EACH,MAAO,CACLJ,UAAW,EACXwB,KAAM,CACJX,OAAQ,EACRE,SAAS,GACTC,OAAO,IAETkJ,QAAS,IAViC,MAaZlM,EAAMyL,YAAhCrK,EAbsC,EAatCA,aACFiM,EAdwC,EAaxB/L,QACqB8L,MACzC,SAAAC,GAAM,OAAIA,EAAOrL,WAAaZ,KAEhC,YAAkBoB,IAAX6K,EACHA,EACA,CACErL,UAAW,EACXwB,KAAM,CACJX,OAAQA,EACRE,SAAUA,EACVC,OAAQA,GAEVkJ,QAAS,KA0BfoB,qBACAE,mBARF,SAA4BxN,GAC1B,IAAMyN,EAAqCH,GAAkBtN,GAC7D,YAA0BwC,IAAnBiL,EAA+BA,EAAevB,QAAU,IAO/DwB,gBAfF,SAAyB1N,GAAiC,IAChDsB,EAAYtB,EAAMyL,YAAlBnK,QACAuB,EAAW7C,EAAMwD,KAAjBX,OACR,OAAOvB,EAAQqM,QAAO,SAAAN,GAAM,OAAIA,EAAO7J,KAAKX,QAAUA,OCuIzC,IACb+K,QAhGc,SAAChK,GAAD,MAA4C,CAC1D1D,KAAM1B,EAAYgG,SAClBpE,QAAS,CACPwD,KAAMA,KA8FRiK,qBA1F2B,SAAC9J,GAAD,MAAiD,CAC5E7D,KAAM1B,EAAYiG,wBAClBrE,QAAS,CACP2D,MAAOA,KAwFT+J,mBApFyB,SAAC9J,GAAD,MAA6C,CACtE9D,KAAM1B,EAAYkG,sBAClBtE,QAAS,CACP4D,IAAKA,KAkFP+J,sBA9E4B,SAC5BhK,GAD4B,MAEK,CACjC7D,KAAM1B,EAAYuG,0BAClB3E,QAAS,CACP2D,MAAOA,KA0ETiK,oBAtE0B,SAAChK,GAAD,MAA8C,CACxE9D,KAAM1B,EAAYwG,wBAClB5E,QAAS,CACP4D,IAAKA,KAoEPiK,iBAhEuB,SAAC/J,GAAD,MAA2C,CAClEhE,KAAM1B,EAAYmG,oBAClBvE,QAAS,CACP8D,KAAMA,KA8DRgK,wBA1D8B,SAC9B/J,GAD8B,MAEK,CACnCjE,KAAM1B,EAAYoG,2BAClBxE,QAAS,CACP+D,YAAaA,KAsDfgK,kBAlDwB,SAAC/J,GAAD,MAAkD,CAC1ElE,KAAM1B,EAAYqG,qBAClBzE,QAAS,CACPgE,MAAOA,KAgDTgK,qBA5C2B,SAC3B/J,GAD2B,MAEK,CAChCnE,KAAM1B,EAAYsG,wBAClB1E,QAAS,CACPiE,SAAUA,KAwCZgK,oBApC0B,SAC1B9J,GAD0B,MAEK,CAC/BrE,KAAM1B,EAAYyG,uBAClB7E,QAAS,CACPmE,QAASA,KAgCX+J,kBA5BwB,iBAAgC,CACxDpO,KAAM1B,EAAY0G,uBClHL,QACbqJ,eA1CF,WACE,OAAO,SAACxF,EAA+BlD,GAAoC,IACjElG,EAAgBkG,IAAWmF,MAA3BrL,YADgE,EAE7BkG,IAAW4F,YAA9CpK,EAFgE,EAEhEA,iBAAkBD,EAF8C,EAE9CA,aACtBA,IAAiBC,GACnB0H,EAASyF,GAAkB9D,oBAAoBtJ,IAEjD2H,EAAS0F,GAAoBb,QAAQ1K,EAAiBwL,YACtD3F,EAAS0F,GAAoBZ,qBAAqBlO,MAmCpDgP,cA/BF,WACE,OAAO,SAAC5F,EAA+BlD,GAAoC,IACjElG,EAAgBkG,IAAWmF,MAA3BrL,YACAmE,EAAiB+B,IAAW+I,aAA5B9K,aACJnE,IAAgBmE,EAAaC,OAKjCgF,EAAS0F,GAAoBb,QAAQ1K,EAAiB2L,YACtD9F,EAAS0F,GAAoBX,mBAAmBnO,IAChDoJ,EAAS0F,GAAoBV,sBAAsBjK,EAAaC,QAChEgF,EAAS0F,GAAoBT,oBAAoBrO,IACjDoJ,EAAS0F,GAAoBH,sBAR3BvF,EAAS0F,GAAoBb,QAAQ1K,EAAiBW,aA2B1DiL,WAfF,SAAoBC,GAClB,OAAO,SAAChG,EAA+BlD,GAAoC,IACjE5B,EAAc4B,IAAW+I,aAAzB3K,UACF+K,EAAqB/K,EAAUF,MAC/BkL,EAAgBF,EAAYC,EAE5BE,EADmBjL,EAAUD,IACAiL,EACnClG,EAAS0F,GAAoBV,sBAAsBgB,IACnDhG,EAAS0F,GAAoBT,oBAAoBkB,OCjCxCC,GAAW,SAACC,GACvBC,OAAOF,SAAS,EAAGC,EAAIE,QAAQC,YAGpBC,GAAkB,SAACC,GAC9B,IAAIC,EAAY5D,KAAKC,MAAMD,KAAK6D,IAAIF,GAAW,IAC/CA,GAAW,GACX,IAAIG,EAAY9D,KAAKC,MAAM0D,GACvBI,EAAa/D,KAAKC,MAAgB,IAAV0D,GAAkB,IAG9C,OAFAI,EAAK/D,KAAK6D,IAAIE,GAEP,CACLC,OAAQF,EAAI,EAAJ,OACRF,EAAGA,EAAI,GAAJ,WAAa5D,KAAK6D,IAAID,IAAtB,UAAgCA,GACnCE,EAAG9D,KAAK6D,IAAIC,GAAK,GAAd,WAAuB9D,KAAK6D,IAAIC,IAAhC,UAA0C9D,KAAK6D,IAAIC,IACtDC,GAAIA,EAAK,IAAOA,EAAK,GAAL,YAAeA,GAAf,WAA0BA,GAAtC,UAAiDA,KAI5CE,GAAmB,SAACL,EAAWE,EAAWC,GAGrD,OADc,GAAJH,EAASE,EAAIC,EAAK,KAIjBG,GAAe,SAC1BC,EACAlR,GAF0B,eAAA+L,EAAAC,OAAA,sDAQH,0BARG,WAAAD,EAAA,MASOM,MAAM,GAAD,OADf,2BACe,OAAa6E,GAAY,CAC7DC,OAAQnR,EAAKmR,OACbtM,KAAM,OACNuM,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYvR,EAAK6D,QAEhC2N,SAAU,SACVC,eAAgB,cAChBC,KAAM9K,KAAKC,UAAU7G,EAAK0R,SApBF,cASpBpF,EAToB,kBAAAP,EAAA,MAsBbO,EAASC,QAtBI,8EAyBfoF,GAAyB,SACpC9R,EACA+R,GACc,IAAD,EACuBtB,OAA5BuB,EADK,EACLA,WAAYC,EADP,EACOA,YACpB,MAAO,CACLhS,EACED,EAASC,EAAI8R,EAAKG,MAAQF,EACtBhS,EAASC,EACTD,EAASC,EAAI8R,EAAKG,MACxBhS,EACEF,EAASE,EAAI6R,EAAKI,OAASF,EACvBjS,EAASE,EACTF,EAASE,EAAI6R,EAAKI,SCjE5B,SAASC,GAAOC,EAAeC,GAC7B,OAAO,SACLnI,EACAlD,GAFK,eAAAiF,EAAAC,OAAA,uDAILhC,EAASoC,EAAQrD,gBAJZ,oBAAAgD,EAAA,MAUOkF,GAAa,qBAAsB,CAC3CE,OAAQ,OACRO,KAAM,CACJQ,MAAOA,EACPC,SAAUA,MAdX,WAMGnS,EANH,QAiBO4B,OAjBP,sBAkBDoI,EAASoC,EAAQnD,eACX,iBAnBL,OAqBHe,EAASoC,EAAQpD,aAAahJ,EAAKyE,KAAMzE,EAAK6D,QArB3C,kDAuBHuO,QAAQ9K,MAAR,MACA0C,EAASoC,EAAQ5I,WAAR,OAxBN,0DAgEM,QACbyO,UACAI,OArCF,SACEH,EACAC,EACAG,GAEA,OAAO,SACLtI,EACAlD,GAFK,eAAAiF,EAAAC,OAAA,gEAKHhC,EAASoC,EAAQ5D,mBALd,WAAAuD,EAAA,MASOkF,GAAa,iBAAkB,CACvCE,OAAQ,OACRO,KAAM,CACJQ,MAAOA,EACPC,SAAUA,EACVG,cAAeA,MAdhB,WAMGtS,EANH,QAiBO4B,OAjBP,sBAkBDoI,EAASoC,EAAQxD,eAAe5I,EAAKsH,QAC/B,oBAnBL,cAqBH0C,EAASoC,EAAQ1D,mBArBd,kBAsBIuJ,GAAOC,EAAOC,IAtBlB,kCAwBHC,QAAQ9K,MAAR,MACA0C,EAASoC,EAAQxI,cAAR,OAzBN,4DC0CM,GAnDuB,SACpC3D,EACAJ,GAFoC,MAGK,CACzCsB,KAAM1B,EAAY2G,iCAClB/E,QAAS,CACPxB,SAAUA,EACVG,KAAM,CAAEC,OAAQA,MA4CL,GApCuB,iBAA4C,CAChFkB,KAAM1B,EAAY4G,mCCxBdkM,G,YAOJ,WAAY/K,GAAuB,IAAD,8BAChC,4CAAMA,KAPRvG,MAAuB,CACrBuR,UAAW,EACXC,aAAc,GACdC,gBAAiB,IAGe,EAIlCC,sBAAwB,SAACtJ,GACnB,EAAK7B,MAAMnE,UAA6B,IAAjBgG,EAAMuJ,SACjC,EAAKC,SAAS,CACZL,UAAW,EACXC,aAAcpJ,EAAMyJ,OAAOC,SARG,EAYlCC,yBAA2B,SAAC3J,GACtB,EAAK7B,MAAMnE,UAA6B,IAAjBgG,EAAMuJ,SACjC,EAAKC,SACH,CACEL,UAAW,EACXE,gBAAiBrJ,EAAMyJ,OAAOC,QAEhC,WACE,EAAKvL,MAAMyK,OAAO,EAAKhR,MAAMwR,aAAc,EAAKxR,MAAMyR,qBApB1B,E,sEA0BhC,IAAMO,EACJ,2BACE9R,KAAK,OACL+R,WAAS,EACTC,YAAY,gBACZC,SAAU7J,KAAK/B,MAAMnE,SACrBgQ,QAAS9J,KAAKoJ,wBAIZW,EACJ,2BACEnS,KAAK,WACL+R,WAAS,EACTC,YAAY,mBACZC,SAAU7J,KAAK/B,MAAMnE,SACrBgQ,QAAS9J,KAAKyJ,2BAGdO,EAAoB,GAGxB,OAF4B,GAAxBhK,KAAKtI,MAAMuR,YAAgBe,EAAY,aACf,GAAxBhK,KAAKtI,MAAMuR,YAAgBe,EAAY,YAEzC,yBAAKnL,UAAU,aACb,6BACE,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACY,GAAxBmB,KAAKtI,MAAMuR,WAAkBS,EACL,GAAxB1J,KAAKtI,MAAMuR,WAAkBc,GAEhC,yBAAKlL,UAAU,cACb,6BACE,uBAAGA,UAAWmL,a,GAjEP5J,IAAMC,WAkFd4J,GAP2B1J,YACxCC,aAjGsB,SAAC9I,GAAD,MAA2C,CACjEoC,SAAUpC,EAAMwD,KAAKpB,aAGI,SAAC2G,GAAD,MAAmD,CAC5EiI,OAAQ,SAACC,EAAeC,GACtBnI,EAASyJ,GAAqBxB,OAAOC,EAAOC,QA2F9CpI,CAA6CwI,KCtFzCmB,G,YACJ,WAAYlM,GAAqB,qEACzBA,I,sEAIN,OACE,yBAAKY,UAAU,WACb,6BACGmB,KAAK/B,MAAMnE,SAAW,kBAAC,EAAD,MAAuB,kBAAC,GAAD,Y,GATnCsG,IAAMC,WAqBZ+J,GALiD5J,aA5BxC,SAAC9I,GAAD,MAAmC,CACzDoC,SAAUpC,EAAMwD,KAAKpB,aAGI,SAAC2G,GAAD,MAA8B,KAwBOD,CAG9D2J,ICaaE,GA5CQ,WACrB,OACE,yBAAKxL,UAAU,QACb,yBAAKA,UAAU,oBACb,kBAAC,GAAD,OAGF,yBAAKA,UAAU,gBACb,6BACE,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAgByL,KAAK,GAAGtL,KAAK,UAI7B,wBAAIH,UAAU,WACZ,6BACE,kBAAC,IAAD,CAAS0L,gBAAgB,WAAWC,GAAG,SACrC,4BACE,wCAGJ,kBAAC,IAAD,CAASD,gBAAgB,WAAWC,GAAG,eACrC,4BACE,8CAGJ,kBAAC,IAAD,CAASD,gBAAgB,WAAWC,GAAG,SACrC,4BACE,yD,4BCOhBC,I,kBACJ,WAAYxM,GAAwB,IAAD,8BACjC,4CAAMA,KAGRyM,sBAAwB,SAAC5K,GAClB,EAAK7B,MAAMrF,eACd,EAAKqF,MAAM0M,0BAEb,EAAK1M,MAAM2M,uBARsB,EAWnCC,kBAAoB,SAAC/K,GACnB+I,QAAQiC,IAAIhL,EAAMiL,YAAYC,UAZG,EAgBnCC,iBAAmB,SAACnL,EAAuBrJ,KAhBR,EAoBnCyU,qBAAuB,SAACpL,EAAuBrJ,GAC7C,EAAKwH,MAAMkN,eAAe1U,EAAKF,EAAI,MArBF,E,sEAyBjC,IAAM8B,EAAkB2H,KAAK/B,MAAMrF,eAAiBoH,KAAK/B,MAAM7G,UAC3DgU,EAA8B/S,EAAS,gBAAkB,SACzDgT,EAAyBhT,EAAS,aAAe,YACjDb,EAAqC,IAApBwI,KAAK/B,MAAMzG,OAChC,OACE,yBAAKqH,UAAU,cACb,6BACE,yBAAKA,UAAU,mBACb,6BACE,yBACEA,UAAU,cACVoB,MAAO,CAAEC,gBAAgB,OAAD,OAASF,KAAK/B,MAAMjH,MAApB,UAI9B,yBAAK6H,UAAU,qBACb,yBAAKA,UAAU,qBACb,6BACE,yBAAKA,UAAU,gBACb,8BAAOmB,KAAK/B,MAAMhH,SAEpB,yBAAK4H,UAAU,eACb,8BAAOmB,KAAK/B,MAAM/G,UAIxB,yBAAK2H,UAAU,gBACb,6BACE,yBAAKA,UAAU,cACb,yBACEA,UAAWuM,EACXjL,QAASH,KAAK0K,uBAEd,uBAAG7L,UAAWwM,MAGlB,yBAAKxM,UAAU,cACb,yBAAKA,UAAU,UACb,uBAAGA,UAAU,uBAGjB,yBAAKA,UAAU,cACb,yBAAKA,UAAU,UACb,uBAAGA,UAAU,gBAGjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,uBAAGA,UAAU,iBAEf,yBAAKA,UAAU,SACb,yBAAKA,UAAU,qBACb,yBACEA,UAAU,cACVsB,QAASH,KAAK6K,mBAEd,kBAAC,KAAD,CACES,KAAK,IACLC,OAAO,eACPC,OAAQxL,KAAKiL,iBACbQ,OAAQzL,KAAKkL,qBACb5U,SAAU,CAAEC,EAAGiB,EAAQhB,EAAG,IAE1B,yBAAKqI,UAAU,oBACb,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,WAGnB,yBAAKA,UAAU,sB,GA/FjBuB,IAAMC,YAmHfqL,GALuDlL,aAnJ9C,SAAC9I,GAAD,MAA4C,CAClEZ,QAASY,EAAMyL,YAAYrM,QAC3BE,MAAOU,EAAMyL,YAAYnM,MACzBC,OAAQS,EAAMyL,YAAYlM,OAC1BC,MAAOQ,EAAMyL,YAAYjM,MACzB0B,cAAelB,EAAMyL,YAAYvK,cACjCxB,UAAWM,EAAMgL,MAAMtL,UACvBI,OAAQE,EAAMgL,MAAMlL,WAGK,SAACiJ,GAAD,MAAoD,CAC7EkK,wBAAyB,WACvBlK,EAASyJ,GAAsBhH,6BAA4B,KAE7D0H,oBAAqB,WACnBnK,EAASyJ,EAAmB5I,sBAE9B6J,eAAgB,SAACQ,GACflL,EAASyJ,EAAmBvI,eAAegK,QAiIuBnL,CAGpEiK,ICnHImB,I,MAAmB,KAEnBC,GAAqB,EAErBC,G,YACJ,WAAY7N,GAA8B,qEAClCA,I,sEAGE,IAAD,EAC4B+B,KAAK/B,MAAhC8N,EADD,EACCA,SAAUC,EADX,EACWA,MAAOxC,EADlB,EACkBA,MAEnB/K,EAAesN,EAAW,eAAiB,UAC3CxV,EAAYyV,EAAQH,GAE1B,OACE,uBAAGI,UAAS,oBAAe1V,EAAf,SACV,0BAAMkI,KAAI,UAAKA,GAAQK,EAAC,iBAAY0K,EAAZ,c,GAbFpJ,IAAMC,WAmB9B6L,G,YAIJ,WAAYjO,GAAyB,IAAD,8BAClC,4CAAMA,KAJRkO,iBAGoC,IAFpCC,aAEoC,IAMpCC,aAAe,WAQb,IARwC,IAAD,EACgB,EAAKpO,MAApDrF,EAD+B,EAC/BA,cAAevB,EADgB,EAChBA,YAAaE,EADG,EACHA,SAAUsB,EADP,EACOA,KAC1CyT,EAA6B,GAC3BC,EACJ3T,GAAiBrB,EACbiM,KAAKc,KAAMjN,EAAcE,EAAY,EAAK4U,aAC1C,EAEGtI,EAAI,EAAGA,EAAI0I,IAAc1I,EAChCyI,EAAOxI,KACL,kBAAC,GAAD,CAAiB0I,IAAK3I,EAAGmI,MAAOnI,EAAG2F,MAAO3Q,EAAKgL,GAAIkI,UAAU,KAGjE,IAAK,IAAIlI,EAAI0I,EAAY1I,EAAI,EAAKsI,cAAetI,EAC/CyI,EAAOxI,KACL,kBAAC,GAAD,CAAiB0I,IAAK3I,EAAGmI,MAAOnI,EAAG2F,MAAO3Q,EAAKgL,GAAIkI,UAAU,KAGjE,OAAOO,GAxB2B,EA2BpCG,YAAc,SAAC3M,GAA+C,IAAD,EACvB,EAAK7B,MAAjCrF,EADmD,EACnDA,cAAerB,EADoC,EACpCA,SAClBqB,GACH,EAAKqF,MAAM0M,0BAEb,IAAMK,EAAkBlL,EAAMiL,YAAYC,QAC1C,EAAK/M,MAAMyO,aAAcnV,EAAWqU,GAAYZ,IAjCd,EAoCpC2B,gBAAkB,SAAC7M,GACOA,EAAMiL,YAAYC,SAnC1C,EAAKmB,YAAcP,GAAWC,GAC9B,EAAKO,QAAUhM,IAAMwM,YAHa,E,sEAyClC,OACE,yBAAK/N,UAAU,eACb,yBACEgO,YAAU,kBACVrE,MAAM,OACNC,OAxEgB,IAyEhBtI,QAASH,KAAKyM,YACdK,YAAa9M,KAAK2M,iBAElB,8BACE,oCAAgBzO,GAAG,SAAS6O,GAAG,IAAIC,GAAG,KACpC,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,MAAMC,UAAU,YAC7B,0BAAMD,OAAO,OAAOC,UAAU,cAGjClN,KAAKqM,qB,GA7DSjM,IAAMC,WAyEhB8M,GALyD3M,aA9HhD,SAAC9I,GAAD,MAA6C,CACnEkB,cAAelB,EAAMyL,YAAYvK,cACjCC,KAAMnB,EAAMyL,YAAYtK,KACxBxB,YAAaK,EAAMgL,MAAMrL,YACzBE,SAAUG,EAAMgL,MAAMnL,SACtB6V,mBAAoB1V,EAAMyL,YAAY5L,aAGb,SACzBkJ,GADyB,MAEE,CAC3BkK,wBAAyB,WACvBlK,EAASyJ,GAAsBhH,6BAA4B,KAE7DwJ,aAAc,SAACpV,GACbmJ,EAASyJ,EAAmB1I,gBAAgBlK,QA+GwBkJ,CAGtE0L,IC5FImB,I,kBAOF,WAAYpP,GAA2B,IAAD,8BAClC,4CAAMA,KANVvG,MAA2B,CACvB4V,kBAAmB,EACnBC,kBAAmB,GAGe,EAiCtCC,oBAAsB,SAAC1N,EAAuBrJ,GAC1C,IAAIwW,GAAYxW,EAAKF,GAA0B,EAAtB,EAAK0H,MAAM1G,SAAe,MAAgC,EAAtB,EAAK0G,MAAM1G,SAAe,KACvF,EAAK+R,SAAS,CACViE,mBAA8B,EAAXN,KApCW,EAwCtCQ,qBAAuB,SAAC3N,EAAuBrJ,GAC3C,EAAKwH,MAAMyP,kBAAiB,GAC5B,EAAKpE,SAAS,CACVgE,kBAAmB7W,EAAKF,KA3CM,EA+CtCoX,mBAAqB,SAAC7N,EAAuBrJ,GACzC,IAAMmX,EAAQnX,EAAKF,EAAI,EAAKmB,MAAM4V,kBAC5BhW,EAAU,EAAK2G,MAAM5G,YAAeuW,EAAQ,GAA4B,EAAtB,EAAK3P,MAAM1G,SAAe,KAClF,EAAK0G,MAAM4P,iBAAiBvW,GAC5B,EAAK2G,MAAMyP,kBAAiB,IAnDM,E,6EAKlC,IACII,EACAC,EAFAnK,EAA8B,GADF,uBAOhC,YAAmB5D,KAAK/B,MAAM2F,QAA9B,+CAAuC,CAAC,IAA/BlN,EAA8B,QAEnCoX,EAAiB,CACbtF,MAAM,GAAD,OALO,GAKA9R,EAAOgF,IAAMhF,EAAO+E,OAA3B,MACLuS,UAAW,mBACXC,IAAI,GAAD,OAAsB,GAAjBvX,EAAOuF,QAAZ,KACHgQ,UAAU,aAAD,OARG,EAQYvV,EAAO+E,MAAtB,QAGbsS,EAAc,CACVG,gBAAiBxX,EAAOoF,OAG5B8H,EAAQE,KACJ,yBAAKjF,UAAU,wBAAwBoB,MAAO6N,GAC1C,yBAAKjP,UAAU,cAAcoB,MAAO8N,OAtBhB,kFA0BhC,OAAOnK,I,yCAwBQuK,EAA8BC,GACzCpO,KAAK/B,MAAM5G,cAAgB8W,EAAU9W,aACvC2I,KAAKsJ,SAAS,CACViE,kBAA6C,EAAzBvN,KAAK/B,MAAM5G,aAA0C,EAAtB2I,KAAK/B,MAAM1G,SAAe,S,+BAI7E,IAAD,OAED8W,EAAqC,CACrC9X,EAAGyJ,KAAKtI,MAAM6V,kBACd/W,EAAG,GAGH8X,EAA4B,CAC5B9F,MAA6B,EAAtBxI,KAAK/B,MAAM1G,SAAe,KACjC0U,UAAU,aAAD,QAAiBjM,KAAKtI,MAAM6V,kBAA5B,QAYb,OACI,yBAAK1O,UAAU,2BACX,yBAAKA,UAAU,uBACX,kBAAC,KAAD,CACIyM,KAAK,IACLC,OAAO,uBACPjV,SAAU+X,EACVE,QAASvO,KAAKyN,qBACdjC,OAAQxL,KAAKwN,oBACb/B,OAAQzL,KAAK2N,mBACba,OAAO,wDAEX,yBAAK3P,UAAU,2BAA2BoB,MAnBjD,EAAKhC,MAAM7G,UACO,CAAEqX,WAAW,uBACb,CAAEA,WAAW,YAoB5B,yBAAK5P,UAAU,qBAAqBoB,MAAOqO,GACtCtO,KAAK0O,sB,GAzGCtO,IAAMC,YAkHlBsO,GAF6DnO,aAjJpD,SAAC9I,GAAD,MAA+C,CACnEL,YAAaK,EAAMgL,MAAMrL,YACzBE,SAAUG,EAAMgL,MAAMnL,SACtBH,UAAWM,EAAMgL,MAAMtL,UACvBwM,QAASgL,GAAqB1J,mBAAmBxN,OAG1B,SAAC+I,GAAD,MAAuD,CAC9EoN,iBAAkB,SAACgB,GAAkBpO,EAASqO,EAAatN,gBAAgBqN,KAC3EnB,iBAAkB,SAACrV,GAAqBoI,EAASqO,EAAazN,eAAehJ,QAwILmI,CAA6C6M,I,SC5D1G0B,I,wBApFb,WAAY9Q,GAA6B,IAAD,8BACtC,4CAAMA,KAGR+Q,WAAa,WAAe,IAClBC,EAAgB,EAAKhR,MAArBgR,YADiB,EAEF,EAAKhR,MAAMvH,OAA1B+E,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,IACf,OAAuB,IAAhBuT,EAAA,iBAAmD,IAAfvT,EAAMD,GAA1C,OAP+B,EAUxCyT,yBAA2B,WAAe,IAAD,EAChB,EAAKjR,MAAMvH,OAA1B+E,EAD+B,EAC/BA,MAAOC,EADwB,EACxBA,IACf,OAAO,EAAKuC,MAAM5G,aAAeoE,GAAS,EAAKwC,MAAM5G,aAAeqE,EAChE,8BACA,qBAdkC,EAiBxCyT,mBAAqB,WAAe,IAC1B1T,EAAU,EAAKwC,MAAMvH,OAArB+E,MACR,OAAO,EAAKwC,MAAM5G,YAAc,IAAMoE,EAClC,cACA,qBArBkC,EAwBxC2T,mBAAqB,WAAuB,IAAD,EACX,EAAKnR,MAAMvH,OAAjC+E,EADiC,EACjCA,MAAYK,GADqB,EAC1BJ,IAD0B,EACrBI,OACpB,OAAO,EAAKmC,MAAM5G,aAAeoE,GAAS,EAAKwC,MAAM5G,YACjD,CAAEyE,MAAOA,IA3ByB,EA+BxCuT,kBAAoB,SAACvP,GACnBA,EAAMwP,iBACN,EAAKrR,MAAMsR,cACT,EAAKtR,MAAMvH,OACX0R,GACE,CACE7R,EAAGuJ,EAAM0P,QACThZ,EAAGsJ,EAAM2P,SAEX,CAAEjH,MAAO,IAAKC,OAAQ,QAxCY,E,sEA6C9B,IAAD,EACiCzI,KAAK/B,MAAMvH,OAA3CkF,EADD,EACCA,KAAMH,EADP,EACOA,MAAOQ,EADd,EACcA,QAASH,EADvB,EACuBA,MACxB4T,EAA2C,CAC/ClH,MAAM,GAAD,OAAKxI,KAAKgP,cACf/C,UAAU,aAAD,OAAuB,GAARxQ,EAAf,OACTkU,QAAS,OACT1B,IAAI,GAAD,OAAe,GAAVhS,EAAL,MAGC2T,EAAwC,CAC5C1B,gBAAiBpS,GAGnB,OACE,yBACE+C,UAAU,iBACVoB,MAAOyP,EACPH,cAAevP,KAAKqP,mBAEpB,yBAAKxQ,UAAU,oBACb,yBAAKA,UAAU,wBAAwBoB,MAAO,CAAEnE,MAAOA,IACrD,yBAAK+C,UAAWmB,KAAKmP,sBACnB,8BAAOvT,KAGX,yBACEiD,UAAWmB,KAAKkP,2BAChBjP,MAAO2P,IAET,yBACE/Q,UAAU,uBACVoB,MAAO,CAAEiO,gBAAiBpS,W,GA7ETsE,IAAMC,YCF7BwP,I,MAA8C,SAClD5R,GAEA,IAAM4Q,EAAO3H,GAAgBjJ,EAAM4Q,MACnC,OACE,yBAAKhQ,UAAU,wBACZgQ,EAAKrH,OACLqH,EAAKzH,EAFR,IAEYyH,EAAKvH,EAFjB,IAGE,0BAAMzI,UAAU,8BAA8BgQ,EAAKtH,OAqB1CuI,G,YAfb,WAAY7R,GAA6B,qEACjCA,I,sEAIN,OACE,yBAAKY,UAAU,4BACb,kBAAC,GAAD,CAAegQ,KAAM7O,KAAK/B,MAAM5G,YAAc,KAC9C,kBAAC,GAAD,CAAewX,KAAM7O,KAAK/B,MAAM5G,cAChC,kBAAC,GAAD,CAAewX,KAAM7O,KAAK/B,MAAM5G,YAAc,U,GAVzB+I,IAAMC,WC2GpB0P,I,wBApFb,WAAY9R,GAA0B,IAAD,8BACnC,4CAAMA,KAZRvG,MAA0B,CACxBsY,kBAAmB,EACnBC,kBAAmB,EACnBC,oBAAqB,EACrBC,mBAAoB,EACpBC,mBAAoB,EACpBC,qBAAsB,EACtBC,aAAc,EACdC,aAAc,GAGqB,EAIrCC,aAAe,SAACC,GAAD,MACC,MAAdA,GAAmC,MAAdA,GALc,EAOrCC,WAAa,SAACD,GAAD,MACG,MAAdA,GAAmC,MAAdA,GARc,EAiBrCE,aAAe,SAACC,GAAwB,IAAD,EACY,EAAKlZ,MAA9CsY,EAD6B,EAC7BA,kBAAmBC,EADU,EACVA,kBACrBY,EAAiB,EAAKH,WAAWE,IAAY,EAAI,EACvD,OAAOpN,KAAKD,IAAI,GAAIyM,EAAoBC,EAAoBY,IApBzB,EAuBrCC,WAAa,SAACF,EAAoB9Q,GAA2B,IAAD,EACJ,EAAKpI,MAAnDwY,EADkD,EAClDA,oBAAqBG,EAD6B,EAC7BA,qBAEvBU,EAAoB,EAAKJ,aAAaC,GAC5C,EAAKtH,SAAS,CAAE4G,oBAAqBa,IACrC,EAAK9S,MAAM+S,SAASlR,EAAO,CACzB8Q,QAASA,EACTvI,KAAM,CAAEG,MAAO0H,EAAqBzH,OAAQ4H,MA9BX,EAkCrCY,gBAAkB,SAACnR,EAA6BrJ,GAC9C,EAAK6S,SAAS,CACZ4G,oBAAqB,EAAKxY,MAAMsY,kBAChCM,aAAcxQ,EAAM0P,WArCa,EAyCrC0B,WAAa,SAACpR,EAA6BrJ,GACzC,EAAK6S,SAAS,CACZ2G,kBAAmBnQ,EAAM0P,QAAU,EAAK9X,MAAM4Y,aAC9CN,kBAAmB,EAAK/R,MAAMkT,aA5CG,EAgDrCC,cAAgB,SAACX,GAOf,OACE,kBAAC,iBAAD,eACEjE,IAAG,iBAAYiE,GACflC,QAAS,EAAK0C,gBACdzF,OAVW,SAAC1L,EAA6BrJ,GAC3C,IAAM4a,EAAmBvR,EAAM0P,QAAU,EAAK9X,MAAM4Y,aACpD,EAAKhH,SAAS,CAAE2G,kBAAmBoB,IACnC,EAAKP,WAAWL,EAAW3Q,IAQzB2L,OAAQ,EAAKyF,YACT,EAAKjT,MAAMqT,eAEf,0BAAMzS,UAAS,2BAAsB4R,OA/DN,E,iFAWnCzQ,KAAKsJ,SAAS,CACZ0G,kBAAmBhQ,KAAK/B,MAAMkT,UAC9BhB,mBAAoBnQ,KAAK/B,MAAMsT,e,+BAuDzB,IAAD,EAC2BvR,KAAK/B,MAA/BkT,EADD,EACCA,UAAWI,EADZ,EACYA,WACbC,EAAyC,CAC7ChJ,MAAM,GAAD,OAAK2I,EAAL,MACL1I,OAAO,GAAD,OAAK8I,EAAL,OAER,OACE,yBAAK1S,UAAU,oBAAoBoB,MAAOuR,GACvCxR,KAAKoR,cAAc,KACnBpR,KAAKoR,cAAc,KACnBpR,KAAK/B,MAAMwT,c,GA1FMrR,IAAMC,YCb1BqR,G,YAUJ,WAAYzT,GAAqC,IAAD,8BAC9C,4CAAMA,KALR0T,QAA0BC,YAAW,cAAU,GAIC,EAFhDla,MAAqC,GAEW,EAMhDma,yBAA2B,SACzB/R,EACArJ,KAR8C,EAWhDqb,oBAAsB,SACpBhS,EACArJ,KAb8C,EAgBhDsb,wBAA0B,SACxBjS,EACArJ,GACU,IACFub,EAA+BN,EAA/BM,YAAaC,EAAkBP,EAAlBO,cACfC,EAAwBzb,EAAK0b,MAAQF,EACrChW,EACJiW,GAAiB,GAAKA,GAAiB,EAClCA,EACD,EAEAzW,EAAiBhF,EAAK2b,MAAQJ,EAEpC,EAAK/T,MAAMoU,yBAAyBpW,GACpC,EAAKgC,MAAMqU,2BAA2B7W,IA9BQ,EAiChD8W,2BAA6B,SAC3BzS,EACArJ,GAEAoS,QAAQ2J,QACR3J,QAAQiC,IAAIrU,EAAK4R,KAAKG,QAtCwB,EAyChDiK,sBAAwB,SACtB3S,EACArJ,GACU,IACFma,EAAkBna,EAAlBma,QAASvI,EAAS5R,EAAT4R,KACT2J,EAAgBN,EAAhBM,YAER,GAAgB,MAAZpB,EAMJ,GAAgB,MAAZA,OAAJ,CAAsB,IACZnV,EAAU,EAAKwC,MAAMvH,OAArB+E,MACFiX,EAAkBrK,EAAKG,MAAQwJ,EAAcvW,EACnD,EAAKwC,MAAM0U,kBAAkBD,OAT/B,CAAsB,IACZhX,EAAQ,EAAKuC,MAAMvH,OAAnBgF,IACFkX,GAAsBvK,EAAKG,MAAQwJ,EAAetW,EACxD,EAAKuC,MAAM4U,iBAAiBD,KAnDgB,EA8DhDE,0BAA4B,SAC1BhT,EACArJ,KAhE8C,EAmEhDsc,aAAe,SAACjT,GACdA,EAAMwP,kBApEwC,EAwEhDD,kBAAoB,SAClB3Y,EACAJ,GAEA,EAAK2H,MAAMsR,cAAc7Y,EAAQJ,IA5Ea,E,mHA+EtC,IACA0b,EAA+BN,EAA/BM,YAAaC,EAAkBP,EAAlBO,cAEnBJ,EAQE7R,KARF6R,yBACAC,EAOE9R,KAPF8R,oBACAC,EAME/R,KANF+R,wBACAQ,EAKEvS,KALFuS,2BACAE,EAIEzS,KAJFyS,sBACAK,EAGE9S,KAHF8S,0BACAC,EAEE/S,KAFF+S,aATK,GAWH/S,KADFqP,kBAE8BrP,KAAK/B,MAAMvH,QAAnC+E,EAZD,EAYCA,MAAOC,EAZR,EAYQA,IAETsX,EAAoBvX,EAAQuW,EAC5BiB,EAfC,EAYahX,QAGgBgW,EAC9BzJ,GAAiB9M,EAAMD,GAASuW,EAEtC,OACE,yBAAKnT,UAAU,4BACb,kBAAC,KAAD,CACEyM,KAAK,OACLC,OAAO,QACP2H,KAAM,CAAClB,EAAc,EAAGC,GACxB3b,SAAU,CAAEC,EAAGyc,EAAWxc,EAAGyc,GAC7B1E,QAASsD,EACTrG,OAAQsG,EACRrG,OAAQsG,EACRvD,OAAO,qBAEP,yBAAK3P,UAAU,iBAAiBoB,MAAO,CAAEuI,MAAM,GAAD,OAAKA,EAAL,QAC5C,kBAAC,GAAD,CACE3J,UAAU,iBACVsS,UAAW3I,EACX+I,WAAYU,EACZkB,WAAY,CAAC,IAAK,KAClBC,cAAeb,EACfvB,SAAUyB,EACVY,aAAcP,EACdxB,cAAe,CAAE/F,OAAQ,UAEzB,yBAAK1M,UAAU,iBAAiByU,SAAUP,GACxC,oCACE,kBAAC,GAAD,CACErc,OAAM,eACDsJ,KAAK/B,MAAMvH,OADV,CAEJ+E,MAAO,EACPC,IAAK,EACLO,QAAS,IAEXgT,aAAa,EACb5X,YAAa2I,KAAK/B,MAAM5G,YACxBkY,cAAevP,KAAKqP,8B,GA7IHjP,IAAMC,WAArCqR,GAIGO,cAAwB,GAJ3BP,GAKGM,YAAsB,GAoJhBN,UC3GT6B,G,YAIJ,WAAYtV,GAAuB,IAAD,8BAChC,4CAAMA,KAJRgU,cAAwB,GAGU,EAFlCD,YAAsB,GAEY,EAIlCtD,cAAgB,WAA2B,IAAD,EACP,EAAKzQ,MAA9B2F,EADgC,EAChCA,QAASvM,EADuB,EACvBA,YACjB,OAAOuM,EAAQ4P,KAAI,SAAA9c,GAAM,OACvB,kBAAC,GAAD,CACEA,OAAQA,EACRW,YAAaA,EACbkY,cAAe,EAAKkE,8BAVQ,EAelCC,0BAA4B,WAAuB,IAAD,EAM5C,EAAKzV,MAJP5G,EAF8C,EAE9CA,YACAiE,EAH8C,EAG9CA,KACAqY,EAJ8C,EAI9CA,kBACAC,EAL8C,EAK9CA,gBAEM5B,EAPwC,gBAOxCA,YAER,OAAQ1W,GACN,KAAKV,EAAiBW,SACpB,MAAO,CACLoU,QAAS,QAGb,KAAK/U,EAAiBwL,UACpB,MAAO,CACLuJ,QAAS,QACTnH,MAAM,GAAD,OAAKwJ,EAAc3a,EACtB2a,EAAc2B,EADX,MAELE,KAAK,GAAD,OAAK7B,EAAc2B,EAAnB,OAGR,KAAK/Y,EAAiB2L,UACpB,MAAO,CACLoJ,QAAS,QACTnH,MAAM,GAAD,OAAKwJ,EAAc4B,EACtB5B,EAAc2B,EADX,MAELE,KAAK,GAAD,OAAK7B,EAAc2B,EAAnB,SA3CsB,EAgDlCG,0BAA4B,SAAChU,GAC3BA,EAAMwP,kBAjD0B,EAoDlCyE,4BAA8B,SAACjU,GAC7B,EAAK7B,MAAM+V,oBArDqB,EAwDlCC,6BAA+B,SAACC,GAC9B,EAAKjW,MAAMkW,yBAAyBD,IAzDJ,EA4DlCE,+BAAiC,SAACxB,GAChC,EAAK3U,MAAMoW,0BAA0BzB,IA7DL,EAgElC0B,qBAAuB,SAAC1B,GACtB,EAAK3U,MAAMsW,uBAAuB3B,IAjEF,EAoElC4B,sBAAwB,SAAC9B,GACvB,EAAKzU,MAAMwW,qBAAqB/B,IArEA,EAwElCe,wBAA0B,SACxB/c,EACAJ,GAEA,EAAK2H,MAAMyW,oBAAoBhe,EAAQJ,IA5EP,E,sEA+ExB,IAEN0b,EAOEhS,KAPFgS,YACAoC,EAMEpU,KANFoU,+BACAH,EAKEjU,KALFiU,6BACAK,EAIEtU,KAJFsU,qBACAE,EAGExU,KAHFwU,sBACAT,EAEE/T,KAFF+T,4BACAN,EACEzT,KADFyT,wBARK,EAU4CzT,KAAK/B,MAAhD1G,EAVD,EAUCA,SAAUF,EAVX,EAUWA,YAAaiE,EAVxB,EAUwBA,KAAMK,EAV9B,EAU8BA,UAE/BgZ,EAA6B,CACjCnM,MAAOwJ,EAAcza,EAAW,KAChC0U,UAAU,aAAD,QAAgB5U,EAAc2a,EAAc,IAA5C,QAGL4C,EAAyC5U,KAAK0T,4BAE9CmB,EAA8C,CAClDlF,QAASrU,IAASV,EAAiB2L,UAAY,OAAS,QAGpDuO,EAAyC,CAC7CnF,QAASrU,IAASV,EAAiB2L,UAAY,QAAU,QAG3D,OACE,yBAAK1H,UAAU,WAAW0Q,cAAevP,KAAK8T,2BAC5C,yBAAKjV,UAAU,sBACb,yBAAKA,UAAU,OAAOoB,MAAO0U,GAC3B,yBAAK9V,UAAU,oBAAoBoB,MAAO2U,GACxC,yBACE/V,UAAU,gBACVoB,MAAO4U,EACP1U,QAAS4T,GAET,uBAAGlV,UAAU,kBAGjB,yBAAKA,UAAU,qBAAqBoB,MAAO6U,GACzC,kBAAC,GAAD,CACEpe,OAAQiF,EACRtE,YAAaA,EACbgb,yBAA0B4B,EAC1B3B,2BAA4B8B,EAC5BvB,iBAAkByB,EAClB3B,kBAAmB6B,EACnBjF,cAAekE,KAGnB,yBAAK5U,UAAU,oBAAoBmB,KAAK0O,kBAE1C,yBAAK7P,UAAU,YACf,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,qBAGjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,wBAKrB,yBAAKA,UAAU,4BACb,kBAAC,GAAD,CAAgBxH,YAAa2I,KAAK/B,MAAM5G,oB,GAvJ3B+I,IAAMC,WAmKd0U,GALqDvU,aApN5C,SAAC9I,GAAD,MAA2C,CACjEkB,cAAelB,EAAMyL,YAAYvK,cACjC0C,KAAM5D,EAAM4O,aAAahL,KACzBjE,YAAaK,EAAMgL,MAAMrL,YACzBE,SAAUG,EAAMgL,MAAMnL,SACtB6V,mBAAoB1V,EAAMyL,YAAY5L,SACtCqM,QAASsG,GAA2BhF,mBAAmBxN,GACvDic,kBAAmBjc,EAAM4O,aAAa9K,aAAaC,MACnDmY,gBAAiBlc,EAAM4O,aAAa9K,aAAaE,IACjDC,UAAWjE,EAAM4O,aAAa3K,cAGL,SAAC8E,GAAD,MAAmD,CAC5EuT,iBAAkB,WAChBvT,EAASyJ,GAA0B5E,QAAQ1K,EAAiBW,YAE9D4Y,yBAA0B,SAACD,GACzBzT,EAASyJ,GAA0BnE,oBAAoBmO,KAEzDG,0BAA2B,SAACzB,GAC1BnS,EAASyJ,GAA6B1D,WAAWoM,KAEnD2B,uBAAwB,SAAC3B,GACvBnS,EAASyJ,GAA0BzE,sBAAsBmN,KAE3D6B,qBAAsB,SAAC/B,GACrBjS,EAASyJ,GAA0BxE,oBAAoBgN,KAEzDgC,oBAAqB,SAAChe,EAAgBJ,GACpCmK,EAASyJ,GAAgDxT,EAAQJ,QAuLDkK,CAGlE+S,I,0BCrJIyB,G,YAeJ,WAAY/W,GAA2B,IAAD,8BACpC,4CAAMA,KAZRgX,qBAWsC,IAVtCC,qBAUsC,IATtCC,yBASsC,IARtCC,mBAQsC,IAPtCC,mBAOsC,IANtCC,uBAMsC,IAJtCC,kBAIsC,IAHtCC,qBAGsC,IAFtCC,oBAEsC,IActCC,WAAa,SAAC5Z,GACZ,OAAOA,EAAQ,MAfqB,EAkBtC6Z,0BAA4B,SAACzH,GAC3B,MAAO,CAAEA,gBAAiBA,IAnBU,EAsBtC0H,uBAAyB,SAAC9V,GACxB,IAAM+V,EAA2B/V,EAAMgW,cAAcC,aACnD,cAEIja,EACU,OAAd+Z,EAAsBA,EAA4B,EAAKN,aACzD,EAAKtX,MAAM+X,cAAcla,IA5BW,EA+BtCma,oBAAsB,SAACnW,GACrB,IAAMoW,EAA8BpW,EAAMgW,cAAcC,aACtD,iBAEIha,EACa,OAAjBma,EACKA,EACD,EAAKV,gBACX,EAAKvX,MAAMkY,iBAAiBpa,IAvCQ,EA0CtCqa,mBAAqB,SAACtW,GACpB,IAAMuW,EAA6BvW,EAAMgW,cAAcC,aACrD,gBAEI9Z,EACY,OAAhBoa,EACKC,SAASD,GACV,EAAKZ,eACX,EAAKxX,MAAMsY,gBAAgBta,IAlDS,EAqDtCua,sBAAwB,SAAC1W,GAAsC,IAAD,kBACpDmV,EADoD,EACpDA,gBAAiBC,EADmC,EACnCA,gBAAiBC,EADkB,EAClBA,oBAEpC/N,EACwB,OAA5B6N,EAAgBjO,QACZsP,SAASrB,EAAgBjO,QAAQwC,OACjC,EACAlC,EACwB,OAA5B4N,EAAgBlO,QACZsP,SAASpB,EAAgBlO,QAAQwC,OACjC,EACAjC,EAC4B,OAAhC4N,EAAoBnO,QAChBsP,SAASnB,EAAoBnO,QAAQwC,OACrC,EAEN,EAAKvL,MAAMwY,eAAehP,GAAiBL,EAAGE,EAAGC,IACjD,EAAKtJ,MAAMyY,sBAAsBjP,GAAiBL,EAAGE,EAAGC,KAtEpB,EAyEtCoP,oBAAsB,SAAC7W,GAAsC,IAAD,kBAClDsV,EADkD,EAClDA,cAAeC,EADmC,EACnCA,cAAeC,EADoB,EACpBA,kBAEhClO,EACsB,OAA1BgO,EAAcpO,QACVsP,SAASlB,EAAcpO,QAAQwC,OAC/B,EACAlC,EACsB,OAA1B+N,EAAcrO,QACVsP,SAASjB,EAAcrO,QAAQwC,OAC/B,EACAjC,EAC0B,OAA9B+N,EAAkBtO,QACdsP,SAAShB,EAAkBtO,QAAQwC,OACnC,EAEN,EAAKvL,MAAMwY,eAAehP,GAAiBL,EAAGE,EAAGC,IACjD,EAAKtJ,MAAM2Y,oBAAoBnP,GAAiBL,EAAGE,EAAGC,KA1FlB,EA6FtCsP,sBAAwB,SAACC,GAA2C,IAAD,EACL,EAAK7Y,MAAzD5G,EADyD,EACzDA,YAAasc,EAD4C,EAC5CA,kBAAmBC,EADyB,EACzBA,gBAWxC,MAAO,CACLmD,kBAXgCD,EAAUnD,EAAoBtc,EAY9D2f,gBAV8BF,EAC5BnD,EACAC,EASFqD,cAP0DH,EACxD,EAAKN,sBACL,EAAKG,sBAvG2B,EAgHtCO,QAAU,SAACJ,GACT,IACMK,EAAgDL,EAClD,EAAK7B,gBACL,EAAKG,cAgCT,OA7BE,EAAKnX,MAAM3C,OAASV,EAAiBwL,UACnC,2BACExO,KAAK,SACL4R,MACEtC,GACE,EAAK2P,sBAAsBC,GAASC,mBACpC3P,EAEJ9D,IAAI,IACJC,IAAI,KACJ1E,UAAU,4BACVuY,UAAQ,IAGV,2BACExf,KAAK,SACLyf,aACEnQ,GAAgB,EAAK2P,sBAAsBC,GAASE,iBACjD5P,EAELwC,YAAY,KACZ9C,IAAKqQ,EACL7T,IAAI,IACJC,IAAI,KACJ1E,UAAU,mBACViL,QAAS,EAAK+M,sBAAsBC,GAASG,iBAhJf,EAuJtCK,QAAU,SAACR,GACT,IACMK,EAAgDL,EAClD,EAAK5B,gBACL,EAAKG,cAgCT,OA7BE,EAAKpX,MAAM3C,OAASV,EAAiBwL,UACnC,2BACExO,KAAK,SACL4R,MACEtC,GACE,EAAK2P,sBAAsBC,GAASC,mBACpCzP,EAEJhE,IAAI,IACJC,IAAI,KACJ1E,UAAU,4BACVuY,UAAQ,IAGV,2BACExf,KAAK,SACLyf,aACEnQ,GAAgB,EAAK2P,sBAAsBC,GAASE,iBACjD1P,EAELsC,YAAY,KACZ9C,IAAKqQ,EACL7T,IAAI,IACJC,IAAI,KACJ1E,UAAU,mBACViL,QAAS,EAAK+M,sBAAsBC,GAASG,iBAvLf,EA8LtCM,QAAU,SAACT,GACT,IACMK,EAAgDL,EAClD,EAAK3B,oBACL,EAAKG,kBAgCT,OA7BE,EAAKrX,MAAM3C,OAASV,EAAiBwL,UACnC,2BACExO,KAAK,SACL4R,MACEtC,GACE,EAAK2P,sBAAsBC,GAASC,mBACpCxP,GAEJjE,IAAI,IACJC,IAAI,OACJ1E,UAAU,wCACVuY,UAAQ,IAGV,2BACExf,KAAK,SACLyf,aACEnQ,GAAgB,EAAK2P,sBAAsBC,GAASE,iBACjDzP,GAELqC,YAAY,KACZ9C,IAAKqQ,EACL7T,IAAI,IACJC,IAAI,OACJ1E,UAAU,+BACViL,QAAS,EAAK+M,sBAAsBC,GAASG,iBA9Nf,EAqOtCO,sBAAwB,WACtB,IAAIC,EAAgC,GADY,uBAGhD,YAAuBC,GAAvB,+CAAsC,CAAC,IAA5B3b,EAA2B,QAC9B4b,EACJ5b,EAASH,OAAS,EAAKqC,MAAMtC,UAAUI,SACnC,yBACA,kBAEN0b,EAAU3T,KACR,0BAAM0I,IAAKzQ,EAASH,KAAMiD,UAAW8Y,GACnC,yBACE9Y,UAAU,eACV+Y,IAAK7b,EAAS8b,KACd1X,QAAS,EAAK8V,oBACd6B,gBAAe/b,EAASH,KACxBmc,IAAKhc,EAASH,UAhB0B,kFAqBhD,OAAO6b,GA1P6B,EA6PtCO,yBAA2B,WACzB,IAAIC,EAA8B,GADiB,uBAGnD,YAAoBC,GAApB,+CAAgC,CAAC,IAAtBpc,EAAqB,QACxBqc,EACJrc,EAAMA,QAAU,EAAKmC,MAAMtC,UAAUG,MACjC,sBACA,eAENmc,EAAQnU,KACN,2BACE0I,IAAK1Q,EAAMA,MACXlE,KAAK,SACLiH,UAAWsZ,EACXC,aAAYtc,EAAMA,MAClBmE,MAAO,EAAK0V,0BAA0B7Z,EAAMA,OAC5CqE,QAAS,EAAKyV,2BAhB+B,kFAoBnD,OAAOqC,GAjR6B,EAoRtCI,qBAAuB,WAGrB,IAFA,IAAIC,EAAqC,GAEhCrc,EAAU,EAAGA,GAAW,IAAKA,EAAS,CAC7C,IAAMsc,EACJtc,GAAW,EAAKgC,MAAMtC,UAAUM,QAC5B,wBACA,iBAENqc,EAAexU,KACb,yBACE0I,IAAKvQ,EACL4C,UAAW0Z,EACXC,eAAcvc,EACdkE,QAAS,EAAKiW,oBAEd,8BAAOna,EAAU,KAIvB,OAAOqc,GAxS6B,EA2StCG,2BAA6B,SAC3B3Y,GAEA,EAAK7B,MAAMya,aAAa5Y,EAAMgW,cAActM,QA9SR,EAiTtCmP,iCAAmC,SACjC7Y,GAEA,EAAK7B,MAAM2a,oBAAoB9Y,EAAMgW,cAActM,QAlTnD,EAAK+L,aAAe,YACpB,EAAKC,gBAAkB7a,EAAeqB,KACtC,EAAKyZ,eAAiB,EAEtB,EAAKR,gBAAkB7U,IAAMwM,YAC7B,EAAKsI,gBAAkB9U,IAAMwM,YAC7B,EAAKuI,oBAAsB/U,IAAMwM,YACjC,EAAKwI,cAAgBhV,IAAMwM,YAC3B,EAAKyI,cAAgBjV,IAAMwM,YAC3B,EAAK0I,kBAAoBlV,IAAMwM,YAXK,E,sEAuT5B,IAAD,EAC4B5M,KAAK/B,MAAhC5G,EADD,EACCA,YAAasE,EADd,EACcA,UAGrB,OADAuL,GAAgB7P,GAEd,yBACEwH,UAAU,0BACVoB,MAAO,CAAEiO,gBAAiBlO,KAAK0V,WAAW/Z,EAAUG,SAEpD,yBAAK+C,UAAU,sBACb,yBAAKA,UAAU,+BACb,2BACEjH,KAAK,OACLiH,UAAU,oBACV+K,YAAY,cACZE,QAAS9J,KAAKyY,8BAGlB,yBAAK5Z,UAAU,gCACb,8BACEA,UAAU,2BACV+K,YAAY,qCACZE,QAAS9J,KAAK2Y,oCAGlB,yBAAK9Z,UAAU,2BACb,yBAAKA,UAAU,iBACZmB,KAAKgY,6BAGV,yBAAKnZ,UAAU,8BACZmB,KAAKwX,0BAGV,yBAAK3Y,UAAU,mCACb,yBAAKA,UAAU,2BAEjB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,cACZmB,KAAKkX,SAAQ,GACd,mCACClX,KAAKsX,SAAQ,GACd,mCACCtX,KAAKuX,SAAQ,IAEhB,yBAAK1Y,UAAU,iBACf,yBAAKA,UAAU,uBACb,yCAGJ,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,cACZmB,KAAKkX,SAAQ,GACd,mCACClX,KAAKsX,SAAQ,GACd,mCACCtX,KAAKuX,SAAQ,IAEhB,yBAAK1Y,UAAU,iBACf,yBAAKA,UAAU,uBACb,wCAIN,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,kBACb,0CAEF,yBAAKA,UAAU,6BACZmB,KAAKqY,wBAER,yBAAKxZ,UAAU,iCACb,uBAAGA,UAAU,6B,GAjZFuB,IAAMC,WAgalBwY,GAFXrY,aA1doB,SAAC9I,GAAD,MAA+C,CACrEL,YAAaK,EAAMgL,MAAMrL,YACzBiE,KAAM5D,EAAM4O,aAAahL,KACzBqY,kBAAmBjc,EAAM4O,aAAa9K,aAAaC,MACnDmY,gBAAiBlc,EAAM4O,aAAa9K,aAAaE,IACjDC,UAAWjE,EAAM4O,aAAa3K,cAGL,SAAC8E,GAAD,MAA8B,CACvDiY,aAAc,SAAC9c,GACb6E,EAASyJ,GAA0BvE,iBAAiB/J,KAEtDgd,oBAAqB,SAAC/c,GACpB4E,EAASyJ,GAA0BtE,wBAAwB/J,KAE7Dma,cAAe,SAAC8C,GACdrY,EAASyJ,GAA0BrE,kBAAkBiT,KAEvD3C,iBAAkB,SAAC4C,GACjBtY,EAASyJ,GAA0BpE,qBAAqBiT,KAE1DxC,gBAAiB,SAACrC,GAChBzT,EAASyJ,GAA0BnE,oBAAoBmO,KAGzDuC,eAAgB,SAAC5H,GACfpO,EAASyJ,EAAmB1I,gBAAgBqN,KAE9C6H,sBAAuB,SAAC7H,GACtBpO,EAASyJ,GAA0B3E,qBAAqBsJ,KAE1D+H,oBAAqB,SAAC/H,GACpBpO,EAASyJ,GAA0B1E,mBAAmBqJ,QA0btDrO,CAA6CwU,ICxc3CgE,I,wBACJ,WAAY/a,GAAyB,IAAD,8BAClC,4CAAMA,KA6CRgb,aAAe,SAAClU,EAAgBiH,GAAgC,IAAD,EAChCjH,EAAO7J,KAA5BT,EADqD,EACrDA,SAAUC,EAD2C,EAC3CA,OACV3B,EAAqB,EAAKkF,MAA1BlF,iBAEFmgB,EACJnU,EAAOrL,WAAaX,EAChB,yBACA,gBACAogB,EAA+B,CACnCjZ,gBAAgB,OAAD,OAASxF,EAAT,MAGjB,OACE,yBACE8R,IAAKR,EACLnN,UAAWqa,EACX/Y,QAAS,SAACL,GACR,EAAK7B,MAAMmb,eAAerU,EAAOrL,YAGnC,yBAAKmF,UAAU,cACb,yBAAKA,UAAU,SAASoB,MAAOkZ,KAEjC,yBAAKta,UAAU,YACb,6BACE,yBAAKA,UAAU,YACb,wCAAUpE,EAAV,QAEF,6BACE,6CA3EwB,E,6EAIC,IAAD,EACGuF,KAAK/B,MAAlC4G,EAD0B,EAC1BA,WAAYwU,EADc,EACdA,aAEpB,MADoC,CAACrZ,KAAKsZ,iBAAiBzU,GAAa,IACzD0U,OAAOF,EAAa7F,IAAIxT,KAAKiZ,iB,uCAG7BlU,EAAgBiH,GAA6B,IAAD,OACnDtS,EAAaqL,EAAbrL,SACAgB,EAAWqK,EAAO7J,KAAlBR,OAEFwe,EACJxf,IAAasG,KAAK/B,MAAMlF,iBACpB,yBACA,gBACAogB,EAA+B,CACnCjZ,gBAAgB,OAAD,OAASxF,EAAT,MAEjB,OACE,yBACE8R,IAAKR,EACLnN,UAAWqa,EACX/Y,QAAS,SAACL,GACR,EAAK7B,MAAMmb,eAAe1f,KAG5B,yBAAKmF,UAAU,cACb,yBAAKA,UAAU,SAASoB,MAAOkZ,KAEjC,yBAAKta,UAAU,YACb,6BACE,yBAAKA,UAAU,YACb,uCAEF,6BACE,8C,+BA8CV,OACE,yBAAKA,UAAU,eACb,6BAAMmB,KAAKwZ,sB,GAvFMpZ,IAAMC,YAoGhBoZ,GAP6BlZ,YAC1CC,aAxHsB,SAAC9I,GAAD,MAA6C,CACnEmN,WAAYqF,GAA2BjF,cAAcvN,GACrD2hB,aAAcnP,GAA2B9E,gBAAgB1N,GACzDqB,iBAAkBrB,EAAMyL,YAAYpK,iBACpCuC,KAAM5D,EAAM4O,aAAahL,SAGA,SACzBmF,GADyB,MAEE,CAC3B2Y,eAAgB,SAAC1f,GACf+G,EAASyJ,GAAyB9H,oBAAoB1I,QA6GxD8G,CAGEwY,KCjFEU,G,YAQJ,WAAYzb,GAAoB,IAAD,8BAC7B,4CAAMA,KARR0b,oBAO+B,IAN/BC,qBAM+B,IAL/BC,uBAK+B,IAJ/BC,wBAI+B,IAH/BC,4BAG+B,IAF/BC,kCAE+B,EAE7B,EAAKL,eAAiBvZ,IAAMwM,YAC5B,EAAKiN,kBAAoBzZ,IAAMwM,YAC/B,EAAKgN,gBAAkBxZ,IAAMwM,YAC7B,EAAKkN,mBAAqB1Z,IAAMwM,YAChC,EAAKmN,uBAAyB3Z,IAAMwM,YACpC,EAAKoN,6BAA+B5Z,IAAMwM,YAPb,E,iFAW7B5M,KAAKia,c,yCAGYC,GAAuB,IAAD,EACfla,KAAK/B,MAArBkc,EAD+B,EAC/BA,MAAO7e,EADwB,EACxBA,KAEX6e,EAAMC,OAAOtjB,SAAWojB,EAASC,MAAMC,OAAOtjB,SAChDkJ,KAAKia,YAEH3e,IAAS4e,EAAS5e,OAChBA,IAASV,EAAiBwL,WAC5BS,GAAS7G,KAAK6Z,mBAEZve,IAASV,EAAiB2L,WAC5BM,GAAS7G,KAAK+Z,2B,mHAMZjjB,EAAkBwf,SAAStW,KAAK/B,MAAMkc,MAAMC,OAAOtjB,SACnD4C,EAAmB4c,SAAStW,KAAK/B,MAAMkc,MAAMC,OAAO1gB,UAE1DsG,KAAKqa,WAAWvjB,G,mBACVkJ,KAAK/B,MAAMsE,WAAWzL,EAAS4C,I,kFAG5B5C,GACLkJ,KAAK/B,MAAMqc,eAAiBxjB,EAC9BkJ,KAAK/B,MAAMsc,cAEXva,KAAK/B,MAAMuc,c,+BAKb,OACE,yBAAK3b,UAAU,cACb,yBAAKiI,IAAK9G,KAAK2Z,eAAgBzb,GAAG,gBAChC,kBAAC,GAAD,OAEF,yBAAK4I,IAAK9G,KAAK4Z,gBAAiB1b,GAAG,iBACjC,kBAAC,GAAD,OAEF,yBAAK4I,IAAK9G,KAAK6Z,kBAAmB3b,GAAG,uBACnC,kBAAC,GAAD,OAEF,yBAAKA,GAAG,yBACN,kBAAC,GAAD,OAEF,yBAAK4I,IAAK9G,KAAK8Z,mBAAoB5b,GAAG,oBACpC,kBAAC,GAAD,OAEF,yBAAK4I,IAAK9G,KAAK+Z,uBAAwB7b,GAAG,yBACxC,kBAAC,GAAD,OAEF,yBACE4I,IAAK9G,KAAKga,6BACV9b,GAAG,+BAFL,oC,GA3EqBkC,IAAMC,WA6FpBoa,GAPwBla,YACrCC,aA3HsB,SAAC9I,GAAD,MAAwC,CAC9DgjB,cAAehjB,EAAMgL,MAAM5L,QAC3BwjB,cAAe5iB,EAAMyL,YAAYrM,QACjC8B,cAAelB,EAAMyL,YAAYvK,cACjCxB,UAAWM,EAAMgL,MAAMtL,UACvBkE,KAAM5D,EAAM4O,aAAahL,SAGA,SAACmF,GAAD,MAAgD,CACzE8Z,YAAa,WACX9Z,EAASyJ,GAAyB5H,kBAEpCkY,UAAW,WACT/Z,EAASyJ,GAAyB/H,gBAEpCI,WAAY,SAAOzL,EAAiB4C,GAAxB,SAAA8I,EAAAC,OAAA,kEAAAD,EAAA,MACJ/B,EACJyJ,GAA4B1F,iBAAiB1N,EAAS4C,KAF9C,yCA4GZ8G,CAGEkZ,KChDEiB,I,kBAQJ,WAAY1c,GAA2B,IAAD,8BACpC,4CAAMA,KALR2c,WAIsC,IAHtCC,mCAGsC,IAFtCC,8BAEsC,IAgCtCC,mBAAqB,WACf,EAAK9c,MAAMlH,UAAU,EAAKkH,MAAM+c,kBACpC,EAAK/c,MAAMgd,eAAe,EAAKL,MAAMrjB,WAlCD,EAqCtC2jB,gBAAkB,WAChB,EAAKjd,MAAMkd,eAtCyB,EAyCtCC,iBAAmB,WACjB,EAAKnd,MAAMod,gBA1CyB,EA6CtCC,sBAAwB,WAClB,EAAKrd,MAAM3C,OAASV,EAAiB2L,WACnC,EAAKqU,MAAMvjB,aAAe,EAAK4G,MAAM2V,kBACvC,EAAKgH,MAAMvjB,YAAc,EAAK4G,MAAM0V,mBAGxC,EAAK1V,MAAMsd,kBAAkB,EAAKX,MAAMvjB,cAnDJ,EAsDtCmkB,iBAAmB,aAtDmB,EAuDtCC,mBAAqB,aAvDiB,EAwDtCC,iBAAmB,aAxDmB,EAyHtChR,sBAAwB,SAAC5K,GACvB,EAAK7B,MAAM7G,UAAY,EAAK6G,MAAMod,eAAiB,EAAKpd,MAAMkd,eA1H1B,EA6HtCQ,wBAA0B,SAAC7b,GACzB,EAAK7B,MAAM3C,OAASV,EAAiBwL,UACjC,EAAKnI,MAAM2d,oBACX,EAAK3d,MAAM4d,sBAhIqB,EAmItCC,mBAAqB,SAAChc,GAAmC,IAAD,EACvBA,EAAMiL,YAC/BzT,EAFgD,EAC9C0T,QAD8C,EACrC+Q,UACoBC,YAAe,EAAK/d,MAAM1G,SAC/D,EAAK0G,MAAMge,kBAAkB3kB,IApI7B,EAAKsjB,MAAQ,IAAIsB,MACjB,EAAKpB,0BAA2B,EAHI,E,6KAO9B9a,KAAK/B,MAAMsE,c,iCACXvC,KAAKmc,a,OACXnc,KAAKoc,sB,0FAGYjO,GACbA,EAAU/W,YAAc4I,KAAK/B,MAAM7G,YACrC4I,KAAK/B,MAAM7G,UAAY4I,KAAK4a,MAAMyB,OAASrc,KAAK4a,MAAM0B,SAEpDnO,EAAUhX,cAAgB6I,KAAK/B,MAAM9G,aACvC6I,KAAKmc,YAEHhO,EAAU7W,UAAY0I,KAAK/B,MAAM3G,UACnC0I,KAAK4a,MAAMvjB,YAAc2I,KAAK/B,MAAM3G,QACpC0I,KAAK/B,MAAMsd,kBAAkBvb,KAAK/B,MAAM3G,UAEtC6W,EAAU3W,SAAWwI,KAAK/B,MAAMzG,SAClCwI,KAAK4a,MAAMpjB,OAASwI,KAAK/B,MAAMzG,U,6CAKjCwI,KAAK4a,MAAM0B,U,oGA8BXtc,KAAK4a,MAAM0B,QACXtc,KAAK4a,MAAQ,IAAIsB,MAAMlc,KAAK/B,MAAM9G,aAClC6I,KAAK4a,MAAM2B,OACXvc,KAAK4a,MAAMpjB,OAASwI,KAAK/B,MAAMzG,OAC/BwI,KAAK4a,MAAM4B,iBAAmBxc,KAAK+a,mBACnC/a,KAAK4a,MAAM6B,OAASzc,KAAKkb,gBACzBlb,KAAK4a,MAAM8B,aAAe1c,KAAKsb,sBAC/Btb,KAAK4a,MAAM+B,QAAU3c,KAAKob,iBAC1Bpb,KAAK4a,MAAMgC,QAAU5c,KAAKwb,iBAC1Bxb,KAAK4a,MAAMiC,UAAY7c,KAAKyb,mBAC5Bzb,KAAK4a,MAAMkC,QAAU9c,KAAK0b,iB,8FAGL,IAAD,OACpB3U,OAAOgW,WAAa,SAACjd,GACnB,GAA6B,UAAzBA,EAAMyJ,OAAOyT,QAEjB,OAAQld,EAAMmd,OACZ,KAAK,GACH,IAAK,EAAKnC,yBAA0B,OAOpC,OANAhb,EAAMwP,iBACN,EAAKrR,MAAMif,kBACX,EAAKpC,0BAA2B,OAChC,EAAKD,8BAAgCjJ,YAAW,WAC9C,EAAKkJ,0BAA2B,IAC/B,QAKT/T,OAAOoW,UAAY,SAACrd,GAClB,GAA6B,UAAzBA,EAAMyJ,OAAOyT,QAAjB,CAD+C,MAEb,EAAK/e,MAA/B5G,EAFuC,EAEvCA,YAAaE,EAF0B,EAE1BA,SAErB,OAAQuI,EAAMmd,OACZ,KAAK,GACHnd,EAAMwP,iBACN,IAAM8N,EACJ/lB,EALmB,GAKMA,EALN,GAK+B,EAEpD,YADA,EAAKujB,MAAMvjB,YAAc+lB,GAE3B,KAAK,GACHtd,EAAMwP,iBACN,IAAM+N,EACJ9lB,EAAWF,EAXQ,GAYfA,EAZe,GAafE,GAAYF,EAbG,IAerB,YADA,EAAKujB,MAAMvjB,YAAcgmB,GAE3B,KAAK,GAAL,MAC0D,EAAKpf,MAArD3C,EADV,EACUA,KAAMugB,EADhB,EACgBA,mBAAoBD,EADpC,EACoCA,kBAKlC,YAJAtgB,IAASV,EAAiBwL,UACtBwV,IACAC,U,+BAyBF,IAAD,EAC4C7b,KAAK/B,MAAhD5G,EADD,EACCA,YAAaE,EADd,EACcA,SAAUH,EADxB,EACwBA,UAAWkE,EADnC,EACmCA,KAEpCgiB,EAAmC,CACvC9U,MAAO,IAAOnR,EAAcE,EAAY,IAAM,KAG1CgmB,EAAmC,CACvCrd,gBAAgB,OAAD,OAASF,KAAK/B,MAAMjH,MAApB,MAGXqU,EAAyBjU,EAAY,aAAe,YAEpDomB,EACJliB,IAASV,EAAiBwL,UAAY,SAAW,GACnD,OACE,yBAAKvH,UAAU,iBACb,6BACE,yBACEA,UAAU,qBACVsB,QAASH,KAAK0K,uBAEd,uBAAG7L,UAAWwM,KAEhB,yBACExM,UAAS,+BAA0B2e,GACnCrd,QAASH,KAAK2b,yBAEd,yBAAK9c,UAAU,eACf,uBAAGA,UAAU,eAEf,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WAAWsB,QAASH,KAAK8b,oBACtC,yBAAKjd,UAAU,OACb,yBAAKA,UAAU,WAAWoB,MAAOqd,OAIvC,yBAAKze,UAAU,cACb,uBAAGA,UAAU,iBAEf,kBAAC,IAAD,CAAS2L,GAAE,iBAAYxK,KAAK/B,MAAMnH,UAChC,yBAAK+H,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAcoB,MAAOsd,KAEtC,yBAAK1e,UAAU,SACb,6BACE,6BACE,0BAAMA,UAAU,UAAUmB,KAAK/B,MAAMhH,SAEvC,6BACE,0BAAM4H,UAAU,SAASmB,KAAK/B,MAAM/G,kB,GArMpBkJ,IAAMC,YAsN3Bod,GAFXjd,aA1SoB,SAAC9I,GAAD,MAA+C,CACrEX,SAAUW,EAAMgL,MAAM3L,SACtBD,QAASY,EAAMgL,MAAM5L,QACrBE,MAAOU,EAAMgL,MAAM1L,MACnBC,OAAQS,EAAMgL,MAAMzL,OACpBC,MAAOQ,EAAMgL,MAAMxL,MACnBC,YAAaO,EAAMgL,MAAMvL,YACzBC,UAAWM,EAAMgL,MAAMtL,UACvBkE,KAAM5D,EAAM4O,aAAahL,KACzBqY,kBAAmBjc,EAAM4O,aAAa9K,aAAaC,MACnDmY,gBAAiBlc,EAAM4O,aAAa9K,aAAaE,IACjDrE,YAAaK,EAAMgL,MAAMrL,YACzBC,QAASI,EAAMgL,MAAMpL,QACrBC,SAAUG,EAAMgL,MAAMnL,SACtBC,OAAQE,EAAMgL,MAAMlL,WAGK,SACzBiJ,GADyB,MAEI,CAC7B8B,WAAY,oBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACJ/B,EAASyJ,GAAsB3H,eAD3B,sCAGZ0Y,eAAgB,SAAC1jB,GACfkJ,EAASyJ,EAAmB9I,iBAAiB7J,KAE/C2lB,gBAAiB,WACfzc,EAASyJ,EAAmB5I,sBAE9B0Z,gBAAiB,WACfva,EAASyJ,EAAmB7I,gBAAe,IAC3CZ,EAASyJ,EAAmBxI,kBAAiB,KAE/CyZ,YAAa,WACX1a,EAASyJ,EAAmB7I,gBAAe,KAE7Cga,aAAc,WACZ5a,EAASyJ,EAAmB7I,gBAAe,KAE7Cwa,mBAAoB,WAClBpb,EAASyJ,GAA6BjE,mBAExC2V,kBAAmB,WACjBnb,EAASyJ,GAA6B7D,kBAExCqX,oBAAqB,SAAClmB,GACpBiJ,GAAS,gBAEX8a,kBAAmB,SAAClkB,GAClBoJ,EAASyJ,EAAmB3I,oBAAoBlK,KAElD4kB,kBAAmB,SAAC3kB,GAClBmJ,EAASyJ,EAAmB1I,gBAAgBlK,QAsP5CkJ,CAA6Cma,IC/R3CgD,I,kBAIJ,WAAY1f,GAAiC,qEACrCA,I,mHAMN,OAAK+B,KAAK/B,MAAMnE,SAGT,sCAAYkG,KAAK/B,MAAMxD,SAAvB,KAFE,kBAAC,IAAD,CAAU+P,GAAG,gB,GAZOpK,IAAMC,YAyBxBud,GAP4Brd,YACzCC,aAlCsB,SAAC9I,GAAD,MAAqD,CAC3EoC,SAAUpC,EAAMwD,KAAKpB,SACrBW,SAAU/C,EAAMwD,KAAKT,aAGI,SACzBgG,GADyB,MAEU,KA2BnCD,CAGEmd,KC0BWE,I,wBArDb,WAAY5f,GAA+B,IAAD,8BACxC,4CAAMA,KAHR6f,QAAkB,EAEwB,EAD1CC,cAA+B,GAG7B,EAAKA,cAAgB,EAAKC,mBAFc,E,gFAOxC,IADA,InBbmB1a,EAAaC,EmBa5B0a,EAAyB,GACpBpa,EAAI,EAAGA,EAAI,IAAM7D,KAAK8d,UAAWja,EACxCoa,EAAQna,MnBfSR,EmBeG,GnBfUC,EmBeN,GnBdrBC,KAAKC,MAAMD,KAAKH,UAAYE,EAAMD,IAAQA,ImBgB/C,OAAO2a,I,+BAQP,IALQ,IAAD,OAGDC,GADJle,KAAK/B,MAAMkgB,UAAY,IAAMne,KAAK/B,MAAMkgB,SAAW,KACnB,IAAO,IAAOne,KAAK8d,QACjDM,EAAsB,GACjBva,EAAI,EAAGA,GAAKqa,IAAQra,EAC3Bua,EAAKta,KAAKD,EAAI7D,KAAK8d,SAGrB,OACE,yBAAKjf,UAAU,WACb,yBAAKA,UAAU,UACZuf,EAAK5K,KAAI,SAAC6K,EAAKxa,GAAN,OACR,yBACEhF,UAAU,YACVoB,MAAO,CAAEgM,UAAU,UAAD,OAAYoS,EAAZ,UAElB,yBACExf,UAAU,QACVoB,MAAO,CACLgO,IAAI,GAAD,OAAK,EAAK8P,cAAcla,GAAxB,OAGL,yBAAKhF,UAAU,sBAKvB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,sB,GAlDIuB,IAAMC,YCsB/Bie,G,YAWJ,WAAYrgB,GAA4B,IAAD,8BACrC,4CAAMA,KARRsgB,cAOuC,IANvC7mB,MAA4B,CAC1B8mB,wBAAwB,EACxBC,eAAgB,GAChBN,SAAU,GAG2B,EA8CvCO,YAAc,WACZ,IACE,OAAO,EAAKhnB,MAAM+mB,eACfpZ,QAAO,SAAAsZ,GAAa,OAAiC,IAA7BA,EAAcC,cACtCC,MAAM,EAAG,GACTrL,KAAI,gBAAGtV,EAAH,EAAGA,GAAI4C,EAAP,EAAOA,YAAP,OAAyB,EAAKge,UAAU5gB,EAAI4C,MACnD,MAAO/C,GAEP,OADA8K,QAAQ9K,MAAMA,GACP,KAtD4B,EA0DvC+gB,UAAY,SAAChoB,EAAiBgK,GAC5B,IAAMie,EAAW,iBAAajoB,GACxBkoB,EACY,OAAhBle,EACI,GACAA,EAAYC,WAAWC,QAAQ,QAAS,YAExCie,EAA8B,CAClC/e,gBAAgB,OAAD,OAAS8e,EAAT,MAEjB,OACE,kBAAC,IAAD,CAASxU,GAAIuU,GACX,yBAAKlgB,UAAU,OACb,yBAAKA,UAAU,QAAQoB,MAAOgf,OAvEC,EA6EvCC,cAAgB,SAACpf,GACG,UAAdA,EAAM0M,KACR,EAAK2S,eAAerf,EAAMyJ,OAAOC,QA/EE,E,iFAIlB,IAAD,OAClBxJ,KAAKof,sBAELpf,KAAKue,SAAWc,aAAY,WACtB,EAAK3nB,MAAMymB,SAAW,IACxBmB,cAAc,EAAKf,UAGrB,EAAKjV,SAAS,CAAE6U,SAAU,EAAKzmB,MAAMymB,SAAW,MAC/C,O,qCAGgBY,G,mFACbQ,E,iDAAmDR,E,sBAAiBnd,I,4BAEvCkB,MAAMyc,I,cAAjCxc,E,0BACkBA,EAASC,Q,OAA3BvM,E,OACNuJ,KAAK/B,MAAMuhB,QAAQ1b,KAAnB,iBAAkCrN,EAAKyH,K,kDAEvC2K,QAAQ9K,MAAR,M,8LAKiCiC,KAAK/B,MAAhCnE,E,EAAAA,SAAUU,E,EAAAA,aAClBwF,KAAKsJ,SAAS,CAAEkV,wBAAwB,IAEnC1kB,E,wDAECylB,E,2CAAqD/kB,E,gCAAoCoH,I,4BAE5DkB,MAAMyc,I,cAAjCxc,E,2BACmDA,EAASC,Q,QAA5DvM,E,OACNuJ,KAAKsJ,SAAS,CACZmV,eAAgBhoB,EAChB+nB,wBAAwB,I,kDAG1B3V,QAAQ9K,MAAR,M,0FAyCM,IAGF0hB,EAA0C,CAC9C9P,QAHmB3P,KAAK/B,MAAlBnE,SAGc,OAAS,QAG/B,OACE,yBAAK+E,UAAU,QACb,6BACE,yBAAKA,UAAU,kBACb,6BACE,2BACEjH,KAAK,OACL+R,WAAS,EACT+V,UAAW1f,KAAKkf,cAChBtV,YAAY,yCAIlB,yBAAK/K,UAAU,qBAAqBoB,MAAOwf,GACzC,6BACE,yBAAK5gB,UAAU,kBACb,gEAEF,yBAAKA,UAAU,YAAYmB,KAAK0e,iBAInC1e,KAAK/B,MAAMnE,WAAakG,KAAKtI,MAAM8mB,wBAClC,yBAAK3f,UAAU,mBACb,kBAAC,GAAD,CAAkBsf,SAAUne,KAAKtI,MAAMymB,kB,GA7HzB/d,IAAMC,WA6InBsf,GAPgCpf,YAC7CC,aA7JsB,SAAC9I,GAAD,MAAgD,CACtEoC,SAAUpC,EAAMwD,KAAKpB,SACrBU,aAAc9C,EAAMwD,KAAKV,iBAGA,SACzBiG,GADyB,MAEK,KAsJ9BD,CAGE8d,KChIEsB,I,kBAUJ,WAAY3hB,GAA8B,IAAD,8BACvC,4CAAMA,KAPR4hB,oBAMyC,IALzCC,uBAKyC,IAJzCC,oBAIyC,IAHzCC,4BAGyC,IAFzCC,uBAEyC,IASzCC,uBAAyB,SAACpgB,GAAmC,IAAD,kBAClD+f,EADkD,EAClDA,eAAgBC,EADkC,EAClCA,kBAClBnX,EAAiBkX,EAAe7Y,QAA6BwC,MAC7DZ,EAAoBkX,EAAkB9Y,QACzCwC,MACH,EAAKvL,MAAMyK,OAAOC,EAAOC,IAdc,EAiBzCuX,0BAA4B,SAACrgB,GAAmC,IAAD,kBACrDigB,EADqD,EACrDA,eAAgBE,EADqC,EACrCA,kBAAmBD,EADkB,EAClBA,uBACrCrX,EAAiBoX,EAAe/Y,QAA6BwC,MAC7DZ,EAAoBqX,EAAkBjZ,QACzCwC,MACGT,EAAyBiX,EAAuBhZ,QACnDwC,MACH,EAAKvL,MAAM6K,OAAOH,EAAOC,EAAUG,IAtBnC,EAAK8W,eAAiBzf,IAAMwM,YAC5B,EAAKkT,kBAAoB1f,IAAMwM,YAC/B,EAAKmT,eAAiB3f,IAAMwM,YAC5B,EAAKoT,uBAAyB5f,IAAMwM,YACpC,EAAKqT,kBAAoB7f,IAAMwM,YANQ,E,sEA4BvC,GAAI5M,KAAK/B,MAAMnE,SACb,OAAO,kBAAC,IAAD,CAAU0Q,GAAG,gBAGtB,IAAM4V,EACJpgB,KAAK/B,MAAMlE,aAAed,EAAWiG,SACrCc,KAAK/B,MAAM9D,gBAAkBjB,EAAcgG,QAG7C,OACE,yBAAKL,UAAU,UACb,6BACE,6BAASA,UAAU,gBACjB,6BACE,uCACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,mCAC6B3E,IAA1B8F,KAAK/B,MAAMhE,WACR,GACA+F,KAAK/B,MAAMhE,WAAWomB,UAG9B,yBAAKxhB,UAAU,YAAYyhB,SAAU,GACnC,2BACE1oB,KAAK,OACLgS,YAAY,gBACZC,SAAUuW,EACVtZ,IAAK9G,KAAK6f,iBAEZ,yBAAKhhB,UAAU,QACb,uBAAGA,UAAU,gBAIjB,yBAAKA,UAAU,YAAYyhB,SAAU,GACnC,2BACE1oB,KAAK,WACLgS,YAAY,mBACZC,SAAUuW,EACVtZ,IAAK9G,KAAK8f,oBAEZ,yBAAKjhB,UAAU,QACb,uBAAGA,UAAU,eAIjB,yBAAKA,UAAU,mBAAmByhB,SAAU,GAC1C,2BACEzhB,UAAU,SACVjH,KAAK,SACL4R,MAAM,UACNK,SAAUuW,EACVjgB,QAASH,KAAKkgB,yBAEhB,yBAAKrhB,UAAU,aAKvB,6BAASA,UAAU,gBACjB,6BACE,uCACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,mCACgC3E,IAA7B8F,KAAK/B,MAAM5D,cACR,GACA2F,KAAK/B,MAAM5D,cAAcgmB,UAGjC,yBAAKxhB,UAAU,YAAYyhB,SAAU,GACnC,2BACE1oB,KAAK,OACLgS,YAAY,gBACZC,SAAUuW,EACVtZ,IAAK9G,KAAK+f,iBAEZ,yBAAKlhB,UAAU,QACb,uBAAGA,UAAU,gBAIjB,yBAAKA,UAAU,YAAYyhB,SAAU,GACnC,2BACEzhB,UAAU,QACVjH,KAAK,OACLgS,YAAY,yCACZC,SAAUuW,EACVtZ,IAAK9G,KAAKggB,yBAEZ,yBAAKnhB,UAAU,QACb,uBAAGA,UAAU,sBAIjB,yBAAKA,UAAU,YAAYyhB,SAAU,GACnC,2BACE1oB,KAAK,WACLgS,YAAY,mBACZC,SAAUuW,EACVtZ,IAAK9G,KAAKigB,oBAEZ,yBAAKphB,UAAU,QACb,uBAAGA,UAAU,eAIjB,yBAAKA,UAAU,mBAAmByhB,SAAU,GAC1C,2BACE1oB,KAAK,SACL4R,MAAM,UACNK,SAAUuW,EACVjgB,QAASH,KAAKmgB,4BAEhB,yBAAKthB,UAAU,mB,GAzJHuB,IAAMC,YA2KrBkgB,GAPyBhgB,YACtCC,aApMsB,SAAC9I,GAAD,MAAkD,CACxEoC,SAAUpC,EAAMwD,KAAKpB,SACrBC,WAAYrC,EAAMwD,KAAKnB,WACvBE,WAAYvC,EAAMwD,KAAKjB,WACvBE,cAAezC,EAAMwD,KAAKf,cAC1BE,cAAe3C,EAAMwD,KAAKb,kBAGD,SACzBoG,GADyB,MAEO,CAChCiI,OAAQ,SAACC,EAAeC,GACtBnI,EAASyJ,GAAqBxB,OAAOC,EAAOC,KAE9CE,OAAQ,SAACH,EAAeC,EAAkBnO,GACxCgG,EAASyJ,GAAqBpB,OAAOH,EAAOC,EAAUnO,QAqLxD+F,CAGEof,KCrLWY,GApBW,WACxB,OACE,yBAAK3hB,UAAU,WACb,yBAAKA,UAAU,yBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,SACb,kBAAC,IAAD,CACE4hB,OAAK,EACL5I,KAAK,uCACL6I,UAAWhH,KAEb,kBAAC,IAAD,CAAO+G,OAAK,EAAC5I,KAAK,cAAc6I,UAAW/C,KAC3C,kBAAC,IAAD,CAAO8C,OAAK,EAAC5I,KAAK,QAAQ6I,UAAWpC,KACrC,kBAAC,IAAD,CAAOmC,OAAK,EAAC5I,KAAK,UAAU6I,UAAWH,Q,6BCGzCI,G,YAKJ,WAAY1iB,GAAwC,IAAD,8BACjD,4CAAMA,KAFR2iB,oBACmD,EAEjD,EAAKA,eAAiBxgB,IAAMwM,YAFqB,E,sEAKzC,IAAD,EACoB5M,KAAK/B,MAAxB5H,EADD,EACCA,SAAUE,EADX,EACWA,EAAGC,EADd,EACcA,EAEfqqB,EAAkD,CACtDlR,QAAStZ,EAAW,OAAS,QAC7B4V,UAAU,aAAD,OAAe1V,EAAf,eAAuBC,EAAvB,QAGX,OACE,yBACEqI,UAAU,8BACVoB,MAAO4gB,EACP/Z,IAAK9G,KAAK4gB,gBAEV,yBAAK/hB,UAAU,mBACb,4BACGiiB,GAAQtN,KAAI,SAACuN,EAAQ/U,GAAT,OACX,wBAAIQ,IAAKR,GACP,uBACEnN,UAAS,UAAKkiB,EAAOzW,MACrBrK,MAAO,CAAEnE,MAAOilB,EAAOjlB,SAEzB,8BAAOilB,EAAOnlB,iB,GAhCUwE,IAAMC,WA+C/B2gB,GAFXxgB,aAjEoB,SACtB9I,GADsB,MAEoB,CAC1CrB,SAAUqB,EAAMkG,KAAKxH,0BAA0BC,SAC/CE,EAAGmB,EAAMkG,KAAKxH,0BAA0BE,SAASC,EACjDC,EAAGkB,EAAMkG,KAAKxH,0BAA0BE,SAASE,MAGxB,SACzBiK,GADyB,MAEiB,KAuDxCD,CAA6CmgB,IC/C3CM,G,YACJ,WAAYhjB,GAAmB,qEACvBA,I,iFAGa,IAAD,OAClBijB,SAASC,iBAAiB,eAAe,SAAArhB,GACvCA,EAAMwP,oBAER4R,SAASC,iBAAiB,SAAS,SAAArhB,GAC7B,EAAK7B,MAAMmjB,qBACf,EAAKnjB,MAAMojB,wBAEbH,SAASC,iBAAiB,UAAU,SAAArhB,GAC9B,EAAK7B,MAAMmjB,qBACf,EAAKnjB,MAAMojB,0B,+BAKb,OACE,yBAAKxiB,UAAU,QACb,kBAAC,GAAD,W,GAtBWuB,IAAMC,WAiCVihB,GAL6C9gB,aA5CpC,SAAC9I,GAAD,MAAuC,CAC7D0pB,oBAAqB1pB,EAAMkG,KAAKxH,0BAA0BC,aAGjC,SAACoK,GAAD,MAA+C,CACxE4gB,mBAAoB,WAClB5gB,EAASyJ,UAsC+C1J,CAG1DygB,IC3CI/jB,GvC8BS,WACb,IAAMqkB,EAAuBC,0BAAgBC,GACvCC,EAAcC,0BAAgBC,IAAiB3kB,GAC/C4kB,EAAmBC,8BAAoB,IAE7C,OAAOC,sBACLR,EACA/jB,IACAqkB,EAAiBH,IuCtCAM,GAsBNC,GApBO,WACpB,OACE,kBAAC,IAAD,CAAU/kB,MAAOA,IACf,kBAAC,IAAD,KACE,yBAAK2B,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,gBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,mBACb,kBAAC,GAAD,WCfQqjB,QACW,cAA7Bnb,OAAOob,SAASC,UAEe,UAA7Brb,OAAOob,SAASC,UAEhBrb,OAAOob,SAASC,SAASjI,MACvB,2DCZNkI,IAASC,OAAO,kBAAC,GAAD,MAASpB,SAASqB,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,mB","file":"static/js/main.6476f06f.chunk.js","sourcesContent":["enum ActionTypes {\r\n  SET_TRACK_ID = \"track/SET_TRACK_ID\",\r\n  FETCH_META_PENDING = \"track/FETCH_META_PENDING\",\r\n  FETCH_META_SUCCESS = \"track/FETCH_META_SUCCESS\",\r\n  FETCH_META_ERROR = \"track/FETCH_META_ERROR\",\r\n  SET_AUDIO_SOURCE = \"track/SET_AUDIO_SOURCE\",\r\n  SET_AUDIO_DURATION = \"track/SET_AUDIO_DURATION\",\r\n  SET_AUDIO_STATUS = \"track/SET_AUDIO_STATUS\",\r\n  TOOGLE_AUDIO_STATUS = \"track/TOOGLE_AUDIO_STATUS\",\r\n  SET_AUDIO_CURRENT_TIME = \"track/SET_AUDIO_CURRENT_TIME\",\r\n  SET_AUDIO_NEW_TIME = \"track/SET_AUDIO_NEW_TIME\",\r\n  TRANSFER_META_SUCCESS = \"track/TRANSFER_META_SUCCESS\",\r\n  SET_AUDIO_AUTOPLAY = \"track/SET_AUTOPLAY\",\r\n  SET_AUDIO_VOLUME = \"track/SET_AUDIO_VOLUME\"\r\n}\r\n\r\nexport default ActionTypes;\r\n","import { AppState } from \"./../../store\";\r\nimport { Moment } from \"./../../../shared/index\";\r\n\r\n/**\r\n * @description This state is responsible for the display application windows, tooltips, contextmenu's and more...\r\n */\r\nexport interface AppViewState {\r\n  readonly timelineMomentContextMenu: {\r\n    isHidden: boolean;\r\n    position: { x: number; y: number };\r\n    data: {\r\n      moment: Moment | null;\r\n    };\r\n  };\r\n\r\n  readonly timelineMomentTooltip: {\r\n    isHidden: boolean;\r\n    startPosition: { x: number; y: number };\r\n    currentPosition: { x: number; y: number };\r\n    data: {\r\n      moment: Moment | null;\r\n    };\r\n  };\r\n}\r\n\r\nexport const initialState: AppViewState = {\r\n  timelineMomentContextMenu: {\r\n    isHidden: true,\r\n    position: { x: 0, y: 0 },\r\n    data: {\r\n      moment: null\r\n    }\r\n  },\r\n\r\n  timelineMomentTooltip: {\r\n    isHidden: true,\r\n    startPosition: { x: 0, y: 0 },\r\n    currentPosition: { x: 0, y: 0 },\r\n    data: {\r\n      moment: null\r\n    }\r\n  }\r\n};\r\n\r\nexport const resetView = (state: AppState) => ({\r\n  ...state,\r\n  view: initialState\r\n});\r\n","export interface AppTrackState {\r\n  readonly trackId: number;\r\n  readonly autoplay: boolean;\r\n  readonly cover: string;\r\n  readonly author: string;\r\n  readonly title: string;\r\n  readonly audioSource: string;\r\n  readonly isPlaying: boolean;\r\n  readonly currentTime: number;\r\n  readonly newTime: number;\r\n  readonly duration: number;\r\n  readonly volume: number;\r\n}\r\n\r\nexport const initialState: AppTrackState = {\r\n  trackId: 0,\r\n  autoplay: false,\r\n  cover: \"\",\r\n  author: \"\",\r\n  title: \"\",\r\n  audioSource: \"\",\r\n  isPlaying: false,\r\n  currentTime: 0,\r\n  newTime: 0,\r\n  duration: 0,\r\n  volume: 1\r\n};\r\n","enum ActionTypes {\r\n  SET_TRACK_ID = \"viewed-track/SET_TRACK_ID\",\r\n  FETCH_META_PENDING = \"viewed-track/FETCH_META_PENDING\",\r\n  FETCH_META_SUCCESS = \"viewed-track/FETCH_META_SUCCESS\",\r\n  FETCH_META_ERROR = \"viewed-track/FETCH_META_ERROR\",\r\n  FETCH_WAVE_PENDING = \"viewed-track/FETCH_WAVE_PENDING\",\r\n  FETCH_WAVE_SUCCEESS = \"viewed-track/FETCH_WAVE_SUCCESS\",\r\n  FETCH_WAVE_ERROR = \"viewed-track/FETCH_WAVE_ERROR\",\r\n  FETCH_RATINGS_PENDING = \"viewed-track/FETCH_RATINGS_PENDING\",\r\n  FETCH_RATINGS_SUCCEESS = \"viewed-track/FETCH_RATINGS_SUCCESS\",\r\n  FETCH_RATINGS_ERROR = \"viewed-track/FETCH_RATINGS_ERROR\",\r\n  SET_SELECTED_RATING_ID = \"viewed-track/SET_SELECTED_RATING_ID\",\r\n  SET_USER_RATING_ID = \"viewed-track/SET_USER_RATING_ID\",\r\n  SET_AUDIO_SOURCE = \"viewed-track/SET_AUDIO_SOURCE\",\r\n  SET_AUDIO_DURATION = \"viewed-track/SET_AUDIO_DURATION\",\r\n  SET_AUDIO_STATUS = \"viewed-track/SET_AUDIO_STATUS\",\r\n  TOOGLE_AUDIO_STATUS = \"viewed-track/TOOGLE_AUDIO_STATUS\",\r\n  SET_AUDIO_CURRENT_TIME = \"viewed-track/SET_AUDIO_CURRENT_TIME\",\r\n  SET_IN_PLAYER = \"viewed-track/SET_IN_PLAYER\",\r\n  UNSET_IN_PLAYER = \"viewed-track/UNSET_IN_PLAYER\"\r\n}\r\n\r\nexport default ActionTypes;\r\n","import reducer from \"./track.reducers\";\r\n\r\nexport default reducer;\r\n","import { AppTrackState, initialState } from \"./track.state\";\r\nimport ActionTypes from \"./track.types\";\r\n\r\nconst trackReducer = (\r\n  state: AppTrackState = initialState,\r\n  action: any\r\n): AppTrackState => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_TRACK_ID:\r\n      return {\r\n        ...state,\r\n        trackId: action.payload.trackId\r\n      };\r\n    case ActionTypes.FETCH_META_PENDING:\r\n      return {\r\n        ...state\r\n      };\r\n    case ActionTypes.FETCH_META_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cover: action.payload.cover,\r\n        title: action.payload.title,\r\n        author: action.payload.author\r\n      };\r\n    case ActionTypes.FETCH_META_ERROR:\r\n      return {\r\n        ...state\r\n      };\r\n    case ActionTypes.SET_AUDIO_SOURCE:\r\n      return {\r\n        ...state,\r\n        audioSource: action.payload.audioSource,\r\n        isPlaying: false,\r\n        currentTime: 0\r\n      };\r\n    case ActionTypes.SET_AUDIO_DURATION:\r\n      return {\r\n        ...state,\r\n        duration: action.payload.duration\r\n      };\r\n    case ActionTypes.SET_AUDIO_STATUS:\r\n      return {\r\n        ...state,\r\n        isPlaying: action.payload.status\r\n      };\r\n    case ActionTypes.TOOGLE_AUDIO_STATUS:\r\n      return {\r\n        ...state,\r\n        isPlaying: !state.isPlaying\r\n      };\r\n\r\n    case ActionTypes.SET_AUDIO_CURRENT_TIME:\r\n      return {\r\n        ...state,\r\n        currentTime: action.payload.currentTime\r\n      };\r\n    case ActionTypes.SET_AUDIO_NEW_TIME:\r\n      return {\r\n        ...state,\r\n        newTime: action.payload.newTime\r\n      };\r\n    case ActionTypes.TRANSFER_META_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cover: action.payload.cover,\r\n        title: action.payload.title,\r\n        author: action.payload.author\r\n      };\r\n    case ActionTypes.SET_AUDIO_AUTOPLAY:\r\n      return {\r\n        ...state,\r\n        autoplay: action.payload.autoplay\r\n      };\r\n    case ActionTypes.SET_AUDIO_VOLUME:\r\n      return {\r\n        ...state,\r\n        volume: action.payload.volume\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default trackReducer;\r\n","import { Rating } from \"../../../shared\";\r\n\r\nexport interface AppViewedTrackState {\r\n  readonly trackId: number;\r\n  readonly isSetInPlayer: boolean;\r\n  readonly duration: number;\r\n  readonly cover: string;\r\n  readonly author: string;\r\n  readonly title: string;\r\n  readonly wave: Array<number>;\r\n  readonly userRatingId: number | -1;\r\n  readonly selectedRatingId: number;\r\n  readonly ratings: Array<Rating>;\r\n}\r\n\r\nexport const initialState: AppViewedTrackState = {\r\n  trackId: 0,\r\n  isSetInPlayer: false,\r\n  duration: 0,\r\n  cover: \"\",\r\n  author: \"\",\r\n  title: \"\",\r\n  wave: [],\r\n  userRatingId: -1,\r\n  selectedRatingId: 1,\r\n  ratings: []\r\n};\r\n","export enum LoginStage {\r\n  NOT_LOGGED = \"NOT_LOGGED\",\r\n  PENDING = \"PENDING\",\r\n  REJECT = \"REJECT\",\r\n  SUCCESS = \"SUCCESS\"\r\n}\r\n\r\nexport enum RegisterStage {\r\n  NOT_REGISTER = \"NOT_REGISTERED\",\r\n  PENDING = \"PENDING\",\r\n  REJECT = \"REJECT\",\r\n  SUCCESS = \"SUCCESS\"\r\n}\r\n\r\nexport type FeedbackError = {\r\n  id: number;\r\n  message?: string;\r\n};\r\n\r\nexport interface AppUserState {\r\n  readonly isLogged: boolean;\r\n  readonly loginStage: LoginStage;\r\n  readonly loginError: undefined | FeedbackError;\r\n  readonly registerStage: RegisterStage;\r\n  readonly registerError: undefined | FeedbackError;\r\n  readonly token: string;\r\n  readonly userId: number;\r\n  readonly soundcloudId: number;\r\n  readonly nickname: string;\r\n  readonly avatar: string;\r\n}\r\n\r\nexport const initialState: AppUserState = {\r\n  isLogged: false,\r\n  loginStage: LoginStage.NOT_LOGGED,\r\n  loginError: undefined,\r\n  registerStage: RegisterStage.NOT_REGISTER,\r\n  registerError: undefined,\r\n  token: \"\",\r\n  userId: 0,\r\n  soundcloudId: 0,\r\n  nickname: \"\",\r\n  avatar: \"\"\r\n};\r\n","import reducer from \"./viewed-track.reducers\";\r\n\r\nexport default reducer;\r\n","import { AppViewedTrackState, initialState } from \"./viewed-track.state\";\r\nimport ActionTypes from \"./viewed-track.types\";\r\n\r\nconst viewedTrackReducer = (\r\n  state: AppViewedTrackState = initialState,\r\n  action: any\r\n): AppViewedTrackState => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_TRACK_ID:\r\n      return {\r\n        ...state,\r\n        trackId: action.payload.trackId\r\n      };\r\n    case ActionTypes.FETCH_META_PENDING:\r\n      return {\r\n        ...state\r\n      };\r\n    case ActionTypes.FETCH_META_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cover: action.payload.cover,\r\n        title: action.payload.title,\r\n        author: action.payload.author,\r\n        duration: action.payload.duration\r\n      };\r\n    case ActionTypes.FETCH_META_ERROR:\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case ActionTypes.FETCH_WAVE_PENDING:\r\n      return {\r\n        ...state\r\n      };\r\n    case ActionTypes.FETCH_WAVE_SUCCEESS:\r\n      return {\r\n        ...state,\r\n        wave: action.payload.wave\r\n      };\r\n    case ActionTypes.FETCH_WAVE_ERROR:\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case ActionTypes.FETCH_RATINGS_PENDING:\r\n      return {\r\n        ...state\r\n      };\r\n    case ActionTypes.FETCH_RATINGS_SUCCEESS:\r\n      return {\r\n        ...state,\r\n        ratings: action.payload.ratings\r\n      };\r\n    case ActionTypes.FETCH_RATINGS_ERROR:\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case ActionTypes.SET_SELECTED_RATING_ID:\r\n      return {\r\n        ...state,\r\n        selectedRatingId: action.payload.ratingId\r\n      };\r\n    case ActionTypes.SET_USER_RATING_ID:\r\n      return {\r\n        ...state,\r\n        userRatingId: action.payload.ratingId\r\n      };\r\n\r\n    case ActionTypes.SET_IN_PLAYER:\r\n      return {\r\n        ...state,\r\n        isSetInPlayer: true\r\n      };\r\n    case ActionTypes.UNSET_IN_PLAYER:\r\n      return {\r\n        ...state,\r\n        isSetInPlayer: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default viewedTrackReducer;\r\n","enum ActionTypes {\r\n  REGISTER_PENDING = \"user/REGISTER_PENDING\",\r\n  REGISTER_SUCCESS = \"user/REGISTER_SUCCESS\",\r\n  REGISTER_REJECT = \"user/REGISTER_REJECT\",\r\n  REGISTER_ERROR = \"user/REGISTER_ERRROR\",\r\n  LOGIN_PENDING = \"user/LOGIN_PENDING\",\r\n  LOGIN_SUCCESS = \"user/LOGIN_SUCCESS\",\r\n  LOGIN_REJECT = \"user/LOGIN_REJECT\",\r\n  LOGIN_ERROR = \"user/LOGIN_ERROR\",\r\n  LOGOUT = \"user/LOGOUT\"\r\n}\r\n\r\nexport default ActionTypes;\r\n","export type Seconds = number;\r\nexport type Pixels = number;\r\nexport type Position = { x: Pixels; y: Pixels };\r\n\r\nexport enum MomentReaction {\r\n  NONE = \"None\",\r\n  SUPRRISED_FACE = \"SuprisedFace\",\r\n  CRYING_FACE = \"CryingFace\",\r\n  POUTING_FACE = \"PoutingFace\",\r\n  LOVE = \"Love\",\r\n  LAUGHING_FACE = \"LaughingFace\",\r\n  THUMB_DOWN = \"ThumbDown\",\r\n  THUMB_UP = \"ThumbUp\"\r\n}\r\n\r\nexport type MomentSection = 0 | 1 | 2 | 3 | 4;\r\n\r\nexport type MomentColor =\r\n  | \"#202020\"\r\n  | \"#5d238a\"\r\n  | \"#283dc3\"\r\n  | \"#38adae\"\r\n  | \"#f85765\"\r\n  | \"#f94922\"\r\n  | \"#d12e71\"\r\n  | \"#bc209b\"\r\n  | \"#6a4ba2\"\r\n  | string;\r\n\r\nexport type Moment = {\r\n  name: string;\r\n  description: string;\r\n  color: MomentColor;\r\n  reaction: MomentReaction;\r\n  start: Seconds;\r\n  end: Seconds;\r\n  section: MomentSection;\r\n};\r\n\r\nexport type Rating = {\r\n  ratingId: number;\r\n  user: {\r\n    userId: number;\r\n    nickname: string;\r\n    avatar: string;\r\n  };\r\n  moments: Array<Moment>;\r\n};\r\n\r\nexport type User = {\r\n  nickname: string;\r\n  login: string;\r\n  avatar: string;\r\n  soundcloudUri: string;\r\n  soundcloudId: number;\r\n  createdAt: Date;\r\n};\r\n","import {\r\n  Moment,\r\n  MomentReaction,\r\n  MomentSection,\r\n  Seconds\r\n} from \"../../../shared/index\";\r\n\r\nexport enum RatingEditorMode {\r\n  DISABLED = \"DISABLED\",\r\n  RECORDING = \"RECORDING\",\r\n  MODIFYING = \"MODIFYING\"\r\n}\r\n\r\nexport interface AppRatingEditorState {\r\n  readonly mode: RatingEditorMode;\r\n  readonly selectedTime: { start: Seconds; end: Seconds };\r\n  readonly newMoment: Moment;\r\n}\r\n\r\nexport const initialState: AppRatingEditorState = {\r\n  mode: RatingEditorMode.DISABLED,\r\n  selectedTime: { start: 0, end: 0 },\r\n  newMoment: {\r\n    name: \"Moment-name\",\r\n    description: \"\",\r\n    color: \"#202020\",\r\n    reaction: MomentReaction.NONE,\r\n    start: 0,\r\n    end: 0,\r\n    section: 2\r\n  }\r\n};\r\n","import reducer from \"./user.reducers\";\r\n\r\nexport default reducer;\r\n","import { AppUserState, initialState } from \"./user.state\";\r\nimport ActionTypes from \"./user.types\";\r\n\r\ntype Action = {\r\n  type: string;\r\n  payload?: any;\r\n  meta?: any;\r\n  error?: boolean;\r\n};\r\n\r\nconst userReducer = (\r\n  state: AppUserState = initialState,\r\n  action: Action\r\n): AppUserState => {\r\n  switch (action.type) {\r\n    case ActionTypes.REGISTER_PENDING:\r\n      return {\r\n        ...state,\r\n        registerStage: action.payload.registerStage,\r\n        registerError: undefined\r\n      };\r\n    case ActionTypes.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registerStage: action.payload.registerStage,\r\n        registerError: undefined\r\n      };\r\n    case ActionTypes.REGISTER_REJECT:\r\n      return {\r\n        ...state,\r\n        registerStage: action.payload.registerStage,\r\n        registerError: action.payload.registerError\r\n      };\r\n\r\n    case ActionTypes.LOGIN_PENDING:\r\n      return {\r\n        ...state,\r\n        isLogged: false,\r\n        loginStage: action.payload.loginStage\r\n      };\r\n\r\n    case ActionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLogged: true,\r\n        loginStage: action.payload.loginStage,\r\n        token: action.payload.token,\r\n        userId: -1, // TODO\r\n        soundcloudId: action.payload.user.soundcloudId,\r\n        nickname: action.payload.user.nickname,\r\n        avatar: action.payload.user.avatar\r\n      };\r\n\r\n    case ActionTypes.LOGIN_REJECT:\r\n      return {\r\n        ...state,\r\n        isLogged: false,\r\n        loginStage: action.payload.loginStage\r\n      };\r\n\r\n    case ActionTypes.LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        isLogged: false\r\n      };\r\n\r\n    case ActionTypes.LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLogged: false,\r\n        loginStage: action.payload.loginStage\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","enum ActionTypes {\r\n  SET_MODE = \"rating-editor/SET_MODE\",\r\n  SET_SELECTED_TIME_START = \"rating-editor/SET_SELECTED_TIME_START\",\r\n  SET_SELECTED_TIME_END = \"rating-editor/SET_SELECTED_TIME_END\",\r\n  SET_NEW_MOMENT_NAME = \"rating-editor/SET_NEW_MOMENT_NAME\",\r\n  SET_NEW_MOMENT_DESCRIPTION = \"rating-editor/SET_NEW_MOMENT_DESCRIPTION\",\r\n  SET_NEW_MOMENT_COLOR = \"rating-editor/SET_NEW_MOMENT_COLOR\",\r\n  SET_NEW_MOMENT_REACTION = \"rating-editor/SET_NEW_MOMENT_REACTION\",\r\n  SET_NEW_MOMENT_TIME_START = \"rating-editor/SET_NEW_MOMENT_TIME_START\",\r\n  SET_NEW_MOMENT_TIME_END = \"rating-editor/SET_NEW_MOMENT_TIME_END\",\r\n  SET_NEW_MOMENT_SECTION = \"rating-editor/SET_NEW_MOMENT_SECTION\",\r\n  RESET_MOMENT_EDITOR = \"rating-editor/RESET_MOMENT_EDITOR\",\r\n  SEND_NEW_MOMENT_PENDING = \"rating-editor/SEND_NEW_MOMENT_PENDING\",\r\n  SEND_NEW_MOMENT_REJECT = \"rating-editor/SEND_NEW_MOMENT_REJECT\",\r\n  SEND_NEW_MOMENT_SUCCESS = \"rating-editor/SEND_NEW_MOMENT_SUCCESS\",\r\n  SEND_NEW_MOMENT_ERROR = \"rating-editor/SEND_NEW_MOMENT_ERROR\"\r\n}\r\n\r\nexport default ActionTypes;\r\n","enum ActionTypes {\r\n  SHOW_TIMELINE_MOMENT_CONTEXTMENU = \"view/SHOW_TIMELINE_MOMENT_CONTEXTMENU\",\r\n  HIDE_TIMELINE_MOMENT_CONTEXTMENU = \"view/HIDE_TIMELINE_MOMENT_CONTEXTMENU\",\r\n  SHOW_TIMELINE_MOMENT_TOOLTIP = \"view/SHOW_TIMELINE_MOMENT_TOOLTIP\",\r\n  UPDATE_TIMELINE_MOMENT_TOOLTIP = \"view/UPDATE_TIMELINE_MOMENT_TOOLTIP\",\r\n  HIDE_TIMELINE_MOMENT_TOOLTIP = \"view/HIDE_TIMELINE_MOMENT_TOOLTIP\"\r\n}\r\n\r\nexport default ActionTypes;\r\n","import reducer from \"./rating-editor.reducers\";\r\n\r\nexport default reducer;\r\n","import { AppRatingEdtiorActions } from \"./rating-editor.actions\";\r\nimport { AppRatingEditorState, initialState } from \"./rating-editor.state\";\r\nimport ActionTypes from \"./rating-editor.types\";\r\nimport { Reducer } from \"react\";\r\nimport { MomentReaction } from \"../../../shared\";\r\n\r\nconst ratingEditorReducer: Reducer<\r\n  AppRatingEditorState | undefined,\r\n  AppRatingEdtiorActions\r\n> = (\r\n  state: AppRatingEditorState = initialState,\r\n  action: AppRatingEdtiorActions\r\n): AppRatingEditorState => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_MODE:\r\n      return {\r\n        ...state,\r\n        mode: action.payload.mode\r\n      };\r\n    case ActionTypes.SET_SELECTED_TIME_START:\r\n      return {\r\n        ...state,\r\n        selectedTime: {\r\n          ...state.selectedTime,\r\n          start: action.payload.start\r\n        }\r\n      };\r\n    case ActionTypes.SET_SELECTED_TIME_END:\r\n      return {\r\n        ...state,\r\n        selectedTime: {\r\n          ...state.selectedTime,\r\n          end: action.payload.end\r\n        }\r\n      };\r\n\r\n    case ActionTypes.SET_NEW_MOMENT_NAME:\r\n      return {\r\n        ...state,\r\n        newMoment: {\r\n          ...state.newMoment,\r\n          name: action.payload.name\r\n        }\r\n      };\r\n\r\n    case ActionTypes.SET_NEW_MOMENT_DESCRIPTION:\r\n      return {\r\n        ...state,\r\n        newMoment: {\r\n          ...state.newMoment,\r\n          description: action.payload.description\r\n        }\r\n      };\r\n\r\n    case ActionTypes.SET_NEW_MOMENT_COLOR:\r\n      return {\r\n        ...state,\r\n        newMoment: {\r\n          ...state.newMoment,\r\n          color: action.payload.color\r\n        }\r\n      };\r\n\r\n    case ActionTypes.SET_NEW_MOMENT_REACTION:\r\n      return {\r\n        ...state,\r\n        newMoment: {\r\n          ...state.newMoment,\r\n          reaction: action.payload.reaction\r\n        }\r\n      };\r\n    case ActionTypes.SET_NEW_MOMENT_TIME_START:\r\n      return {\r\n        ...state,\r\n        newMoment: {\r\n          ...state.newMoment,\r\n          start: action.payload.start\r\n        }\r\n      };\r\n    case ActionTypes.SET_NEW_MOMENT_TIME_END:\r\n      return {\r\n        ...state,\r\n        newMoment: {\r\n          ...state.newMoment,\r\n          end: action.payload.end\r\n        }\r\n      };\r\n    case ActionTypes.SET_NEW_MOMENT_SECTION:\r\n      return {\r\n        ...state,\r\n        newMoment: {\r\n          ...state.newMoment,\r\n          section: action.payload.section\r\n        }\r\n      };\r\n    case ActionTypes.RESET_MOMENT_EDITOR:\r\n      return {\r\n        ...state,\r\n        newMoment: {\r\n          ...state.newMoment,\r\n          name: \"moment-name\",\r\n          description: \"\",\r\n          color: \"#202020\",\r\n          reaction: MomentReaction.NONE,\r\n          section: 2\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ratingEditorReducer;\r\n","import reducer from \"./view.reducers\";\r\n\r\nexport default reducer;\r\n","import { Reducer } from \"react\";\r\nimport { AppViewState, initialState } from \"./view.state\";\r\nimport { AppViewActions } from \"./view.actions\";\r\nimport ActionTypes from \"./view.types\";\r\n\r\nconst viewReducer: Reducer<AppViewState | undefined, AppViewActions> = (\r\n  state: AppViewState = initialState,\r\n  action: AppViewActions\r\n): AppViewState => {\r\n  switch (action.type) {\r\n    case ActionTypes.SHOW_TIMELINE_MOMENT_CONTEXTMENU:\r\n      return {\r\n        ...state,\r\n        timelineMomentContextMenu: {\r\n          ...state.timelineMomentContextMenu,\r\n          isHidden: false,\r\n          position: action.payload.position\r\n        }\r\n      };\r\n    case ActionTypes.HIDE_TIMELINE_MOMENT_CONTEXTMENU:\r\n      return {\r\n        ...state,\r\n        timelineMomentContextMenu: {\r\n          ...state.timelineMomentContextMenu,\r\n          isHidden: true\r\n        }\r\n      };\r\n    case ActionTypes.SHOW_TIMELINE_MOMENT_TOOLTIP:\r\n      return {\r\n        ...state,\r\n        timelineMomentTooltip: {\r\n          ...state.timelineMomentTooltip,\r\n          isHidden: true\r\n        }\r\n      };\r\n    case ActionTypes.HIDE_TIMELINE_MOMENT_TOOLTIP:\r\n      return {\r\n        ...state,\r\n        timelineMomentContextMenu: {\r\n          ...state.timelineMomentContextMenu,\r\n          isHidden: true\r\n        }\r\n      };\r\n    case ActionTypes.HIDE_TIMELINE_MOMENT_TOOLTIP:\r\n      return {\r\n        ...state,\r\n        timelineMomentContextMenu: {\r\n          ...state.timelineMomentContextMenu,\r\n          isHidden: true\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default viewReducer;\r\n","import { AppViewState, resetView } from \"./ducks/view/view.state\";\r\nimport { AppRatingEditorState } from \"./ducks/rating-editor/rating-editor.state\";\r\nimport { AppUserState } from \"./ducks/user/user.state\";\r\nimport { AppViewedTrackState } from \"./ducks/viewed-track/viewed-track.state\";\r\nimport {\r\n  createStore,\r\n  applyMiddleware,\r\n  combineReducers,\r\n  Reducer,\r\n  Store\r\n} from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport * as reducers from \"./ducks\";\r\nimport { AppTrackState } from \"./ducks/track/track.state\";\r\nimport ActionTypes from \"./ducks/track/track.types\";\r\n\r\nexport type AppState = {\r\n  view: AppViewState;\r\n  track: AppTrackState;\r\n  viewedTrack: AppViewedTrackState;\r\n  user: AppUserState;\r\n  ratingEditor: AppRatingEditorState;\r\n};\r\n\r\nconst persistDataMiddleware = (store: any) => (next: any) => (action: any) => {\r\n  if (action.type === ActionTypes.SET_AUDIO_CURRENT_TIME) return next(action);\r\n  next(action);\r\n  localStorage[\"appState\"] = JSON.stringify(store.getState());\r\n};\r\n\r\nconst getPersistedState = (): AppState | undefined => {\r\n  try {\r\n    const persistedState = localStorage.getItem(\"appState\");\r\n    if (persistedState === null) throw new Error();\r\n    const state: AppState = JSON.parse(persistedState);\r\n    return resetView(state);\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport default function getStore(): Store {\r\n  const rootReducer: Reducer = combineReducers(reducers);\r\n  const middlewares = applyMiddleware(thunkMiddleware, persistDataMiddleware);\r\n  const composeEnhancers = composeWithDevTools({});\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    getPersistedState(),\r\n    composeEnhancers(middlewares)\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Logo.scss\";\r\nimport \"./logo-svg.scss\";\r\n\r\nconst Logo: React.FC = (props: any) => (\r\n  <div id=\"logo-box\">\r\n    <svg\r\n      id=\"prefix__Warstwa_1\"\r\n      x={0}\r\n      y={0}\r\n      viewBox=\"0 0 1024 600\"\r\n      xmlSpace=\"preserve\"\r\n      {...props}\r\n    >\r\n      <style>\r\n        {\r\n          \".prefix__st1{fill:none;stroke:#fff;stroke-width:14.4911;stroke-linecap:round;stroke-miterlimit:10}.prefix__st2{fill:#fff}\"\r\n        }\r\n      </style>\r\n      <ellipse\r\n        cx={182.27}\r\n        cy={347.29}\r\n        rx={59.65}\r\n        ry={60.49}\r\n        fill=\"none\"\r\n        stroke=\"#fff\"\r\n        strokeWidth={14.491}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path className=\"prefix__st1\" d=\"M241.93 347.29V30.83\" />\r\n      <path\r\n        className=\"prefix__st2\"\r\n        d=\"M338.79 413.22c-12.35 0-23.32-2.77-32.93-8.32-9.61-5.54-17.15-13.24-22.62-23.09-5.47-9.84-8.21-21.1-8.21-33.76 0-12.81 2.58-24.1 7.74-33.87 5.16-9.76 12.27-17.46 21.33-23.09 9.06-5.63 19.46-8.44 31.18-8.44 11.56 0 21.8 2.7 30.71 8.09s15.86 12.82 20.86 22.27c5 9.46 7.5 20.36 7.5 32.7 0 2.03-.63 3.63-1.88 4.81-1.25 1.17-2.89 1.76-4.92 1.76H284.41v-12.19H391.3l-10.31 7.74c.31-10.16-1.41-19.14-5.16-26.96-3.75-7.81-9.11-13.95-16.06-18.4-6.96-4.45-15.12-6.68-24.5-6.68-8.91 0-16.84 2.23-23.79 6.68-6.95 4.45-12.42 10.59-16.41 18.4-3.99 7.82-5.98 16.88-5.98 27.19 0 10.16 2.11 19.15 6.33 26.96 4.22 7.82 10.08 13.95 17.58 18.4 7.5 4.45 16.1 6.68 25.78 6.68 6.1 0 12.23-1.06 18.4-3.16 6.17-2.11 11.05-4.88 14.65-8.32 1.25-1.25 2.77-1.91 4.57-1.99 1.8-.08 3.32.43 4.57 1.52 1.72 1.41 2.61 2.97 2.7 4.69.08 1.72-.67 3.28-2.23 4.69-5 4.53-11.53 8.28-19.57 11.25-8.04 2.95-15.73 4.44-23.08 4.44zM414.74 301.17c-1.88 0-3.4-.58-4.57-1.76-1.17-1.17-1.76-2.7-1.76-4.57s.58-3.4 1.76-4.57c1.17-1.17 2.7-1.76 4.57-1.76h63.53c1.88 0 3.4.58 4.57 1.76 1.17 1.17 1.76 2.7 1.76 4.57s-.59 3.4-1.76 4.57c-1.17 1.17-2.7 1.76-4.57 1.76h-63.53zm62.59 110.88c-8.6-.15-16.26-2.15-22.97-5.98-6.72-3.83-11.95-9.14-15.71-15.94-3.75-6.8-5.63-14.49-5.63-23.09V250.3c0-2.19.66-3.94 1.99-5.27 1.33-1.33 3.01-1.99 5.04-1.99 2.19 0 3.95.67 5.28 1.99 1.33 1.33 1.99 3.09 1.99 5.27v116.74c0 9.07 2.81 16.45 8.44 22.15 5.63 5.71 12.89 8.56 21.8 8.56h5.16c2.19 0 3.94.67 5.27 1.99 1.33 1.33 1.99 3.09 1.99 5.28 0 2.03-.67 3.71-1.99 5.04-1.33 1.33-3.09 1.99-5.27 1.99h-5.39zM577.9 413.45c-12.5 0-23.72-2.85-33.64-8.56-9.92-5.7-17.74-13.51-23.44-23.44-5.7-9.92-8.56-21.06-8.56-33.4 0-12.5 2.86-23.71 8.56-33.64 5.7-9.92 13.52-17.73 23.44-23.44 9.92-5.7 21.14-8.56 33.64-8.56s23.67 2.85 33.52 8.56c9.85 5.71 17.61 13.52 23.32 23.44 5.7 9.93 8.56 21.14 8.56 33.64l-5.86 9.38c0 10.63-2.62 20.16-7.86 28.6-5.24 8.44-12.3 15.12-21.21 20.04s-19.07 7.38-30.47 7.38zm0-13.12c9.85 0 18.64-2.3 26.37-6.92 7.73-4.61 13.84-10.86 18.29-18.75 4.45-7.89 6.68-16.76 6.68-26.61 0-10-2.22-18.95-6.68-26.84-4.45-7.89-10.56-14.14-18.29-18.75-7.73-4.61-16.52-6.92-26.37-6.92-9.69 0-18.44 2.31-26.26 6.92-7.82 4.61-13.98 10.86-18.51 18.75-4.54 7.89-6.8 16.84-6.8 26.84 0 9.85 2.26 18.72 6.8 26.61 4.53 7.89 10.7 14.15 18.51 18.75 7.82 4.61 16.57 6.92 26.26 6.92zm58.37 11.72c-2.03 0-3.71-.66-5.04-1.99s-2-3.01-2-5.04v-42.9l4.45-14.07h9.61v56.96c0 2.03-.62 3.71-1.87 5.04s-2.97 2-5.15 2zM689.94 256.86c-2.97 0-5.51-1.06-7.62-3.16-2.11-2.11-3.16-4.73-3.16-7.85 0-3.59 1.13-6.29 3.4-8.09 2.26-1.79 4.81-2.7 7.62-2.7 2.66 0 5.12.9 7.38 2.7 2.26 1.8 3.4 4.5 3.4 8.09 0 3.13-1.06 5.74-3.17 7.85-2.11 2.11-4.72 3.16-7.85 3.16zm.24 155.19c-2.04 0-3.72-.66-5.04-1.99-1.33-1.33-1.99-3.01-1.99-5.04V290.85c0-2.19.66-3.9 1.99-5.16 1.32-1.25 3.01-1.88 5.04-1.88 2.19 0 3.9.63 5.16 1.88 1.25 1.25 1.87 2.97 1.87 5.16v114.16c0 2.03-.62 3.71-1.87 5.04-1.26 1.33-2.98 2-5.16 2zM769.88 412.05c-5.94 0-11.22-1.64-15.82-4.92-4.61-3.28-8.2-7.81-10.78-13.6-2.58-5.78-3.87-12.5-3.87-20.16V236c0-2.19.67-3.9 1.99-5.16 1.33-1.25 3.01-1.88 5.04-1.88 2.19 0 3.9.63 5.16 1.88 1.25 1.25 1.88 2.97 1.88 5.16v137.37c0 7.19 1.52 13.09 4.57 17.7 3.05 4.61 6.99 6.92 11.84 6.92h5.86c1.72 0 3.13.63 4.22 1.88 1.09 1.25 1.64 2.97 1.64 5.16 0 2.03-.62 3.71-1.88 5.04s-2.97 1.99-5.16 1.99h-4.69zM850.98 413.45c-8.12 0-16.64-1.48-25.55-4.45s-16.33-7.97-22.27-15c-1.25-1.56-1.76-3.24-1.52-5.04.23-1.79 1.21-3.32 2.93-4.57 1.56-1.09 3.24-1.48 5.04-1.17 1.79.32 3.24 1.17 4.34 2.58 4.53 5.32 10.04 9.03 16.52 11.14 6.48 2.11 13.56 3.16 21.21 3.16 13.13 0 22.43-2.34 27.89-7.03s8.21-10.16 8.21-16.41c0-6.09-2.93-11.13-8.79-15.12s-14.89-6.83-27.08-8.56c-15.63-2.19-27.2-6.41-34.7-12.66-7.5-6.25-11.25-13.51-11.25-21.8 0-7.81 1.95-14.42 5.86-19.81 3.9-5.39 9.26-9.45 16.06-12.19 6.8-2.73 14.57-4.1 23.32-4.1 10.63 0 19.61 1.92 26.95 5.74 7.35 3.83 13.28 8.95 17.82 15.35 1.25 1.56 1.68 3.24 1.29 5.04-.4 1.8-1.61 3.25-3.63 4.34-1.57.78-3.2 1.02-4.92.7-1.72-.31-3.2-1.25-4.45-2.81-3.91-5-8.64-8.79-14.18-11.37-5.55-2.58-12-3.87-19.34-3.87-9.84 0-17.51 2.11-22.97 6.33-5.47 4.22-8.21 9.3-8.21 15.24 0 4.06 1.13 7.62 3.4 10.67 2.26 3.05 5.98 5.63 11.13 7.74 5.16 2.11 12.03 3.79 20.63 5.04 11.72 1.56 20.98 4.22 27.78 7.97 6.8 3.75 11.64 8.09 14.53 13.01 2.89 4.92 4.34 10.2 4.34 15.82 0 7.35-2.34 13.75-7.03 19.22-4.69 5.47-10.87 9.65-18.52 12.54-7.65 2.89-15.93 4.33-24.84 4.33z\"\r\n      />\r\n      <path\r\n        className=\"prefix__st1\"\r\n        d=\"M241.93 28.17s129.86 5.16 129.86 131.68M241.93 81.45s84.57 9.68 84.57 92.12M480.1 571.83s-113.21-4.44-113.21-113.21M480.1 526.02s-73.73-8.32-73.73-79.2\"\r\n      />\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport \"./gradient-header.scss\";\r\n\r\ntype GradientHeaderProps = {\r\n  icon: string;\r\n  text: string;\r\n};\r\n\r\nconst GradientHeader: FunctionComponent<GradientHeaderProps> = ({\r\n  text\r\n}: GradientHeaderProps) => {\r\n  return (\r\n    <div className=\"gradient-header\">\r\n      <div>\r\n        <span>{text}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GradientHeader;\r\n","import { LoginStage, RegisterStage, FeedbackError } from \"./user.state\";\r\nimport ActionTypes from \"./user.types\";\r\nimport { User } from \"../../../shared\";\r\n\r\ntype Action = {\r\n  type: string;\r\n  payload?: any;\r\n  meta?: any;\r\n  error?: boolean;\r\n};\r\n\r\nconst registerPending = (): Action => ({\r\n  type: ActionTypes.REGISTER_PENDING,\r\n  payload: {\r\n    registerStage: RegisterStage.PENDING\r\n  }\r\n});\r\n\r\nconst registerSuccess = (): Action => ({\r\n  type: ActionTypes.REGISTER_SUCCESS,\r\n  payload: {\r\n    registerStage: RegisterStage.SUCCESS\r\n  }\r\n});\r\n\r\nconst registerReject = (error?: FeedbackError): Action => ({\r\n  type: ActionTypes.REGISTER_REJECT,\r\n  payload: {\r\n    registerStage: RegisterStage.REJECT,\r\n    registerError: error\r\n  }\r\n});\r\n\r\nconst registerError = (error: any): Action => ({\r\n  type: ActionTypes.REGISTER_ERROR,\r\n  error: error\r\n});\r\n\r\nconst loginPending = (): Action => ({\r\n  type: ActionTypes.LOGIN_PENDING,\r\n  payload: {\r\n    loginStage: LoginStage.PENDING\r\n  }\r\n});\r\n\r\nconst loginSuccess = (\r\n  user: User | undefined,\r\n  token: string | undefined\r\n): Action => ({\r\n  type: ActionTypes.LOGIN_SUCCESS,\r\n  payload: {\r\n    loginStage: LoginStage.SUCCESS,\r\n    user: user,\r\n    token: token\r\n  }\r\n});\r\n\r\nconst loginReject = (error?: FeedbackError): Action => ({\r\n  type: ActionTypes.LOGIN_REJECT,\r\n  payload: {\r\n    loginStage: LoginStage.REJECT,\r\n    loginError: error\r\n  }\r\n});\r\n\r\nconst loginError = (error: any): Action => ({\r\n  type: ActionTypes.LOGIN_ERROR,\r\n  error: error\r\n});\r\n\r\nconst logout = (): Action => ({\r\n  type: ActionTypes.LOGOUT,\r\n  payload: {\r\n    loginStage: LoginStage.NOT_LOGGED\r\n  }\r\n});\r\n\r\nexport default {\r\n  registerPending,\r\n  registerSuccess,\r\n  registerReject,\r\n  registerError,\r\n  loginPending,\r\n  loginSuccess,\r\n  loginReject,\r\n  loginError,\r\n  logout\r\n};\r\n","import React, { Dispatch, ComponentClass } from \"react\";\r\nimport \"./user-bar.scss\";\r\nimport { SoundCloud, API_KEY } from \"../../../core/soundcloud\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { ConnectedComponent } from \"react-redux\";\r\n\r\nimport userActions from \"../../../core/state/ducks/user/user.actions\";\r\nimport userOperations from \"../../../core/state/ducks/user/user.operations\";\r\n\r\nconst mapStateToProps = (state: AppState): UserBarProps | any => ({\r\n  isLogged: state.user.isLogged,\r\n  nickname: state.user.nickname,\r\n  avatar: state.user.avatar\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): UserBarProps | any => ({\r\n  logOut: () => {\r\n    dispatch(userActions.logout());\r\n  }\r\n});\r\n\r\ntype UserBarProps = {\r\n  isLogged: boolean;\r\n  nickname: string;\r\n  avatar: string;\r\n  logOut: () => void;\r\n};\r\n\r\ntype UserBarState = {};\r\n\r\nclass UserBar extends React.Component<UserBarProps, UserBarState> {\r\n  constructor(props: UserBarProps) {\r\n    super(props);\r\n  }\r\n\r\n  handleUserLogoutClick = (event: React.MouseEvent) => {\r\n    this.props.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user-bar\">\r\n        <div>\r\n          <div className=\"user-box\">\r\n            <div className=\"user-nickname\">\r\n              <span>{this.props.nickname}</span>\r\n            </div>\r\n            <div className=\"user-photo\">\r\n              <div\r\n                style={{ backgroundImage: `url(${this.props.avatar})` }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"user-logout\" onClick={this.handleUserLogoutClick}>\r\n            <span>Log out</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserBarContainer: ComponentClass = withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(UserBar) as ConnectedComponent<\r\n    typeof UserBar,\r\n    any\r\n  >\r\n);\r\n\r\nexport default UserBarContainer;\r\n","import ActionTypes from \"./track.types\";\r\nimport { SoundCloud } from \"../../../soundcloud\";\r\n\r\ntype Action = {\r\n  type: string;\r\n  payload?: any;\r\n  meta?: any;\r\n  error?: boolean;\r\n};\r\n\r\nconst setTrackId = (trackId: number): Action => ({\r\n  type: ActionTypes.SET_TRACK_ID,\r\n  payload: {\r\n    trackId: trackId\r\n  }\r\n});\r\n\r\nconst fetchMetaPending = (trackId: number): Action => ({\r\n  type: ActionTypes.FETCH_META_PENDING,\r\n  payload: {\r\n    trackId: trackId\r\n  }\r\n});\r\n\r\nconst fetchMetaSuccess = (data: SoundCloud.TrackData): Action => ({\r\n  type: ActionTypes.FETCH_META_SUCCESS,\r\n  payload: {\r\n    cover: data.artwork_url.toString().replace(\"large\", \"t500x500\"),\r\n    title: data.title,\r\n    author: data.user.username\r\n  }\r\n});\r\n\r\nconst fetchMetaError = (error: any): Action => ({\r\n  type: ActionTypes.FETCH_META_ERROR,\r\n  error: error\r\n});\r\n\r\nconst setAudioSource = (audioSource: string): Action => ({\r\n  type: ActionTypes.SET_AUDIO_SOURCE,\r\n  payload: {\r\n    audioSource: audioSource\r\n  }\r\n});\r\n\r\nconst setAudioDuration = (duration: number): Action => ({\r\n  type: ActionTypes.SET_AUDIO_DURATION,\r\n  payload: {\r\n    duration: duration\r\n  }\r\n});\r\n\r\nconst setAudioStatus = (status: boolean): Action => ({\r\n  type: ActionTypes.SET_AUDIO_STATUS,\r\n  payload: {\r\n    status: status\r\n  }\r\n});\r\n\r\nconst toogleAudioStatus = (): Action => ({\r\n  type: ActionTypes.TOOGLE_AUDIO_STATUS\r\n});\r\n\r\nconst setAudioCurrentTime = (currentTime: number): Action => ({\r\n  type: ActionTypes.SET_AUDIO_CURRENT_TIME,\r\n  payload: {\r\n    currentTime: currentTime\r\n  }\r\n});\r\n\r\nconst setAudioNewTime = (newTime: number): Action => ({\r\n  type: ActionTypes.SET_AUDIO_NEW_TIME,\r\n  payload: {\r\n    newTime: newTime\r\n  }\r\n});\r\n\r\nconst setAudioVolume = (volume: number): Action => ({\r\n  type: ActionTypes.SET_AUDIO_VOLUME,\r\n  payload: {\r\n    volume: volume\r\n  }\r\n});\r\n\r\nconst transferMetaSuccess = (data: {\r\n  title: string;\r\n  cover: string;\r\n  author: string;\r\n}): Action => ({\r\n  type: ActionTypes.TRANSFER_META_SUCCESS,\r\n  payload: {\r\n    title: data.title,\r\n    cover: data.cover,\r\n    author: data.author\r\n  }\r\n});\r\n\r\nconst setAudioAutoplay = (autoplay: boolean) => ({\r\n  type: ActionTypes.SET_AUDIO_AUTOPLAY,\r\n  payload: {\r\n    autoplay: autoplay\r\n  }\r\n});\r\n\r\nexport default {\r\n  setTrackId,\r\n  fetchMetaPending,\r\n  fetchMetaSuccess,\r\n  fetchMetaError,\r\n  setAudioSource,\r\n  setAudioDuration,\r\n  setAudioStatus,\r\n  toogleAudioStatus,\r\n  setAudioCurrentTime,\r\n  setAudioNewTime,\r\n  transferMetaSuccess,\r\n  setAudioAutoplay,\r\n  setAudioVolume\r\n};\r\n","export const API_KEY = \"wpfE1K2Teq4ZQ0QxdOuzIPTQUrcPO9P6\";\r\n\r\n/**\r\n * @link https://developers.soundcloud.com/docs/api/reference#tracks\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport declare namespace SoundCloud {\r\n  type TrackData = {\r\n    id: number;\r\n    created_at: any;\r\n    user_id: number;\r\n    duration: number;\r\n    commentable: boolean;\r\n    state: any;\r\n    sharing: any;\r\n    tag_list: any;\r\n    permalink: any;\r\n    description: any;\r\n    streamable: boolean;\r\n    downloadable: boolean;\r\n    genre: any;\r\n    release: any;\r\n    purchase_url: any;\r\n    label_id: any;\r\n    label_name: any;\r\n    isrc: any;\r\n    video_url: any;\r\n    track_type: any;\r\n    key_signature: any;\r\n    bpm: any;\r\n    title: string;\r\n    release_year: any;\r\n    release_month: any;\r\n    release_day: any;\r\n    original_format: any;\r\n    original_content_size: number;\r\n    license: any;\r\n    uri: string;\r\n    permalink_url: string;\r\n    artwork_url: any;\r\n    waveform_url: string;\r\n    user: {\r\n      id: number;\r\n      permalink: any;\r\n      username: any;\r\n      uri: string;\r\n      permalink_url: string;\r\n      avatar_url: string;\r\n    };\r\n    stream_url: string;\r\n    download_url: string;\r\n    playback_count: number;\r\n    download_count: number;\r\n    favoritings_count: number;\r\n    comment_count: number;\r\n    attachments_uri: string;\r\n  };\r\n\r\n  type UserFavouritesData = {\r\n    kind: string;\r\n    id: number;\r\n    created_at: Date;\r\n    user_id: number;\r\n    duration: number;\r\n    commentable: boolean;\r\n    state: string;\r\n    original_content_size: number;\r\n    last_modified: Date;\r\n    sharing: string;\r\n    tag_list: string;\r\n    permalink: string;\r\n    streamable: boolean;\r\n    embeddable_by: string;\r\n    downloadable: boolean;\r\n    purchase_url: string;\r\n    label_id: number | null;\r\n    purchase_title: string;\r\n    genre: string;\r\n    title: string;\r\n    description: string;\r\n    label_name: string | null;\r\n    release: any | null;\r\n    track_type: any | null;\r\n    key_signature: any | null;\r\n    isrc: any | null;\r\n    video_url: any | null;\r\n    bpm: number | null;\r\n    release_year: number | null;\r\n    release_month: number | null;\r\n    release_day: number | null;\r\n    original_format: string;\r\n    license: string;\r\n    uri: string;\r\n    user: {\r\n      id: number;\r\n      kind: string;\r\n      permalink: string;\r\n      username: string;\r\n      last_modified: Date;\r\n    };\r\n    permalink_url: string;\r\n    artwork_url: string | null;\r\n    waveform_url: string | null;\r\n    stream_url: string | null;\r\n    playback_count: number;\r\n    download_count: number;\r\n    favoritings_count: number;\r\n    comment_count: number;\r\n  };\r\n}\r\n","import ActionTypes from \"./viewed-track.types\";\r\nimport { SoundCloud } from \"../../../soundcloud\";\r\nimport { Rating } from \"../../../shared\";\r\n\r\ntype Action = {\r\n  type: string;\r\n  payload?: any;\r\n  meta?: any;\r\n  error?: boolean;\r\n};\r\n\r\nconst setTrackId = (trackId: number): Action => ({\r\n  type: ActionTypes.SET_TRACK_ID,\r\n  payload: {\r\n    trackId: trackId\r\n  }\r\n});\r\n\r\nconst fetchMetaPending = (trackId: number): Action => ({\r\n  type: ActionTypes.FETCH_META_PENDING,\r\n  payload: {\r\n    trackId: trackId\r\n  }\r\n});\r\n\r\nconst fetchMetaSuccess = (data: SoundCloud.TrackData): Action => ({\r\n  type: ActionTypes.FETCH_META_SUCCESS,\r\n  payload: {\r\n    cover: data.artwork_url.toString().replace(\"large\", \"t500x500\"),\r\n    title: data.title,\r\n    author: data.user.username,\r\n    duration: data.duration / 1000\r\n  }\r\n});\r\n\r\nconst fetchMetaError = (error: any): Action => ({\r\n  type: ActionTypes.FETCH_META_ERROR,\r\n  error: error\r\n});\r\n\r\nconst fetchWavePending = (): Action => ({\r\n  type: ActionTypes.FETCH_WAVE_PENDING\r\n});\r\n\r\nconst fetchWaveSuccess = (wave: Array<number>): Action => ({\r\n  type: ActionTypes.FETCH_WAVE_SUCCEESS,\r\n  payload: {\r\n    wave: wave\r\n  }\r\n});\r\n\r\nconst fetchWaveError = (error: any): Action => ({\r\n  type: ActionTypes.FETCH_WAVE_ERROR,\r\n  error: error\r\n});\r\n\r\nconst fetchRatingsPending = (): Action => ({\r\n  type: ActionTypes.FETCH_RATINGS_PENDING\r\n});\r\n\r\nconst fetchRatingsSuccess = (ratings: Array<Rating>): Action => ({\r\n  type: ActionTypes.FETCH_RATINGS_SUCCEESS,\r\n  payload: {\r\n    ratings: ratings\r\n  }\r\n});\r\n\r\nconst fetchRatingsError = (error: any): Action => ({\r\n  type: ActionTypes.FETCH_RATINGS_ERROR,\r\n  error: error\r\n});\r\n\r\nconst setSelectedRatingId = (ratingId: number): Action => ({\r\n  type: ActionTypes.SET_SELECTED_RATING_ID,\r\n  payload: {\r\n    ratingId: ratingId\r\n  }\r\n});\r\n\r\nconst setUserRatingId = (ratingId: number): Action => ({\r\n  type: ActionTypes.SET_USER_RATING_ID,\r\n  payload: {\r\n    ratingId: ratingId\r\n  }\r\n});\r\n\r\nconst setInPlayer = (): Action => ({\r\n  type: ActionTypes.SET_IN_PLAYER\r\n});\r\n\r\nconst unsetInPlayer = (): Action => ({\r\n  type: ActionTypes.UNSET_IN_PLAYER\r\n});\r\n\r\nexport default {\r\n  setTrackId,\r\n  fetchMetaPending,\r\n  fetchMetaSuccess,\r\n  fetchMetaError,\r\n  fetchWavePending,\r\n  fetchWaveSuccess,\r\n  fetchWaveError,\r\n  fetchRatingsPending,\r\n  fetchRatingsSuccess,\r\n  fetchRatingsError,\r\n  setInPlayer,\r\n  setSelectedRatingId,\r\n  setUserRatingId,\r\n  unsetInPlayer\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport actions from \"./track.actions\";\r\nimport { API_KEY, SoundCloud } from \"../../../soundcloud\";\r\nimport { AnyAction } from \"redux\";\r\nimport { AppState } from \"../../store\";\r\nimport viewedTrackActions from \"../viewed-track/viewed-track.actions\";\r\n\r\nfunction fetchTrack(trackId: number = 0) {\r\n  return async (\r\n    dispatch: Dispatch<AnyAction>,\r\n    getState: () => AppState\r\n  ): Promise<any> => {\r\n    if (!trackId || trackId === undefined) trackId = getState().track.trackId;\r\n    if (!trackId) trackId = 730589809;\r\n    const metaUrl: string = `https://api.soundcloud.com/tracks/${trackId}?client_id=${API_KEY}`;\r\n    const audioUrl: string = `https://api.soundcloud.com/tracks/${trackId}/stream?client_id=${API_KEY}`;\r\n    try {\r\n      dispatch(actions.setTrackId(trackId));\r\n      dispatch(actions.fetchMetaPending(trackId));\r\n      const response: Response = await fetch(metaUrl);\r\n      const data: SoundCloud.TrackData = await response.json();\r\n      dispatch(actions.fetchMetaSuccess(data));\r\n      dispatch(actions.setAudioSource(audioUrl));\r\n    } catch (error) {\r\n      dispatch(actions.fetchMetaError(error));\r\n      return;\r\n    }\r\n  };\r\n}\r\n\r\nfunction transferTrackToPlayer(data: {\r\n  trackId: number;\r\n  autoplay: boolean;\r\n  cover: string;\r\n  author: string;\r\n  title: string;\r\n}) {\r\n  return (dispatch: Dispatch<AnyAction>, getState: Function): void => {\r\n    const audioUrl: string = `https://api.soundcloud.com/tracks/${data.trackId}/stream?client_id=${API_KEY}`;\r\n    dispatch(actions.setTrackId(data.trackId));\r\n    dispatch(\r\n      actions.transferMetaSuccess({\r\n        cover: data.cover,\r\n        author: data.author,\r\n        title: data.title\r\n      })\r\n    );\r\n    dispatch(actions.setAudioSource(audioUrl));\r\n    dispatch(actions.setAudioAutoplay(data.autoplay));\r\n  };\r\n}\r\n\r\nfunction transferViewedTrackToPlayer(autoplay: boolean) {\r\n  return (dispatch: Dispatch<AnyAction>, getState: () => AppState): void => {\r\n    const { trackId, cover, author, title } = getState().viewedTrack;\r\n    const audioUrl: string = `https://api.soundcloud.com/tracks/${trackId}/stream?client_id=${API_KEY}`;\r\n    dispatch(actions.setTrackId(trackId));\r\n    dispatch(\r\n      actions.transferMetaSuccess({\r\n        cover: cover,\r\n        author: author,\r\n        title: title\r\n      })\r\n    );\r\n    dispatch(actions.setAudioSource(audioUrl));\r\n    dispatch(actions.setAudioAutoplay(autoplay));\r\n    dispatch(viewedTrackActions.setInPlayer());\r\n  };\r\n}\r\n\r\nexport default {\r\n  fetchTrack,\r\n  transferTrackToPlayer,\r\n  transferViewedTrackToPlayer\r\n};\r\n","import { Rating, Moment, MomentReaction } from \"../core/shared\";\r\n\r\nconst random = (min: number, max: number): number => {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\nconst randomWave = (): Array<number> => {\r\n  let wave: Array<number> = [];\r\n  let min: number = Math.ceil(30);\r\n  let max: number = Math.floor(90);\r\n\r\n  for (let i = 0; i < 200; ++i) {\r\n    wave.push(random(min, max));\r\n  }\r\n\r\n  return wave;\r\n};\r\n\r\nconst randomRatings = (trackDuration: number): Array<Rating> => {\r\n  let ratings: Array<Rating> = [];\r\n  for (let i = 0; i < 5; ++i) {\r\n    ratings.push(randomRating(trackDuration, i + 1));\r\n  }\r\n  return ratings;\r\n};\r\n\r\nconst randomRating = (trackDuration: number, ratingId: number): Rating => {\r\n  let moments: Array<Moment> = [];\r\n\r\n  for (let i = 0; i < random(8, 18); ++i) {\r\n    moments.push(randomMoment(trackDuration));\r\n  }\r\n\r\n  return {\r\n    ratingId: ratingId,\r\n    user: {\r\n      userId: random(1, 300),\r\n      nickname: `user-${random(1000, 9999)}`,\r\n      avatar: \"\"\r\n    },\r\n    moments: moments\r\n  };\r\n};\r\n\r\nconst momentsName: Array<string> = [\r\n  \"Bass\",\r\n  \"Drums\",\r\n  \"Kick\",\r\n  \"Pads\",\r\n  \"Synth\",\r\n  \"Vocal\",\r\n  \"Melody\",\r\n  \"Deep bass\",\r\n  \"Groove\",\r\n  \"Background\",\r\n  \"FX\",\r\n  \"Chords\",\r\n  \"Piano\",\r\n  \"Hi-Hats\",\r\n  \"Buildup\",\r\n  \"Drop\",\r\n  \"All sounds\",\r\n  \"Keys\",\r\n  \"Claps\",\r\n  \"Snare\",\r\n  \"Chill\",\r\n  \"GrossBeat effect\",\r\n  \"Fade effect\",\r\n  \"Guitar\"\r\n];\r\nconst momentsColors: Array<string> = [\r\n  \"#9C27BD\",\r\n  \"#00bcd4\",\r\n  \"#e91e63\",\r\n  \"#bc209b\",\r\n  \"#f94922\",\r\n  \"#56e042\",\r\n  \"#e0d942\",\r\n  \"#4292e0\",\r\n  \"#c36fda\",\r\n  \"#755e7b\",\r\n  \"#ffeb70\",\r\n  \"#ff8870\",\r\n  \"#95ff70\"\r\n];\r\n\r\nconst randomMoment = (trackDuration: number): Moment => {\r\n  let momentStart = random(0, Math.floor(trackDuration) / 4 - 16);\r\n  let momentDuration = random(1, 16);\r\n  let momentEnd = momentStart + momentDuration;\r\n  return {\r\n    name: momentsName[random(0, momentsName.length)],\r\n    description: \"\",\r\n    color: momentsColors[random(0, momentsColors.length)],\r\n    start: momentStart,\r\n    end: momentEnd,\r\n    reaction: MomentReaction.NONE,\r\n    section: random(0, 5) as 0 | 1 | 2 | 3 | 4\r\n  };\r\n};\r\n\r\nexport default {\r\n  randomWave,\r\n  randomRatings\r\n};\r\n","import { AppState } from \"./../../store\";\r\nimport { Dispatch } from \"react\";\r\nimport actions from \"./viewed-track.actions\";\r\nimport { API_KEY, SoundCloud } from \"../../../soundcloud\";\r\nimport { AnyAction } from \"redux\";\r\nimport mocks from \"../../../../mocks\";\r\nimport { Rating } from \"../../../shared\";\r\nimport viewedTrackActions from \"./viewed-track.actions\";\r\n\r\nfunction fetchViewedTrack(trackId: number, selectedRatingId: number = -1) {\r\n  return async (\r\n    dispatch: Dispatch<AnyAction>,\r\n    getState: () => AppState\r\n  ): Promise<any> => {\r\n    selectedRatingId = isNaN(selectedRatingId) ? -1 : selectedRatingId;\r\n    dispatch(actions.setTrackId(trackId));\r\n    if (trackId !== getState().track.trackId) {\r\n      dispatch(actions.unsetInPlayer());\r\n    }\r\n    const metaUrl: string = `https://api.soundcloud.com/tracks/${trackId}?client_id=${API_KEY}`;\r\n    const waveUrl: string = `localhost`;\r\n    try {\r\n      dispatch(actions.fetchMetaPending(trackId));\r\n      const response: Response = await fetch(metaUrl);\r\n      const data: SoundCloud.TrackData = await response.json();\r\n      dispatch(actions.fetchMetaSuccess(data));\r\n    } catch (error) {\r\n      dispatch(actions.fetchMetaError(error));\r\n      return;\r\n    }\r\n    try {\r\n      dispatch(actions.fetchWavePending());\r\n      const responseMock = mocks.randomWave();\r\n      dispatch(actions.fetchWaveSuccess(responseMock));\r\n    } catch (error) {\r\n      dispatch(actions.fetchWaveError(error));\r\n      return;\r\n    }\r\n    try {\r\n      const userId = getState().user.userId;\r\n      dispatch(actions.fetchRatingsPending());\r\n      const ratingsData: Array<Rating> = mocks.randomRatings(300);\r\n      const userRating: Rating | undefined = ratingsData.find(\r\n        rating => rating.ratingId === userId\r\n      );\r\n      const userRatingId = userRating === undefined ? -1 : userRating.ratingId;\r\n      dispatch(actions.fetchRatingsSuccess(ratingsData));\r\n      dispatch(actions.setSelectedRatingId(selectedRatingId));\r\n      dispatch(actions.setUserRatingId(userRatingId));\r\n    } catch (error) {\r\n      dispatch(actions.fetchRatingsError(error));\r\n    }\r\n    if (trackId == getState().track.trackId) {\r\n      dispatch(actions.setInPlayer());\r\n    }\r\n  };\r\n}\r\n\r\nexport default {\r\n  fetchViewedTrack\r\n};\r\n","import { AppState } from \"./../../store\";\r\nimport { createSelector } from \"reselect\";\r\nimport { Rating, Moment } from \"../../../shared\";\r\n\r\nfunction getUserRating(state: AppState): Rating {\r\n  const { isLogged, nickname, avatar, userId } = state.user;\r\n  if (!isLogged) {\r\n    return {\r\n      ratingId: -1,\r\n      user: {\r\n        userId: 0,\r\n        nickname: ``,\r\n        avatar: ``\r\n      },\r\n      moments: []\r\n    };\r\n  }\r\n  const { userRatingId, ratings } = state.viewedTrack;\r\n  const rating: Rating | undefined = ratings.find(\r\n    rating => rating.ratingId === userRatingId\r\n  );\r\n  return rating !== undefined\r\n    ? rating\r\n    : {\r\n        ratingId: -1,\r\n        user: {\r\n          userId: userId,\r\n          nickname: nickname,\r\n          avatar: avatar\r\n        },\r\n        moments: []\r\n      };\r\n}\r\n\r\nfunction getSelectedRating(state: AppState): Rating | undefined {\r\n  const { selectedRatingId, ratings } = state.viewedTrack;\r\n  return ratings.find(rating => rating.ratingId === selectedRatingId);\r\n}\r\n\r\n/**\r\n * test\r\n * @param state\r\n */\r\nfunction getOtherRatings(state: AppState): Array<Rating> {\r\n  const { ratings } = state.viewedTrack;\r\n  const { userId } = state.user;\r\n  return ratings.filter(rating => rating.user.userId != userId);\r\n}\r\n\r\nfunction getSelectedMoments(state: AppState): Array<Moment> {\r\n  const selectedRating: Rating | undefined = getSelectedRating(state);\r\n  return selectedRating !== undefined ? selectedRating.moments : [];\r\n}\r\n\r\nexport default {\r\n  getUserRating,\r\n  getSelectedRating,\r\n  getSelectedMoments,\r\n  getOtherRatings\r\n};\r\n","import ActionTypes from \"./rating-editor.types\";\r\nimport { Action } from \"../../models\";\r\nimport {\r\n  MomentReaction,\r\n  MomentColor,\r\n  MomentSection,\r\n  Seconds\r\n} from \"../../../shared\";\r\nimport { RatingEditorMode } from \"./rating-editor.state\";\r\n\r\nexport interface setModeAction extends Action<ActionTypes.SET_MODE> {\r\n  payload: {\r\n    mode: RatingEditorMode;\r\n  };\r\n}\r\n\r\nexport interface setSelectedTimeStartAction\r\n  extends Action<ActionTypes.SET_SELECTED_TIME_START> {\r\n  payload: {\r\n    start: Seconds;\r\n  };\r\n}\r\n\r\nexport interface setSelectedTimeEndAction\r\n  extends Action<ActionTypes.SET_SELECTED_TIME_END> {\r\n  payload: {\r\n    end: Seconds;\r\n  };\r\n}\r\n\r\nexport interface setNewMomentTimeStartAction\r\n  extends Action<ActionTypes.SET_NEW_MOMENT_TIME_START> {\r\n  payload: {\r\n    start: Seconds;\r\n  };\r\n}\r\n\r\nexport interface setNewMomentTimeEndAction\r\n  extends Action<ActionTypes.SET_NEW_MOMENT_TIME_END> {\r\n  payload: {\r\n    end: Seconds;\r\n  };\r\n}\r\n\r\nexport interface setNewMomentNameAction\r\n  extends Action<ActionTypes.SET_NEW_MOMENT_NAME> {\r\n  payload: {\r\n    name: string;\r\n  };\r\n}\r\n\r\nexport interface setNewMomentDescriptionAction\r\n  extends Action<ActionTypes.SET_NEW_MOMENT_DESCRIPTION> {\r\n  payload: {\r\n    description: string;\r\n  };\r\n}\r\n\r\nexport interface setNewMomentColorAction\r\n  extends Action<ActionTypes.SET_NEW_MOMENT_COLOR> {\r\n  payload: {\r\n    color: MomentColor;\r\n  };\r\n}\r\n\r\nexport interface setNewMomentReactionAction\r\n  extends Action<ActionTypes.SET_NEW_MOMENT_REACTION> {\r\n  payload: {\r\n    reaction: MomentReaction;\r\n  };\r\n}\r\n\r\nexport interface setNewMomentSectionAction\r\n  extends Action<ActionTypes.SET_NEW_MOMENT_SECTION> {\r\n  payload: {\r\n    section: MomentSection;\r\n  };\r\n}\r\n\r\nexport interface ResetMomentEditorAction\r\n  extends Action<ActionTypes.RESET_MOMENT_EDITOR> {}\r\n\r\n/**\r\n *\r\n * @param {RatingEditorMode} mode\r\n */\r\nconst setMode = (mode: RatingEditorMode): setModeAction => ({\r\n  type: ActionTypes.SET_MODE,\r\n  payload: {\r\n    mode: mode\r\n  }\r\n});\r\n\r\nconst setSelectedTimeStart = (start: Seconds): setSelectedTimeStartAction => ({\r\n  type: ActionTypes.SET_SELECTED_TIME_START,\r\n  payload: {\r\n    start: start\r\n  }\r\n});\r\n\r\nconst setSelectedTimeEnd = (end: Seconds): setSelectedTimeEndAction => ({\r\n  type: ActionTypes.SET_SELECTED_TIME_END,\r\n  payload: {\r\n    end: end\r\n  }\r\n});\r\n\r\nconst setNewMomentTimeStart = (\r\n  start: Seconds\r\n): setNewMomentTimeStartAction => ({\r\n  type: ActionTypes.SET_NEW_MOMENT_TIME_START,\r\n  payload: {\r\n    start: start\r\n  }\r\n});\r\n\r\nconst setNewMomentTimeEnd = (end: Seconds): setNewMomentTimeEndAction => ({\r\n  type: ActionTypes.SET_NEW_MOMENT_TIME_END,\r\n  payload: {\r\n    end: end\r\n  }\r\n});\r\n\r\nconst setNewMomentName = (name: string): setNewMomentNameAction => ({\r\n  type: ActionTypes.SET_NEW_MOMENT_NAME,\r\n  payload: {\r\n    name: name\r\n  }\r\n});\r\n\r\nconst setNewMomentDescription = (\r\n  description: string\r\n): setNewMomentDescriptionAction => ({\r\n  type: ActionTypes.SET_NEW_MOMENT_DESCRIPTION,\r\n  payload: {\r\n    description: description\r\n  }\r\n});\r\n\r\nconst setNewMomentColor = (color: MomentColor): setNewMomentColorAction => ({\r\n  type: ActionTypes.SET_NEW_MOMENT_COLOR,\r\n  payload: {\r\n    color: color\r\n  }\r\n});\r\n\r\nconst setNewMomentReaction = (\r\n  reaction: MomentReaction\r\n): setNewMomentReactionAction => ({\r\n  type: ActionTypes.SET_NEW_MOMENT_REACTION,\r\n  payload: {\r\n    reaction: reaction\r\n  }\r\n});\r\n\r\nconst setNewMomentSection = (\r\n  section: MomentSection\r\n): setNewMomentSectionAction => ({\r\n  type: ActionTypes.SET_NEW_MOMENT_SECTION,\r\n  payload: {\r\n    section: section\r\n  }\r\n});\r\n\r\nconst resetMomentEditor = (): ResetMomentEditorAction => ({\r\n  type: ActionTypes.RESET_MOMENT_EDITOR\r\n});\r\n\r\nexport type AppRatingEdtiorActions =\r\n  | setModeAction\r\n  | setSelectedTimeStartAction\r\n  | setSelectedTimeEndAction\r\n  | setNewMomentTimeStartAction\r\n  | setNewMomentTimeEndAction\r\n  | setNewMomentNameAction\r\n  | setNewMomentDescriptionAction\r\n  | setNewMomentColorAction\r\n  | setNewMomentReactionAction\r\n  | setNewMomentSectionAction\r\n  | ResetMomentEditorAction;\r\n\r\nexport default {\r\n  setMode,\r\n  setSelectedTimeStart,\r\n  setSelectedTimeEnd,\r\n  setNewMomentTimeStart,\r\n  setNewMomentTimeEnd,\r\n  setNewMomentName,\r\n  setNewMomentDescription,\r\n  setNewMomentColor,\r\n  setNewMomentReaction,\r\n  setNewMomentSection,\r\n  resetMomentEditor\r\n};\r\n","import { Dispatch } from \"react\";\r\n\r\nimport ratingEditorActions from \"./rating-editor.actions\";\r\nimport trackActions from \"../track/track.actions\";\r\nimport viewedTackActions from \"../viewed-track/viewed-track.actions\";\r\nimport { AnyAction } from \"redux\";\r\nimport { AppState } from \"../../store\";\r\nimport { RatingEditorMode } from \"./rating-editor.state\";\r\nimport { Seconds } from \"../../../shared\";\r\n\r\nfunction startRecording() {\r\n  return (dispatch: Dispatch<AnyAction>, getState: () => AppState): void => {\r\n    const { currentTime } = getState().track;\r\n    const { selectedRatingId, userRatingId } = getState().viewedTrack;\r\n    if (userRatingId !== selectedRatingId) {\r\n      dispatch(viewedTackActions.setSelectedRatingId(userRatingId));\r\n    }\r\n    dispatch(ratingEditorActions.setMode(RatingEditorMode.RECORDING));\r\n    dispatch(ratingEditorActions.setSelectedTimeStart(currentTime));\r\n  };\r\n}\r\n\r\nfunction stopRecording() {\r\n  return (dispatch: Dispatch<AnyAction>, getState: () => AppState): void => {\r\n    const { currentTime } = getState().track;\r\n    const { selectedTime } = getState().ratingEditor;\r\n    if (currentTime === selectedTime.start) {\r\n      dispatch(ratingEditorActions.setMode(RatingEditorMode.DISABLED));\r\n      return;\r\n    }\r\n\r\n    dispatch(ratingEditorActions.setMode(RatingEditorMode.MODIFYING));\r\n    dispatch(ratingEditorActions.setSelectedTimeEnd(currentTime));\r\n    dispatch(ratingEditorActions.setNewMomentTimeStart(selectedTime.start));\r\n    dispatch(ratingEditorActions.setNewMomentTimeEnd(currentTime));\r\n    dispatch(ratingEditorActions.resetMomentEditor());\r\n  };\r\n}\r\n\r\nfunction moveMoment(nextStart: Seconds) {\r\n  return (dispatch: Dispatch<AnyAction>, getState: () => AppState): void => {\r\n    const { newMoment } = getState().ratingEditor;\r\n    const prevStart: Seconds = newMoment.start;\r\n    const diff: Seconds = nextStart - prevStart;\r\n    const prevEnd: Seconds = newMoment.end;\r\n    const nextEnd: Seconds = prevEnd + diff;\r\n    dispatch(ratingEditorActions.setNewMomentTimeStart(nextStart));\r\n    dispatch(ratingEditorActions.setNewMomentTimeEnd(nextEnd));\r\n  };\r\n}\r\n\r\nexport default {\r\n  startRecording,\r\n  stopRecording,\r\n  moveMoment\r\n};\r\n","import { Position, Pixels } from \"../core/shared\";\r\n\r\ntype Time = {\r\n  signed: string;\r\n  h?: string;\r\n  m: string;\r\n  s: string;\r\n  ms: string;\r\n};\r\n\r\nexport const random = (min: number, max: number): number => {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\nexport const scrollTo = (ref: React.RefObject<any>): void => {\r\n  window.scrollTo(0, ref.current.offsetTop);\r\n};\r\n\r\nexport const convertToMMSSMS = (seconds: number): Time => {\r\n  let m: number = Math.floor(Math.abs(seconds) / 60);\r\n  seconds %= 60;\r\n  let s: number = Math.floor(seconds);\r\n  let ms: number = Math.floor(seconds * 1000) % 1000;\r\n  ms = Math.abs(ms);\r\n\r\n  return {\r\n    signed: s < 0 ? `-` : ``,\r\n    m: m < 10 ? `0${Math.abs(m)}` : `${m}`,\r\n    s: Math.abs(s) < 10 ? `0${Math.abs(s)}` : `${Math.abs(s)}`,\r\n    ms: ms < 100 ? (ms < 10 ? `00${ms}` : `0${ms}`) : `${ms}`\r\n  };\r\n};\r\n\r\nexport const convertToSeconds = (m: number, s: number, ms: number): number => {\r\n  let seconds: number = 0;\r\n  seconds = m * 60 + s + ms / 1000;\r\n  return seconds;\r\n};\r\n\r\nexport const fetchFromApi = async (\r\n  endpoint: string,\r\n  data: {\r\n    method: \"GET\" | \"POST\" | \"DELETE\" | \"PUT\";\r\n    token?: string;\r\n    body?: {};\r\n  }\r\n): Promise<any> => {\r\n  const apiUrl: string = \"https://localhost:8080/\";\r\n  const response: Response = await fetch(`${apiUrl}${endpoint}`, {\r\n    method: data.method,\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"same-origin\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${data.token}`\r\n    },\r\n    redirect: \"follow\",\r\n    referrerPolicy: \"no-referrer\",\r\n    body: JSON.stringify(data.body)\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const adjustPositionToScreen = (\r\n  position: Position,\r\n  size: { width: number; height: number }\r\n): Position => {\r\n  const { innerWidth, innerHeight } = window;\r\n  return {\r\n    x:\r\n      position.x + size.width < innerWidth\r\n        ? position.x\r\n        : position.x - size.width,\r\n    y:\r\n      position.y + size.height < innerHeight\r\n        ? position.y\r\n        : position.y - size.height\r\n  };\r\n};\r\n","import { fetchFromApi } from \"./../../../../utils/index\";\r\nimport { AppState } from \"./../../store\";\r\nimport { Dispatch } from \"react\";\r\nimport { AnyAction } from \"redux\";\r\nimport actions from \"./user.actions\";\r\nimport { FeedbackError } from \"./user.state\";\r\nimport { User } from \"../../../shared\";\r\n\r\ntype Operation = {\r\n  (dispatch: Dispatch<AnyAction>, getState: () => AppState): any;\r\n};\r\n\r\nfunction signIn(login: string, password: string) {\r\n  return async (\r\n    dispatch: Dispatch<AnyAction>,\r\n    getState: () => AppState\r\n  ): Promise<void> => {\r\n    dispatch(actions.loginPending());\r\n    try {\r\n      const data: {\r\n        status: boolean;\r\n        user?: User;\r\n        token?: string;\r\n      } = await fetchFromApi(\"users/authenticate\", {\r\n        method: \"POST\",\r\n        body: {\r\n          login: login,\r\n          password: password\r\n        }\r\n      });\r\n      if (!data.status) {\r\n        dispatch(actions.loginReject());\r\n        throw \"Bad Login Data\";\r\n      }\r\n      dispatch(actions.loginSuccess(data.user, data.token));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(actions.loginError(error));\r\n    }\r\n  };\r\n}\r\n\r\nfunction signUp(\r\n  login: string,\r\n  password: string,\r\n  soundcloudUri: string\r\n): Operation {\r\n  return async (\r\n    dispatch: Dispatch<AnyAction>,\r\n    getState: () => AppState\r\n  ): Promise<any> => {\r\n    try {\r\n      dispatch(actions.registerPending());\r\n      const data: {\r\n        status: boolean;\r\n        error?: FeedbackError;\r\n      } = await fetchFromApi(\"users/register\", {\r\n        method: \"POST\",\r\n        body: {\r\n          login: login,\r\n          password: password,\r\n          soundcloudUri: soundcloudUri\r\n        }\r\n      });\r\n      if (!data.status) {\r\n        dispatch(actions.registerReject(data.error));\r\n        throw \"Bad Register Data\";\r\n      }\r\n      dispatch(actions.registerSuccess());\r\n      return signIn(login, password); // TODO\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(actions.registerError(error));\r\n    }\r\n  };\r\n}\r\n\r\nexport default {\r\n  signIn,\r\n  signUp\r\n};\r\n","import ActionTypes from \"./view.types\";\r\nimport { Action } from \"../../models\";\r\nimport { Moment } from \"../../../shared\";\r\n\r\nexport interface ShowTimelineMomentContextMenuAction\r\n  extends Action<ActionTypes.SHOW_TIMELINE_MOMENT_CONTEXTMENU> {\r\n  payload: {\r\n    position: { x: number; y: number };\r\n    data: { moment: Moment };\r\n  };\r\n}\r\n\r\nexport interface HideTimelineMomentContextMenuAction\r\n  extends Action<ActionTypes.HIDE_TIMELINE_MOMENT_CONTEXTMENU> {}\r\n\r\nexport interface ShowTimelineMomentTooltipAction\r\n  extends Action<ActionTypes.SHOW_TIMELINE_MOMENT_TOOLTIP> {\r\n  payload: {\r\n    startPosition: { x: number; y: number };\r\n    data: { moment: Moment };\r\n  };\r\n}\r\n\r\nexport interface HideTimelineMomentTooltipAction\r\n  extends Action<ActionTypes.HIDE_TIMELINE_MOMENT_TOOLTIP> {}\r\n\r\nexport interface UpdateTimelineMomentTooltipAction\r\n  extends Action<ActionTypes.UPDATE_TIMELINE_MOMENT_TOOLTIP> {\r\n  payload: {\r\n    currentPosition: { x: number; y: number };\r\n  };\r\n}\r\n\r\n/**\r\n * @description Action dispatched when we can\r\n * display TimelineMomentContextMenu on {x, y} position\r\n *  with moment data\r\n **/\r\nconst showTimelineMomentContextMenu = (\r\n  moment: Moment,\r\n  position: { x: number; y: number }\r\n): ShowTimelineMomentContextMenuAction => ({\r\n  type: ActionTypes.SHOW_TIMELINE_MOMENT_CONTEXTMENU,\r\n  payload: {\r\n    position: position,\r\n    data: { moment: moment }\r\n  }\r\n});\r\n\r\n/**\r\n * @description Action dispatched when we can\r\n * hide TimelineMomentContextMenu\r\n **/\r\nconst hideTimelineMomentContextMenu = (): HideTimelineMomentContextMenuAction => ({\r\n  type: ActionTypes.HIDE_TIMELINE_MOMENT_CONTEXTMENU\r\n});\r\n\r\nconst showTimelineMomentTooltip = (\r\n  moment: Moment,\r\n  startPosition: { x: number; y: number }\r\n): ShowTimelineMomentTooltipAction => ({\r\n  type: ActionTypes.SHOW_TIMELINE_MOMENT_TOOLTIP,\r\n  payload: {\r\n    startPosition: startPosition,\r\n    data: { moment: moment }\r\n  }\r\n});\r\n\r\nconst updateTimelineMomentTooltip = (currentPosition: {\r\n  x: number;\r\n  y: number;\r\n}): UpdateTimelineMomentTooltipAction => ({\r\n  type: ActionTypes.UPDATE_TIMELINE_MOMENT_TOOLTIP,\r\n  payload: {\r\n    currentPosition: currentPosition\r\n  }\r\n});\r\n\r\nconst hideTimelineMomentTooltip = (): HideTimelineMomentTooltipAction => ({\r\n  type: ActionTypes.HIDE_TIMELINE_MOMENT_TOOLTIP\r\n});\r\n\r\nexport type AppViewActions =\r\n  | ShowTimelineMomentContextMenuAction\r\n  | HideTimelineMomentContextMenuAction\r\n  | ShowTimelineMomentTooltipAction\r\n  | UpdateTimelineMomentTooltipAction\r\n  | HideTimelineMomentTooltipAction;\r\n\r\nexport default {\r\n  showTimelineMomentContextMenu,\r\n  hideTimelineMomentContextMenu,\r\n  showTimelineMomentTooltip,\r\n  updateTimelineMomentTooltip,\r\n  hideTimelineMomentTooltip\r\n};\r\n","import React, { Dispatch, ComponentClass } from \"react\";\r\nimport \"./login-bar.scss\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { ConnectedComponent } from \"react-redux\";\r\n\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\n\r\nconst mapStateToProps = (state: AppState): LoginBarProps | any => ({\r\n  isLogged: state.user.isLogged\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): LoginBarProps | any => ({\r\n  signIn: (login: string, password: string) => {\r\n    dispatch(tasks.userOperations.signIn(login, password));\r\n  }\r\n});\r\n\r\ntype LoginBarProps = {\r\n  isLogged: boolean;\r\n  signIn: (login: string, password: string) => void;\r\n};\r\n\r\ntype LoginBarState = {\r\n  formStage: number;\r\n  loginEntered: string;\r\n  passwordEntered: string;\r\n};\r\n\r\nclass LoginBar extends React.Component<LoginBarProps, LoginBarState> {\r\n  state: LoginBarState = {\r\n    formStage: 1,\r\n    loginEntered: \"\",\r\n    passwordEntered: \"\"\r\n  };\r\n\r\n  constructor(props: LoginBarProps) {\r\n    super(props);\r\n  }\r\n\r\n  handleLoginInputKeyUp = (event: React.KeyboardEvent | any): void => {\r\n    if (this.props.isLogged || event.keyCode != 13) return;\r\n    this.setState({\r\n      formStage: 2,\r\n      loginEntered: event.target.value\r\n    });\r\n  };\r\n\r\n  handlePasswordInputKeyUp = (event: React.KeyboardEvent | any): void => {\r\n    if (this.props.isLogged || event.keyCode != 13) return;\r\n    this.setState(\r\n      {\r\n        formStage: 1,\r\n        passwordEntered: event.target.value\r\n      },\r\n      () => {\r\n        this.props.signIn(this.state.loginEntered, this.state.passwordEntered);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const loginInput = (\r\n      <input\r\n        type=\"text\"\r\n        autoFocus\r\n        placeholder=\"Type login...\"\r\n        disabled={this.props.isLogged}\r\n        onKeyUp={this.handleLoginInputKeyUp}\r\n      />\r\n    );\r\n\r\n    const passwordInput = (\r\n      <input\r\n        type=\"password\"\r\n        autoFocus\r\n        placeholder=\"Type password...\"\r\n        disabled={this.props.isLogged}\r\n        onKeyUp={this.handlePasswordInputKeyUp}\r\n      />\r\n    );\r\n    let loginIcon: string = \"\";\r\n    if (this.state.formStage == 1) loginIcon = \"icon-user\";\r\n    if (this.state.formStage == 2) loginIcon = \"icon-key\";\r\n    return (\r\n      <div className=\"login-bar\">\r\n        <div>\r\n          <div className=\"login-box\">\r\n            <div className=\"login-input\">\r\n              {this.state.formStage == 1 && loginInput}\r\n              {this.state.formStage == 2 && passwordInput}\r\n            </div>\r\n            <div className=\"login-icon\">\r\n              <div>\r\n                <i className={loginIcon}></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginBarContainer: ComponentClass = withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(LoginBar) as ConnectedComponent<\r\n    typeof LoginBar,\r\n    any\r\n  >\r\n);\r\n\r\nexport default LoginBarContainer;\r\n","import React from \"react\";\r\nimport \"./top-bar.scss\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { ConnectedComponent, connect } from \"react-redux\";\r\nimport UserBarContainer from \"../user-bar/user-bar\";\r\nimport LoginBarContainer from \"../login-bar/login-bar\";\r\n\r\nconst mapStateToProps = (state: AppState): TopBarProps => ({\r\n  isLogged: state.user.isLogged\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({});\r\n\r\ntype TopBarProps = {\r\n  isLogged: boolean;\r\n};\r\n\r\ntype TopBarState = {};\r\n\r\nclass TopBar extends React.Component<TopBarProps, TopBarState> {\r\n  constructor(props: TopBarProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"top-bar\">\r\n        <div>\r\n          {this.props.isLogged ? <UserBarContainer /> : <LoginBarContainer />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TopBarContainer: ConnectedComponent<typeof TopBar, any> = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopBar);\r\n\r\nexport default TopBarContainer;\r\n","import React from \"react\";\r\nimport \"./Menu.scss\";\r\nimport Logo from \"../logo/Logo\";\r\nimport GradientHeader from \"../../shared/gradient-header/gradient-header\";\r\nimport UserBar from \"../user-bar/user-bar\";\r\nimport { BrowserRouter, NavLink, Link } from \"react-router-dom\";\r\nimport TopBarContainer from \"../top-bar/top-bar\";\r\n\r\nconst Menu: React.FC = () => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"user-bar-wrapper\">\r\n        <TopBarContainer />\r\n      </div>\r\n\r\n      <div className=\"menu-content\">\r\n        <div>\r\n          <div className=\"menu-content-items\">\r\n            <div className=\"logo-wrapper\">\r\n              <Logo />\r\n            </div>\r\n            <div className=\"header-wrapper\">\r\n              <GradientHeader icon=\"\" text=\"Menu\" />\r\n            </div>\r\n\r\n            \r\n              <ul className=\"options\">\r\n                <div>\r\n                  <NavLink activeClassName=\"selected\" to=\"/home\">\r\n                    <li>\r\n                      <span>Home</span>\r\n                    </li>\r\n                  </NavLink>\r\n                  <NavLink activeClassName=\"selected\" to=\"/my-profile\">\r\n                    <li>\r\n                      <span>My profile</span>\r\n                    </li>\r\n                  </NavLink>\r\n                  <NavLink activeClassName=\"selected\" to=\"/rate\">\r\n                    <li>\r\n                      <span>Rate new Track</span>\r\n                    </li>\r\n                  </NavLink>\r\n                </div>\r\n              </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport Draggable, { DraggableEvent, DraggableData } from \"react-draggable\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\n\r\nimport \"./track-info.scss\";\r\nimport VolumeIcon from \"../../../assets/svg/volume-icon.svg\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\n\r\nconst mapStateToProps = (state: AppState): TrackInfoProps | any => ({\r\n  trackId: state.viewedTrack.trackId,\r\n  cover: state.viewedTrack.cover,\r\n  author: state.viewedTrack.author,\r\n  title: state.viewedTrack.title,\r\n  isSetInPlayer: state.viewedTrack.isSetInPlayer,\r\n  isPlaying: state.track.isPlaying,\r\n  volume: state.track.volume\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): TrackInfoProps | any => ({\r\n  onTransferTrackToPlayer: () => {\r\n    dispatch(tasks.trackOperations.transferViewedTrackToPlayer(true));\r\n  },\r\n  onToogleStatusTrack: () => {\r\n    dispatch(tasks.trackActions.toogleAudioStatus());\r\n  },\r\n  onVolumeChange: (newVolume: number) => {\r\n    dispatch(tasks.trackActions.setAudioVolume(newVolume));\r\n  }\r\n});\r\n\r\ntype TrackInfoProps = {\r\n  trackId: number;\r\n  cover: string;\r\n  author: string;\r\n  title: string;\r\n  isPlaying: boolean;\r\n  isSetInPlayer: boolean;\r\n  volume: number;\r\n  onTransferTrackToPlayer: () => void;\r\n  onToogleStatusTrack: () => void;\r\n  onVolumeChange: (newVolume: number) => void;\r\n};\r\n\r\ntype TrackInfoState = {};\r\n\r\nclass TrackInfo extends React.Component<TrackInfoProps, TrackInfoState> {\r\n  constructor(props: TrackInfoProps) {\r\n    super(props);\r\n  }\r\n\r\n  handlePlayButtonClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (!this.props.isSetInPlayer) {\r\n      this.props.onTransferTrackToPlayer();\r\n    }\r\n    this.props.onToogleStatusTrack();\r\n  };\r\n\r\n  handleVolumeClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    console.log(event.nativeEvent.offsetX);\r\n    // this.props.onVolumeChange(event.nativeEvent.offsetX / 143);\r\n  };\r\n\r\n  handleVolumeDrag = (event: DraggableEvent, data: DraggableData) => {\r\n    // this.props.onVolumeChange(data.x / 143);\r\n  };\r\n\r\n  handleVolumeDragStop = (event: DraggableEvent, data: DraggableData) => {\r\n    this.props.onVolumeChange(data.x / 143);\r\n  };\r\n\r\n  render() {\r\n    const status: boolean = this.props.isSetInPlayer && this.props.isPlaying;\r\n    let playButtonClassName: string = status ? \"button active\" : \"button\";\r\n    let playButtonIcon: string = status ? \"icon-pause\" : \"icon-play\";\r\n    let volume: number = this.props.volume * 143;\r\n    return (\r\n      <div className=\"track-info\">\r\n        <div>\r\n          <div className=\"track-cover-box\">\r\n            <div>\r\n              <div\r\n                className=\"track-cover\"\r\n                style={{ backgroundImage: `url(${this.props.cover})` }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"track-content-box\">\r\n            <div className=\"track-description\">\r\n              <div>\r\n                <div className=\"track-author\">\r\n                  <span>{this.props.author}</span>\r\n                </div>\r\n                <div className=\"track-title\">\r\n                  <span>{this.props.title}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"track-player\">\r\n              <div>\r\n                <div className=\"button-box\">\r\n                  <div\r\n                    className={playButtonClassName}\r\n                    onClick={this.handlePlayButtonClick}\r\n                  >\r\n                    <i className={playButtonIcon} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"button-box\">\r\n                  <div className=\"button\">\r\n                    <i className=\"icon-star-filled\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"button-box\">\r\n                  <div className=\"button\">\r\n                    <i className=\"icon-note\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"wide-button-box\">\r\n                  <div className=\"button\">\r\n                    <div className=\"left\">\r\n                      <i className=\"icon-volume\" />\r\n                    </div>\r\n                    <div className=\"right\">\r\n                      <div className=\"volume-slider-box\">\r\n                        <div\r\n                          className=\"volume-area\"\r\n                          onClick={this.handleVolumeClick}\r\n                        >\r\n                          <Draggable\r\n                            axis=\"x\"\r\n                            bounds=\".volume-area\"\r\n                            onDrag={this.handleVolumeDrag}\r\n                            onStop={this.handleVolumeDragStop}\r\n                            position={{ x: volume, y: 0 }}\r\n                          >\r\n                            <div className=\"volume-knob-area\">\r\n                              <div className=\"volume-gray-bar\" />\r\n                              <div className=\"knob\" />\r\n                            </div>\r\n                          </Draggable>\r\n                          <div className=\"bar\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TrackInfoContainer: ConnectedComponent<typeof TrackInfo, any> = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrackInfo);\r\n\r\nexport default TrackInfoContainer;\r\n","import React, { RefObject } from \"react\";\r\n\r\nimport \"./track-waver.scss\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AppState } from \"../../../core/state/store\";\r\n\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\nimport { ConnectedComponent, connect } from \"react-redux\";\r\nimport { Seconds } from \"../../../core/shared\";\r\n\r\nconst mapStateToProps = (state: AppState): TrackWaverProps | any => ({\r\n  isSetInPlayer: state.viewedTrack.isSetInPlayer,\r\n  wave: state.viewedTrack.wave,\r\n  currentTime: state.track.currentTime,\r\n  duration: state.track.duration,\r\n  soundcloudDuration: state.viewedTrack.duration\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<any>\r\n): TrackWaverProps | any => ({\r\n  onTransferTrackToPlayer: () => {\r\n    dispatch(tasks.trackOperations.transferViewedTrackToPlayer(true));\r\n  },\r\n  onChangeTime: (newTime: number) => {\r\n    dispatch(tasks.trackActions.setAudioNewTime(newTime));\r\n  }\r\n});\r\n\r\ntype TrackWaverProps = {\r\n  isSetInPlayer: boolean;\r\n  wave: Array<number>;\r\n  currentTime: number;\r\n  duration: Seconds;\r\n  soundcloudDuration: Seconds;\r\n  onTransferTrackToPlayer: () => void;\r\n  onChangeTime: (newTime: number) => void;\r\n};\r\n\r\ntype TrackWaverStickProps = {\r\n  index: number;\r\n  value: number;\r\n  isActive: boolean;\r\n};\r\n\r\nconst svgWidth: number = 800;\r\nconst svgHeight: number = 150;\r\nconst stickSpace: number = 5;\r\n\r\nclass TrackWaverStick extends React.Component<TrackWaverStickProps> {\r\n  constructor(props: TrackWaverStickProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { isActive, index, value } = this.props;\r\n\r\n    const fill: string = isActive ? \"url(#active)\" : \"#5e5e5e\";\r\n    const x: number = index * stickSpace;\r\n    const y: number = (svgHeight - value) / 2;\r\n    return (\r\n      <g transform={`translate(${x}, 0)`}>\r\n        <path fill={`${fill}`} d={`M0 0h4v${value}H0z`} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nclass TrackWaver extends React.Component<TrackWaverProps> {\r\n  sticksCount: number;\r\n  areaRef: RefObject<any>;\r\n\r\n  constructor(props: TrackWaverProps) {\r\n    super(props);\r\n    this.sticksCount = svgWidth / stickSpace;\r\n    this.areaRef = React.createRef();\r\n  }\r\n\r\n  createSticks = (): Array<JSX.Element> => {\r\n    const { isSetInPlayer, currentTime, duration, wave } = this.props;\r\n    let sticks: Array<JSX.Element> = [];\r\n    const activeArea: number =\r\n      isSetInPlayer && duration\r\n        ? Math.ceil((currentTime / duration) * this.sticksCount)\r\n        : 0;\r\n\r\n    for (let i = 0; i < activeArea; ++i) {\r\n      sticks.push(\r\n        <TrackWaverStick key={i} index={i} value={wave[i]} isActive={true} />\r\n      );\r\n    }\r\n    for (let i = activeArea; i < this.sticksCount; ++i) {\r\n      sticks.push(\r\n        <TrackWaverStick key={i} index={i} value={wave[i]} isActive={false} />\r\n      );\r\n    }\r\n    return sticks;\r\n  };\r\n\r\n  handleClick = (event: React.MouseEvent<SVGElement>): void => {\r\n    const { isSetInPlayer, duration } = this.props;\r\n    if (!isSetInPlayer) {\r\n      this.props.onTransferTrackToPlayer();\r\n    }\r\n    const offsetX: number = event.nativeEvent.offsetX;\r\n    this.props.onChangeTime((duration / svgWidth) * offsetX);\r\n  };\r\n\r\n  handleMouseMove = (event: React.MouseEvent<SVGElement>): void => {\r\n    const offsetX: number = event.nativeEvent.offsetX;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"track-waver\">\r\n        <svg\r\n          data-name=\"track-waver-svg\"\r\n          width=\"100%\"\r\n          height={svgHeight}\r\n          onClick={this.handleClick}\r\n          onMouseMove={this.handleMouseMove}\r\n        >\r\n          <defs>\r\n            <linearGradient id=\"active\" x2=\"1\" y2=\"1\">\r\n              <stop offset=\"0%\" stopColor=\"#fd7a2c\" />\r\n              <stop offset=\"80%\" stopColor=\"#ba3a65\" />\r\n              <stop offset=\"100%\" stopColor=\"#ba3a65\" />\r\n            </linearGradient>\r\n          </defs>\r\n          {this.createSticks()}\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TrackWaverContainer: ConnectedComponent<typeof TrackWaver, any> = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrackWaver);\r\n\r\nexport default TrackWaverContainer;\r\n","import React, { Dispatch } from \"react\";\r\n\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\nimport { Moment } from \"../../../core/shared/index\";\r\n\r\nimport viewedTrackSelectors from \"../../../core/state/ducks/viewed-track/viewed-track.selectors\"\r\nimport trackActions from \"../../../core/state/ducks/track/track.actions\";\r\n\r\nimport Draggable, { DraggableEvent, DraggableData, ControlPosition } from \"react-draggable\";\r\n\r\nimport CSS from \"csstype\";\r\nimport \"./mini-timeline.scss\";\r\n\r\nconst mapStateToProps = (state: AppState): MiniTimelineProps | any => ({\r\n    currentTime: state.track.currentTime,\r\n    duration: state.track.duration,\r\n    isPlaying: state.track.isPlaying,\r\n    moments: viewedTrackSelectors.getSelectedMoments(state)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): MiniTimelineProps | any => ({\r\n    onNewCurrentTime: (time: number) => {dispatch(trackActions.setAudioNewTime(time));},\r\n    onNewAudioStatus: (status: boolean) => {dispatch(trackActions.setAudioStatus(status));}\r\n})\r\n\r\ntype MiniTimelineProps = {\r\n    currentTime: number;\r\n    duration: number;\r\n    isPlaying: boolean;\r\n    moments: Array<Moment>;\r\n    onNewCurrentTime: (time: number) => void;\r\n    onNewAudioStatus: (status: boolean) => void;\r\n}\r\n\r\ntype MiniTimelineMomentProps = {\r\n    width: number;\r\n    color: string;\r\n    start: number;\r\n    end: number;\r\n}\r\n\r\ntype MiniTimelineState = {\r\n    dragStartPosition: number;\r\n    currentTimeOffset: number;\r\n}\r\n\r\nclass MiniTimeline extends React.Component <MiniTimelineProps, MiniTimelineState>{\r\n\r\n    state: MiniTimelineState = {\r\n        dragStartPosition: 0,\r\n        currentTimeOffset: 0\r\n    }\r\n        \r\n    constructor(props: MiniTimelineProps) {\r\n        super(props);\r\n    }\r\n\r\n    createMoments(): Array<JSX.Element> {\r\n        let moments: Array<JSX.Element> = [];\r\n        let containerStyle: CSS.Properties;\r\n        let momentStyle: CSS.Properties;\r\n\r\n        let secondsFactor = 7;\r\n\r\n        for (let moment of this.props.moments) {\r\n\r\n            containerStyle = {\r\n                width: `${((moment.end - moment.start)*secondsFactor)}px`,\r\n                maxHeight: 'calc(100% - 20%)',\r\n                top: `${moment.section * 20}%`,\r\n                transform: `translate(${moment.start *secondsFactor}px)`,\r\n            }\r\n\r\n            momentStyle = {\r\n                backgroundColor: moment.color\r\n            }\r\n\r\n            moments.push(\r\n                <div className=\"mini-moment-container\" style={containerStyle}>\r\n                    <div className=\"mini-moment\" style={momentStyle}></div>\r\n                </div>\r\n            );\r\n        }\r\n        return moments\r\n    }\r\n\r\n    handleActiveBoxDrag = (event: DraggableEvent, data: DraggableData): void =>{         \r\n        let offset = -( data.x *(this.props.duration * 7 / 840) ) / (this.props.duration * 7 / 840)\r\n        this.setState({\r\n            currentTimeOffset: offset * (-1)\r\n        })\r\n    }\r\n\r\n    handleActiveBoxStart = (event: DraggableEvent, data: DraggableData): void => {\r\n        this.props.onNewAudioStatus(false)\r\n        this.setState({\r\n            dragStartPosition: data.x\r\n        })\r\n    }\r\n\r\n    handleActiveBoxEnd = (event: DraggableEvent, data: DraggableData): void => {\r\n        const delta = data.x - this.state.dragStartPosition;\r\n        const newTime = this.props.currentTime + (delta / 7) * (this.props.duration * 7 / 840);\r\n        this.props.onNewCurrentTime(newTime);     \r\n        this.props.onNewAudioStatus(true);\r\n    }   \r\n\r\n    componentDidUpdate(prevProps: MiniTimelineProps, prevState: MiniTimelineState) {\r\n        if (this.props.currentTime !== prevProps.currentTime) \r\n          this.setState({\r\n              currentTimeOffset: (this.props.currentTime * 7) / (this.props.duration * 7 / 840)\r\n          })\r\n      }\r\n\r\n    render() {\r\n\r\n        let ActiveBoxPosition: ControlPosition = {\r\n            x: this.state.currentTimeOffset,\r\n            y: 0\r\n        }\r\n\r\n        let fullStyle: CSS.Properties = {\r\n            width: this.props.duration * 7 + \"px\",\r\n            transform: `translate(${ -this.state.currentTimeOffset }px)`\r\n        }\r\n\r\n        let setActiveBoxTransition = (): CSS.Properties => {\r\n            let activeBoxStyle: CSS.Properties\r\n            (this.props.isPlaying)\r\n            ? activeBoxStyle = { transition: `all 0.25s linear 0s` }\r\n            : activeBoxStyle = { transition: `none` }\r\n            \r\n            return activeBoxStyle;\r\n        }\r\n\r\n        return (    \r\n            <div className=\"mini-timeline-container\">\r\n                <div className=\"draggable-container\">\r\n                    <Draggable\r\n                        axis=\"x\"\r\n                        bounds=\".draggable-container\"\r\n                        position={ActiveBoxPosition}\r\n                        onStart={this.handleActiveBoxStart}\r\n                        onDrag={this.handleActiveBoxDrag}\r\n                        onStop={this.handleActiveBoxEnd}\r\n                        cancel=\".react-resizable-handle-w, .react-resizable-handle-e\"\r\n                    >\r\n                    <div className=\"mini-timeline-active-box\" style={setActiveBoxTransition()}></div>\r\n                    </Draggable>\r\n                </div>\r\n                <div className=\"mini-timeline-full\" style={fullStyle}>\r\n                    {this.createMoments()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MiniTimelineContainer: ConnectedComponent<typeof MiniTimeline, any> = connect(mapStateToProps, mapDispatchToProps)(MiniTimeline);\r\n\r\nexport default MiniTimelineContainer;","import React, { SyntheticEvent } from \"react\";\r\n\r\nimport \"./TimeLineMoment.scss\";\r\nimport CSS from \"csstype\";\r\nimport { Seconds, Moment } from \"../../../core/shared\";\r\nimport { adjustPositionToScreen } from \"../../../utils\";\r\n\r\ntype TimelineMomentProps = {\r\n  moment: Moment;\r\n  currentTime: Seconds;\r\n  isFullWidth?: boolean;\r\n  onContextMenu: (moment: Moment, position: { x: number; y: number }) => void;\r\n};\r\n\r\nclass TimelineMoment extends React.Component<TimelineMomentProps> {\r\n  constructor(props: TimelineMomentProps) {\r\n    super(props);\r\n  }\r\n\r\n  countWidth = (): string => {\r\n    const { isFullWidth } = this.props;\r\n    const { start, end } = this.props.moment;\r\n    return isFullWidth === true ? `100%` : `${(end - start) * 28}px`;\r\n  };\r\n\r\n  getMomentBackgroundClass = (): string => {\r\n    const { start, end } = this.props.moment;\r\n    return this.props.currentTime >= start && this.props.currentTime <= end\r\n      ? \"moment-background highlight\"\r\n      : \"moment-background\";\r\n  };\r\n\r\n  getMomentNameClass = (): string => {\r\n    const { start } = this.props.moment;\r\n    return this.props.currentTime - 15 <= start\r\n      ? \"moment-name\"\r\n      : \"moment-name slide\";\r\n  };\r\n\r\n  getMomentNameStyle = (): CSS.Properties => {\r\n    const { start, end, color } = this.props.moment;\r\n    return this.props.currentTime >= start && this.props.currentTime <= end\r\n      ? { color: color }\r\n      : { color: color };\r\n  };\r\n\r\n  handleContextMenu = (event: SyntheticEvent | any) => {\r\n    event.preventDefault();\r\n    this.props.onContextMenu(\r\n      this.props.moment,\r\n      adjustPositionToScreen(\r\n        {\r\n          x: event.clientX,\r\n          y: event.clientY\r\n        },\r\n        { width: 200, height: 280 }\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, start, section, color } = this.props.moment;\r\n    const momentWrapperStyleNormal: CSS.Properties = {\r\n      width: `${this.countWidth()}`,\r\n      transform: `translate(${start * 28}px)`,\r\n      display: \"flex\",\r\n      top: `${section * 20}%`\r\n    };\r\n\r\n    const momentBackgroundStyle: CSS.Properties = {\r\n      backgroundColor: color\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className=\"moment-wrapper\"\r\n        style={momentWrapperStyleNormal}\r\n        onContextMenu={this.handleContextMenu}\r\n      >\r\n        <div className=\"moment-container\">\r\n          <div className=\"moment-name-container\" style={{ color: color }}>\r\n            <div className={this.getMomentNameClass()}>\r\n              <span>{name}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={this.getMomentBackgroundClass()}\r\n            style={momentBackgroundStyle}\r\n          />\r\n          <div\r\n            className=\"moment-bottom-stripe\"\r\n            style={{ backgroundColor: color }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimelineMoment;\r\n","import React from \"react\";\r\nimport \"./timeline-timer.scss\";\r\nimport { convertToMMSSMS } from \"../../../utils/index\";\r\n\r\ntype TimelineTimerProps = {\r\n  time: number;\r\n};\r\n\r\ntype TimelineTimersProps = {\r\n  currentTime: number;\r\n};\r\n\r\nconst TimelineTimer: React.FC<TimelineTimerProps> = (\r\n  props: TimelineTimerProps\r\n) => {\r\n  const time = convertToMMSSMS(props.time);\r\n  return (\r\n    <div className=\"timeline-timer-block\">\r\n      {time.signed}\r\n      {time.m}:{time.s}:\r\n      <span className=\"timeline-timer-miliseconds\">{time.ms}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TimelineTimers extends React.Component<TimelineTimersProps> {\r\n  constructor(props: TimelineTimersProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"timeline-timer-container\">\r\n        <TimelineTimer time={this.props.currentTime - 15} />\r\n        <TimelineTimer time={this.props.currentTime} />\r\n        <TimelineTimer time={this.props.currentTime + 15} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimelineTimers;\r\n","import React, { RefObject, ReactElement } from \"react\";\r\nimport { DraggableCore, DraggableEvent, DraggableData } from \"react-draggable\";\r\nimport CSS from \"csstype\";\r\n\r\nimport \"./ResizePanel.scss\";\r\n\r\ntype Direction = \"s\" | \"w\" | \"e\" | \"n\" | \"sw\" | \"nw\" | \"se\" | \"ne\";\r\n\r\nexport type ResizeCallbackData = {\r\n  size: { width: number; height: number };\r\n  handler: Direction;\r\n};\r\n\r\ntype ResizePanelProps = {\r\n  children?: ReactElement<any>;\r\n  className?: string;\r\n  realWidth: number;\r\n  realHeight: number;\r\n  directions: Array<Direction>;\r\n  onResizeStop: (event: DraggableEvent, data: ResizeCallbackData) => any;\r\n  onResizeStart: (event: DraggableEvent, data: ResizeCallbackData) => any;\r\n  onResize: (event: DraggableEvent, data: ResizeCallbackData) => any;\r\n  draggableOpts?: Object;\r\n};\r\n\r\ntype ResizePanelState = {\r\n  virtualStartWidth: number;\r\n  virtualDeltaWidth: number;\r\n  virtualCurrentWidth: number;\r\n  virtualStartHeight: number;\r\n  virtualDeltaHeight: number;\r\n  virtualCurrentHeight: number;\r\n  startClientX: number;\r\n  startClientY: number;\r\n};\r\n\r\nclass ResizePanel extends React.Component<ResizePanelProps, ResizePanelState> {\r\n  state: ResizePanelState = {\r\n    virtualStartWidth: 0,\r\n    virtualDeltaWidth: 0,\r\n    virtualCurrentWidth: 0,\r\n    virtualStartHeight: 0,\r\n    virtualDeltaHeight: 0,\r\n    virtualCurrentHeight: 0,\r\n    startClientX: 0,\r\n    startClientY: 0\r\n  };\r\n\r\n  constructor(props: ResizePanelProps) {\r\n    super(props);\r\n  }\r\n\r\n  isHorizontal = (direction: Direction): boolean =>\r\n    direction === \"w\" || direction === \"e\";\r\n\r\n  isInverted = (direction: Direction): boolean =>\r\n    direction === \"s\" || direction === \"e\";\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      virtualStartWidth: this.props.realWidth,\r\n      virtualStartHeight: this.props.realHeight\r\n    });\r\n  }\r\n\r\n  getNextWidth = (handler: Direction) => {\r\n    const { virtualStartWidth, virtualDeltaWidth } = this.state;\r\n    const factor: number = this.isInverted(handler) ? -1 : 1;\r\n    return Math.max(10, virtualStartWidth - virtualDeltaWidth * factor);\r\n  };\r\n\r\n  handleDrag = (handler: Direction, event: DraggableEvent) => {\r\n    const { virtualCurrentWidth, virtualCurrentHeight } = this.state;\r\n\r\n    const nextWidth: number = this.getNextWidth(handler);\r\n    this.setState({ virtualCurrentWidth: nextWidth });\r\n    this.props.onResize(event, {\r\n      handler: handler,\r\n      size: { width: virtualCurrentWidth, height: virtualCurrentHeight }\r\n    });\r\n  };\r\n\r\n  handleDragStart = (event: DraggableEvent | any, data: DraggableData) => {\r\n    this.setState({\r\n      virtualCurrentWidth: this.state.virtualStartWidth,\r\n      startClientX: event.clientX\r\n    });\r\n  };\r\n\r\n  handleStop = (event: DraggableEvent | any, data: DraggableData) => {\r\n    this.setState({\r\n      virtualDeltaWidth: event.clientX - this.state.startClientX,\r\n      virtualStartWidth: this.props.realWidth\r\n    });\r\n  };\r\n\r\n  createHandler = (direction: Direction): JSX.Element => {\r\n    const onDrag = (event: DraggableEvent | any, data: DraggableData) => {\r\n      const newDelta: number = event.clientX - this.state.startClientX;\r\n      this.setState({ virtualDeltaWidth: newDelta });\r\n      this.handleDrag(direction, event);\r\n    };\r\n\r\n    return (\r\n      <DraggableCore\r\n        key={`handle-${direction}`}\r\n        onStart={this.handleDragStart}\r\n        onDrag={onDrag}\r\n        onStop={this.handleStop}\r\n        {...this.props.draggableOpts}\r\n      >\r\n        <span className={`resizable-handle ${direction}`} />\r\n      </DraggableCore>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { realWidth, realHeight } = this.props;\r\n    const resizableWrapperStyles: CSS.Properties = {\r\n      width: `${realWidth}px`,\r\n      height: `${realHeight}px`\r\n    };\r\n    return (\r\n      <div className=\"resizable-wrapper\" style={resizableWrapperStyles}>\r\n        {this.createHandler(\"e\")}\r\n        {this.createHandler(\"w\")}\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResizePanel;\r\n","import React, { SyntheticEvent } from \"react\";\r\n\r\nimport \"./timeline-moment-editable.scss\";\r\nimport TimelineMoment from \"../timeline-moment/TimelineMoment\";\r\nimport Draggable, { DraggableEvent, DraggableData } from \"react-draggable\";\r\n\r\nimport { Moment, Seconds, Pixels, MomentSection } from \"../../../core/shared\";\r\nimport Resizable, {\r\n  ResizeCallbackData\r\n} from \"../../shared/resizable/resizable\";\r\n\r\ntype TimelineMomentEditableProps = {\r\n  moment: Moment;\r\n  currentTime: Seconds;\r\n  onVerticalPositionChange: (newSection: MomentSection) => void;\r\n  onHorizontalPositionChange: (newStart: Seconds) => void;\r\n  onLeftSideResize: (newStart: Seconds) => void;\r\n  onRightSideResize: (newEnd: Seconds) => void;\r\n  onContextMenu: (moment: Moment, position: { x: number; y: number }) => void;\r\n};\r\n\r\ntype TimelineMomentEditableState = {};\r\n\r\nclass TimelineMomentEditable extends React.Component<\r\n  TimelineMomentEditableProps,\r\n  TimelineMomentEditableState\r\n> {\r\n  static sectionHeight: Pixels = 70;\r\n  static secondWidth: Pixels = 28;\r\n  timeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n\r\n  state: TimelineMomentEditableState = {};\r\n\r\n  constructor(props: TimelineMomentEditableProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleNewMomentDragStart = (\r\n    event: DraggableEvent,\r\n    data: DraggableData\r\n  ): void => {};\r\n\r\n  handleNewMomentDrag = (\r\n    event: DraggableEvent,\r\n    data: DraggableData\r\n  ): void => {};\r\n\r\n  handleNewMomentDragStop = (\r\n    event: DraggableEvent,\r\n    data: DraggableData\r\n  ): void => {\r\n    const { secondWidth, sectionHeight } = TimelineMomentEditable;\r\n    const sectionNumber: number = data.lastY / sectionHeight;\r\n    const section: MomentSection =\r\n      sectionNumber >= 0 && sectionNumber <= 4\r\n        ? (sectionNumber as MomentSection)\r\n        : 0;\r\n\r\n    const start: Seconds = data.lastX / secondWidth;\r\n\r\n    this.props.onVerticalPositionChange(section);\r\n    this.props.onHorizontalPositionChange(start);\r\n  };\r\n\r\n  handleNewMomentResizeStart = (\r\n    event: DraggableEvent,\r\n    data: ResizeCallbackData\r\n  ): void => {\r\n    console.clear();\r\n    console.log(data.size.width);\r\n  };\r\n\r\n  handleNewMomentResize = (\r\n    event: DraggableEvent,\r\n    data: ResizeCallbackData\r\n  ): void => {\r\n    const { handler, size } = data;\r\n    const { secondWidth } = TimelineMomentEditable;\r\n\r\n    if (handler === \"w\") {\r\n      const { end } = this.props.moment;\r\n      const newStart: Seconds = -(size.width / secondWidth) + end;\r\n      this.props.onLeftSideResize(newStart);\r\n      return;\r\n    }\r\n    if (handler === \"e\") {\r\n      const { start } = this.props.moment;\r\n      const newEnd: Seconds = size.width / secondWidth + start;\r\n      this.props.onRightSideResize(newEnd);\r\n      return;\r\n    }\r\n  };\r\n\r\n  handleNewMomentResizeStop = (\r\n    event: DraggableEvent,\r\n    data: ResizeCallbackData\r\n  ) => {};\r\n\r\n  handleSelect = (event: SyntheticEvent): void => {\r\n    event.preventDefault();\r\n    return;\r\n  };\r\n\r\n  handleContextMenu = (\r\n    moment: Moment,\r\n    position: { x: number; y: number }\r\n  ): void => {\r\n    this.props.onContextMenu(moment, position);\r\n  };\r\n\r\n  render() {\r\n    const { secondWidth, sectionHeight } = TimelineMomentEditable;\r\n    const {\r\n      handleNewMomentDragStart,\r\n      handleNewMomentDrag,\r\n      handleNewMomentDragStop,\r\n      handleNewMomentResizeStart,\r\n      handleNewMomentResize,\r\n      handleNewMomentResizeStop,\r\n      handleSelect,\r\n      handleContextMenu\r\n    } = this;\r\n    const { start, end, section } = this.props.moment;\r\n\r\n    const xPosition: number = start * secondWidth;\r\n    const yPosition: number = section * sectionHeight;\r\n    const width: number = (end - start) * secondWidth;\r\n\r\n    return (\r\n      <div className=\"timeline-moment-editable\">\r\n        <Draggable\r\n          axis=\"both\"\r\n          bounds=\".tape\"\r\n          grid={[secondWidth / 2, sectionHeight]}\r\n          position={{ x: xPosition, y: yPosition }}\r\n          onStart={handleNewMomentDragStart}\r\n          onDrag={handleNewMomentDrag}\r\n          onStop={handleNewMomentDragStop}\r\n          cancel=\".resizable-handle\"\r\n        >\r\n          <div className=\"draggable-zone\" style={{ width: `${width}px` }}>\r\n            <Resizable\r\n              className=\"resizable-zone\"\r\n              realWidth={width}\r\n              realHeight={sectionHeight}\r\n              directions={[\"w\", \"e\"]}\r\n              onResizeStart={handleNewMomentResizeStart}\r\n              onResize={handleNewMomentResize}\r\n              onResizeStop={handleNewMomentResizeStop}\r\n              draggableOpts={{ bounds: \".tape\" }}\r\n            >\r\n              <div className=\"resizable-zone\" onSelect={handleSelect}>\r\n                <>\r\n                  <TimelineMoment\r\n                    moment={{\r\n                      ...this.props.moment,\r\n                      start: 0,\r\n                      end: 0,\r\n                      section: 0\r\n                    }}\r\n                    isFullWidth={true}\r\n                    currentTime={this.props.currentTime}\r\n                    onContextMenu={this.handleContextMenu}\r\n                  />\r\n                </>\r\n              </div>\r\n            </Resizable>\r\n          </div>\r\n        </Draggable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimelineMomentEditable;\r\n","import React, { Dispatch, SyntheticEvent } from \"react\";\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\n\r\nimport CSS from \"csstype\";\r\n\r\nimport \"./Timeline.scss\";\r\nimport TimelineMoment from \"../timeline-moment/TimelineMoment\";\r\nimport TimelineTimers from \"./timeline-timer\";\r\n\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { RatingEditorMode } from \"../../../core/state/ducks/rating-editor/rating-editor.state\";\r\nimport { Moment, Seconds, MomentSection, Pixels } from \"../../../core/shared\";\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\nimport TimelineMomentEditable from \"../timeline-moment-editable/timeline-moment-editable\";\r\n\r\nconst mapStateToProps = (state: AppState): TimelineProps | any => ({\r\n  isSetInPlayer: state.viewedTrack.isSetInPlayer,\r\n  mode: state.ratingEditor.mode,\r\n  currentTime: state.track.currentTime,\r\n  duration: state.track.duration,\r\n  soundcloudDuration: state.viewedTrack.duration,\r\n  moments: tasks.viewedTrackSelectors.getSelectedMoments(state),\r\n  selectedTimeStart: state.ratingEditor.selectedTime.start,\r\n  selectedTimeEnd: state.ratingEditor.selectedTime.end,\r\n  newMoment: state.ratingEditor.newMoment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): TimelineProps | any => ({\r\n  onCancelModyfing: () => {\r\n    dispatch(tasks.ratingEditorActions.setMode(RatingEditorMode.DISABLED));\r\n  },\r\n  onNewMomentSectionChange: (newSection: MomentSection) => {\r\n    dispatch(tasks.ratingEditorActions.setNewMomentSection(newSection));\r\n  },\r\n  onNewMomentPositionChange: (newStart: Seconds) => {\r\n    dispatch(tasks.ratingEditorOperations.moveMoment(newStart));\r\n  },\r\n  onNewMomentStartChange: (newStart: Seconds) => {\r\n    dispatch(tasks.ratingEditorActions.setNewMomentTimeStart(newStart));\r\n  },\r\n  onNewMomentEndChange: (newEnd: Seconds) => {\r\n    dispatch(tasks.ratingEditorActions.setNewMomentTimeEnd(newEnd));\r\n  },\r\n  onMomentContextMenu: (moment: Moment, position: { x: number; y: number }) => {\r\n    dispatch(tasks.viewActions.showTimelineMomentContextMenu(moment, position));\r\n  }\r\n});\r\n\r\ntype TimelineProps = {\r\n  isSetInPlayer: boolean;\r\n  mode: RatingEditorMode;\r\n  currentTime: Seconds;\r\n  duration: Seconds;\r\n  soundclouDuration: Seconds;\r\n  moments: Array<Moment>;\r\n  selectedTimeStart: Seconds;\r\n  selectedTimeEnd: Seconds;\r\n  newMoment: Moment;\r\n  onCancelModyfing: () => void;\r\n  onNewMomentSectionChange: (newSection: MomentSection) => void;\r\n  onNewMomentPositionChange: (newStart: Seconds) => void;\r\n  onNewMomentStartChange: (newStart: Seconds) => void;\r\n  onNewMomentEndChange: (newEnd: Seconds) => void;\r\n  onMomentContextMenu: (\r\n    moment: Moment,\r\n    position: { x: number; y: number }\r\n  ) => void;\r\n};\r\n\r\nclass Timeline extends React.Component<TimelineProps> {\r\n  sectionHeight: Pixels = 70;\r\n  secondWidth: Pixels = 28;\r\n\r\n  constructor(props: TimelineProps) {\r\n    super(props);\r\n  }\r\n\r\n  createMoments = (): Array<JSX.Element> => {\r\n    const { moments, currentTime } = this.props;\r\n    return moments.map(moment => (\r\n      <TimelineMoment\r\n        moment={moment}\r\n        currentTime={currentTime}\r\n        onContextMenu={this.handleMomentContextMenu}\r\n      />\r\n    ));\r\n  };\r\n\r\n  getRecordingWrapperStyles = (): CSS.Properties => {\r\n    const {\r\n      currentTime,\r\n      mode,\r\n      selectedTimeStart,\r\n      selectedTimeEnd\r\n    } = this.props;\r\n    const { secondWidth } = this;\r\n\r\n    switch (mode) {\r\n      case RatingEditorMode.DISABLED:\r\n        return {\r\n          display: \"none\"\r\n        };\r\n\r\n      case RatingEditorMode.RECORDING:\r\n        return {\r\n          display: \"block\",\r\n          width: `${secondWidth * currentTime -\r\n            secondWidth * selectedTimeStart}px`,\r\n          left: `${secondWidth * selectedTimeStart}px`\r\n        };\r\n\r\n      case RatingEditorMode.MODIFYING:\r\n        return {\r\n          display: \"block\",\r\n          width: `${secondWidth * selectedTimeEnd -\r\n            secondWidth * selectedTimeStart}px`,\r\n          left: `${secondWidth * selectedTimeStart}px`\r\n        };\r\n    }\r\n  };\r\n\r\n  handleTimelineContextMenu = (event: SyntheticEvent): void => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  handleRecordingCancelButton = (event: React.MouseEvent): void => {\r\n    this.props.onCancelModyfing();\r\n  };\r\n\r\n  handleVerticalPositionChange = (newSection: MomentSection): void => {\r\n    this.props.onNewMomentSectionChange(newSection);\r\n  };\r\n\r\n  handleHorizontalPositionChange = (newStart: Seconds): void => {\r\n    this.props.onNewMomentPositionChange(newStart);\r\n  };\r\n\r\n  handleLeftSideResize = (newStart: Seconds): void => {\r\n    this.props.onNewMomentStartChange(newStart);\r\n  };\r\n\r\n  handleRightSideResize = (newEnd: Seconds): void => {\r\n    this.props.onNewMomentEndChange(newEnd);\r\n  };\r\n\r\n  handleMomentContextMenu = (\r\n    moment: Moment,\r\n    position: { x: number; y: number }\r\n  ) => {\r\n    this.props.onMomentContextMenu(moment, position);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      secondWidth,\r\n      handleHorizontalPositionChange,\r\n      handleVerticalPositionChange,\r\n      handleLeftSideResize,\r\n      handleRightSideResize,\r\n      handleRecordingCancelButton,\r\n      handleMomentContextMenu\r\n    } = this;\r\n    const { duration, currentTime, mode, newMoment } = this.props;\r\n\r\n    const tapeStyles: CSS.Properties = {\r\n      width: secondWidth * duration + \"px\",\r\n      transform: `translate(${-currentTime * secondWidth + 420}px)`\r\n    };\r\n\r\n    const recordingWrapperStyles: CSS.Properties = this.getRecordingWrapperStyles();\r\n\r\n    const recordingCancelButtonStyles: CSS.Properties = {\r\n      display: mode === RatingEditorMode.MODIFYING ? \"flex\" : \"none\"\r\n    };\r\n\r\n    const newMomentWrapperStyles: CSS.Properties = {\r\n      display: mode === RatingEditorMode.MODIFYING ? \"block\" : \"none\"\r\n    };\r\n\r\n    return (\r\n      <div className=\"timeline\" onContextMenu={this.handleTimelineContextMenu}>\r\n        <div className=\"timeline-container\">\r\n          <div className=\"tape\" style={tapeStyles}>\r\n            <div className=\"recording-wrapper\" style={recordingWrapperStyles}>\r\n              <div\r\n                className=\"cancel-button\"\r\n                style={recordingCancelButtonStyles}\r\n                onClick={handleRecordingCancelButton}\r\n              >\r\n                <i className=\"icon-cancel\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"new-moment-wrapper\" style={newMomentWrapperStyles}>\r\n              <TimelineMomentEditable\r\n                moment={newMoment}\r\n                currentTime={currentTime}\r\n                onVerticalPositionChange={handleVerticalPositionChange}\r\n                onHorizontalPositionChange={handleHorizontalPositionChange}\r\n                onLeftSideResize={handleLeftSideResize}\r\n                onRightSideResize={handleRightSideResize}\r\n                onContextMenu={handleMomentContextMenu}\r\n              />\r\n            </div>\r\n            <div className=\"sections-wrapper\">{this.createMoments()}</div>\r\n          </div>\r\n          <div className=\"pointer\" />\r\n          <div className=\"arrows-wrapper\">\r\n            <div className=\"arrow-box left\">\r\n              <div className=\"arrow\">\r\n                <i className=\"icon-left-open\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"arrow-box right\">\r\n              <div className=\"arrow\">\r\n                <i className=\"icon-right-open\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"timeline-timer-container\">\r\n          <TimelineTimers currentTime={this.props.currentTime} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TimelineContainer: ConnectedComponent<typeof Timeline, any> = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Timeline);\r\n\r\nexport default TimelineContainer;\r\n","import React, { Dispatch } from \"react\";\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\nimport CSS from \"csstype\";\r\n\r\nimport \"./moment-editor.scss\";\r\n\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { RatingEditorMode } from \"../../../core/state/ducks/rating-editor/rating-editor.state\";\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\n\r\nimport colorsData from \"../../../assets/data/moment-colors.json\";\r\nimport reactionsData from \"../../../assets/data/moment-reactions.json\";\r\n\r\nimport { convertToMMSSMS, convertToSeconds } from \"../../../utils/index\";\r\nimport {\r\n  Moment,\r\n  MomentColor,\r\n  MomentSection,\r\n  MomentReaction\r\n} from \"../../../core/shared\";\r\n\r\nconst mapStateToProps = (state: AppState): MomentEditorProps | any => ({\r\n  currentTime: state.track.currentTime,\r\n  mode: state.ratingEditor.mode,\r\n  selectedTimeStart: state.ratingEditor.selectedTime.start,\r\n  selectedTimeEnd: state.ratingEditor.selectedTime.end,\r\n  newMoment: state.ratingEditor.newMoment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\r\n  onNameChange: (name: string) => {\r\n    dispatch(tasks.ratingEditorActions.setNewMomentName(name));\r\n  },\r\n  onDescriptionChange: (description: string) => {\r\n    dispatch(tasks.ratingEditorActions.setNewMomentDescription(description));\r\n  },\r\n  onColorChange: (newColor: MomentColor) => {\r\n    dispatch(tasks.ratingEditorActions.setNewMomentColor(newColor));\r\n  },\r\n  onReactionChange: (newReaction: MomentReaction) => {\r\n    dispatch(tasks.ratingEditorActions.setNewMomentReaction(newReaction));\r\n  },\r\n  onSectionChange: (newSection: MomentSection) => {\r\n    dispatch(tasks.ratingEditorActions.setNewMomentSection(newSection));\r\n  },\r\n\r\n  newCurrentTime: (time: number) => {\r\n    dispatch(tasks.trackActions.setAudioNewTime(time));\r\n  },\r\n  newRecordingTimeStart: (time: number) => {\r\n    dispatch(tasks.ratingEditorActions.setSelectedTimeStart(time));\r\n  },\r\n  newRecordingTimeEnd: (time: number) => {\r\n    dispatch(tasks.ratingEditorActions.setSelectedTimeEnd(time));\r\n  }\r\n});\r\n\r\ntype MomentEditorProps = {\r\n  currentTime: number;\r\n  mode: RatingEditorMode;\r\n  selectedTimeStart: number;\r\n  selectedTimeEnd: number;\r\n  newMoment: Moment;\r\n  onNameChange: (name: string) => void;\r\n  onDescriptionChange: (description: string) => void;\r\n  onColorChange: (newColor: MomentColor) => void;\r\n  onReactionChange: (newReaction: MomentReaction) => void;\r\n  onSectionChange: (newSection: MomentSection) => void;\r\n  newCurrentTime: (time: number) => void;\r\n  newRecordingTimeStart: (time: number) => void;\r\n  newRecordingTimeEnd: (time: number) => void;\r\n};\r\n\r\ntype MomentEditorState = {};\r\n\r\ntype timeValueInputProps = {\r\n  recordingValueArg: number;\r\n  editingValueArg: number;\r\n  handleTypeArg: (event: React.KeyboardEvent) => void;\r\n};\r\n\r\nclass MomentEditor extends React.Component<\r\n  MomentEditorProps,\r\n  MomentEditorState\r\n> {\r\n  startMinutesRef: React.RefObject<HTMLInputElement>;\r\n  startSecondsRef: React.RefObject<HTMLInputElement>;\r\n  startMilisecondsRef: React.RefObject<HTMLInputElement>;\r\n  endMinutesRef: React.RefObject<HTMLInputElement>;\r\n  endSecondsRef: React.RefObject<HTMLInputElement>;\r\n  endMilisecondsRef: React.RefObject<HTMLInputElement>;\r\n\r\n  defaultColor: string;\r\n  defaultReaction: MomentReaction;\r\n  defaultSection: MomentSection;\r\n\r\n  constructor(props: MomentEditorProps) {\r\n    super(props);\r\n    this.defaultColor = \"#ffffff8a\";\r\n    this.defaultReaction = MomentReaction.NONE;\r\n    this.defaultSection = 2;\r\n\r\n    this.startMinutesRef = React.createRef();\r\n    this.startSecondsRef = React.createRef();\r\n    this.startMilisecondsRef = React.createRef();\r\n    this.endMinutesRef = React.createRef();\r\n    this.endSecondsRef = React.createRef();\r\n    this.endMilisecondsRef = React.createRef();\r\n  }\r\n\r\n  countShade = (color: string): string => {\r\n    return color + \"90\";\r\n  };\r\n\r\n  setMomentColorButtonStyle = (backgroundColor: string): CSS.Properties => {\r\n    return { backgroundColor: backgroundColor };\r\n  };\r\n\r\n  handleColorButtonClick = (event: React.MouseEvent<HTMLSpanElement>): void => {\r\n    const colorData: string | null = event.currentTarget.getAttribute(\r\n      \"data-color\"\r\n    );\r\n    const color: MomentColor =\r\n      colorData !== null ? (colorData as MomentColor) : this.defaultColor;\r\n    this.props.onColorChange(color);\r\n  };\r\n\r\n  handleReactionClick = (event: React.MouseEvent<HTMLSpanElement>): void => {\r\n    const reactionData: string | null = event.currentTarget.getAttribute(\r\n      \"data-reaction\"\r\n    );\r\n    const reaction: MomentReaction =\r\n      reactionData !== null\r\n        ? (reactionData as MomentReaction)\r\n        : this.defaultReaction;\r\n    this.props.onReactionChange(reaction);\r\n  };\r\n\r\n  handleSectionClick = (event: React.MouseEvent<HTMLDivElement>): void => {\r\n    const sectionData: string | null = event.currentTarget.getAttribute(\r\n      \"data-section\"\r\n    );\r\n    const section: MomentSection =\r\n      sectionData !== null\r\n        ? (parseInt(sectionData) as MomentSection)\r\n        : this.defaultSection;\r\n    this.props.onSectionChange(section);\r\n  };\r\n\r\n  handleStartChangeTime = (event: React.KeyboardEvent): void => {\r\n    const { startMinutesRef, startSecondsRef, startMilisecondsRef } = this;\r\n\r\n    const m: number =\r\n      startMinutesRef.current !== null\r\n        ? parseInt(startMinutesRef.current.value)\r\n        : 0;\r\n    const s: number =\r\n      startSecondsRef.current !== null\r\n        ? parseInt(startSecondsRef.current.value)\r\n        : 0;\r\n    const ms: number =\r\n      startMilisecondsRef.current !== null\r\n        ? parseInt(startMilisecondsRef.current.value)\r\n        : 0;\r\n\r\n    this.props.newCurrentTime(convertToSeconds(m, s, ms));\r\n    this.props.newRecordingTimeStart(convertToSeconds(m, s, ms));\r\n  };\r\n\r\n  handleEndChangeTime = (event: React.KeyboardEvent): void => {\r\n    const { endMinutesRef, endSecondsRef, endMilisecondsRef } = this;\r\n\r\n    const m: number =\r\n      endMinutesRef.current !== null\r\n        ? parseInt(endMinutesRef.current.value)\r\n        : 0;\r\n    const s: number =\r\n      endSecondsRef.current !== null\r\n        ? parseInt(endSecondsRef.current.value)\r\n        : 0;\r\n    const ms: number =\r\n      endMilisecondsRef.current !== null\r\n        ? parseInt(endMilisecondsRef.current.value)\r\n        : 0;\r\n\r\n    this.props.newCurrentTime(convertToSeconds(m, s, ms));\r\n    this.props.newRecordingTimeEnd(convertToSeconds(m, s, ms));\r\n  };\r\n\r\n  getTimeValueInputArgs = (isStart: boolean): timeValueInputProps => {\r\n    const { currentTime, selectedTimeStart, selectedTimeEnd } = this.props;\r\n    const recordingValueArg: number = isStart ? selectedTimeStart : currentTime;\r\n\r\n    const editingValueArg: number = isStart\r\n      ? selectedTimeStart\r\n      : selectedTimeEnd;\r\n\r\n    const handleTypeArg: (event: React.KeyboardEvent) => void = isStart\r\n      ? this.handleStartChangeTime\r\n      : this.handleEndChangeTime;\r\n\r\n    return {\r\n      recordingValueArg: recordingValueArg,\r\n      editingValueArg: editingValueArg,\r\n      handleTypeArg: handleTypeArg\r\n    };\r\n  };\r\n\r\n  mmInput = (isStart: boolean): JSX.Element => {\r\n    let input: JSX.Element;\r\n    const refTypeArg: React.RefObject<HTMLInputElement> = isStart\r\n      ? this.startMinutesRef\r\n      : this.endMinutesRef;\r\n\r\n    input =\r\n      this.props.mode === RatingEditorMode.RECORDING ? (\r\n        <input\r\n          type=\"number\"\r\n          value={\r\n            convertToMMSSMS(\r\n              this.getTimeValueInputArgs(isStart).recordingValueArg\r\n            ).m\r\n          }\r\n          min=\"0\"\r\n          max=\"60\"\r\n          className=\"time-value-input readonly\"\r\n          readOnly\r\n        />\r\n      ) : (\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={\r\n            convertToMMSSMS(this.getTimeValueInputArgs(isStart).editingValueArg)\r\n              .m\r\n          }\r\n          placeholder=\"00\"\r\n          ref={refTypeArg}\r\n          min=\"0\"\r\n          max=\"60\"\r\n          className=\"time-value-input\"\r\n          onKeyUp={this.getTimeValueInputArgs(isStart).handleTypeArg}\r\n        />\r\n      );\r\n\r\n    return input;\r\n  };\r\n\r\n  ssInput = (isStart: boolean): JSX.Element => {\r\n    let input: JSX.Element;\r\n    const refTypeArg: React.RefObject<HTMLInputElement> = isStart\r\n      ? this.startSecondsRef\r\n      : this.endSecondsRef;\r\n\r\n    input =\r\n      this.props.mode === RatingEditorMode.RECORDING ? (\r\n        <input\r\n          type=\"number\"\r\n          value={\r\n            convertToMMSSMS(\r\n              this.getTimeValueInputArgs(isStart).recordingValueArg\r\n            ).s\r\n          }\r\n          min=\"0\"\r\n          max=\"60\"\r\n          className=\"time-value-input readonly\"\r\n          readOnly\r\n        />\r\n      ) : (\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={\r\n            convertToMMSSMS(this.getTimeValueInputArgs(isStart).editingValueArg)\r\n              .s\r\n          }\r\n          placeholder=\"00\"\r\n          ref={refTypeArg}\r\n          min=\"0\"\r\n          max=\"60\"\r\n          className=\"time-value-input\"\r\n          onKeyUp={this.getTimeValueInputArgs(isStart).handleTypeArg}\r\n        />\r\n      );\r\n\r\n    return input;\r\n  };\r\n\r\n  msInput = (isStart: boolean): JSX.Element => {\r\n    let input: JSX.Element;\r\n    const refTypeArg: React.RefObject<HTMLInputElement> = isStart\r\n      ? this.startMilisecondsRef\r\n      : this.endMilisecondsRef;\r\n\r\n    input =\r\n      this.props.mode === RatingEditorMode.RECORDING ? (\r\n        <input\r\n          type=\"number\"\r\n          value={\r\n            convertToMMSSMS(\r\n              this.getTimeValueInputArgs(isStart).recordingValueArg\r\n            ).ms\r\n          }\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          className=\"time-value-input miliseconds readonly\"\r\n          readOnly\r\n        />\r\n      ) : (\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={\r\n            convertToMMSSMS(this.getTimeValueInputArgs(isStart).editingValueArg)\r\n              .ms\r\n          }\r\n          placeholder=\"00\"\r\n          ref={refTypeArg}\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          className=\"time-value-input miliseconds\"\r\n          onKeyUp={this.getTimeValueInputArgs(isStart).handleTypeArg}\r\n        />\r\n      );\r\n\r\n    return input;\r\n  };\r\n\r\n  createMomentReactions = (): Array<JSX.Element> => {\r\n    let reactions: Array<JSX.Element> = [];\r\n\r\n    for (const reaction of reactionsData) {\r\n      const reactionClass: string =\r\n        reaction.name === this.props.newMoment.reaction\r\n          ? \"moment-reaction active\"\r\n          : \"moment-reaction\";\r\n\r\n      reactions.push(\r\n        <span key={reaction.name} className={reactionClass}>\r\n          <img\r\n            className=\"reaction-img\"\r\n            src={reaction.path}\r\n            onClick={this.handleReactionClick}\r\n            data-reaction={reaction.name}\r\n            alt={reaction.name}\r\n          />\r\n        </span>\r\n      );\r\n    }\r\n    return reactions;\r\n  };\r\n\r\n  createMomentColorButtons = (): Array<JSX.Element> => {\r\n    let buttons: Array<JSX.Element> = [];\r\n\r\n    for (const color of colorsData) {\r\n      const buttonClass: string =\r\n        color.color === this.props.newMoment.color\r\n          ? \"color-button active\"\r\n          : \"color-button\";\r\n\r\n      buttons.push(\r\n        <input\r\n          key={color.color}\r\n          type=\"button\"\r\n          className={buttonClass}\r\n          data-color={color.color}\r\n          style={this.setMomentColorButtonStyle(color.color)}\r\n          onClick={this.handleColorButtonClick}\r\n        />\r\n      );\r\n    }\r\n    return buttons;\r\n  };\r\n\r\n  createSectionButtons = (): Array<JSX.Element> => {\r\n    let sectionButtons: Array<JSX.Element> = [];\r\n\r\n    for (let section = 0; section <= 4; ++section) {\r\n      const sectionButtonClass: string =\r\n        section == this.props.newMoment.section\r\n          ? \"section-button active\"\r\n          : \"section-button\";\r\n\r\n      sectionButtons.push(\r\n        <div\r\n          key={section}\r\n          className={sectionButtonClass}\r\n          data-section={section}\r\n          onClick={this.handleSectionClick}\r\n        >\r\n          <span>{section + 1}</span>\r\n        </div>\r\n      );\r\n    }\r\n    return sectionButtons;\r\n  };\r\n\r\n  handleMomentNameInputKeyUp = (\r\n    event: React.KeyboardEvent<HTMLInputElement>\r\n  ): void => {\r\n    this.props.onNameChange(event.currentTarget.value);\r\n  };\r\n\r\n  handleMomentDescriptionAreaKeyUp = (\r\n    event: React.KeyboardEvent<HTMLTextAreaElement>\r\n  ): void => {\r\n    this.props.onDescriptionChange(event.currentTarget.value);\r\n  };\r\n\r\n  render() {\r\n    const { currentTime, newMoment } = this.props;\r\n\r\n    convertToMMSSMS(currentTime);\r\n    return (\r\n      <div\r\n        className=\"moment-editor-container\"\r\n        style={{ backgroundColor: this.countShade(newMoment.color) }}\r\n      >\r\n        <div className=\"moment-editor left\">\r\n          <div className=\"moment-name-input-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"moment-name-input\"\r\n              placeholder=\"moment-name\"\r\n              onKeyUp={this.handleMomentNameInputKeyUp}\r\n            />\r\n          </div>\r\n          <div className=\"moment-description-container\">\r\n            <textarea\r\n              className=\"moment-description-input\"\r\n              placeholder=\"Add description of your moment... \"\r\n              onKeyUp={this.handleMomentDescriptionAreaKeyUp}\r\n            />\r\n          </div>\r\n          <div className=\"moment-colors-container\">\r\n            <div className=\"moment-colors\">\r\n              {this.createMomentColorButtons()}\r\n            </div>\r\n          </div>\r\n          <div className=\"moment-reactions-container\">\r\n            {this.createMomentReactions()}\r\n          </div>\r\n        </div>\r\n        <div className=\"moment-editor-divider-container\">\r\n          <div className=\"moment-editor-divider\" />\r\n        </div>\r\n        <div className=\"moment-editor right\">\r\n          <div className=\"moment-time-wrapper\">\r\n            <div className=\"moment-time-container\">\r\n              <div className=\"time-value\">\r\n                {this.mmInput(true)}\r\n                <span>:</span>\r\n                {this.ssInput(true)}\r\n                <span>:</span>\r\n                {this.msInput(true)}\r\n              </div>\r\n              <div className=\"time-divider\" />\r\n              <div className=\"time-name-container\">\r\n                <span>start</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"moment-time-container\">\r\n              <div className=\"time-value\">\r\n                {this.mmInput(false)}\r\n                <span>:</span>\r\n                {this.ssInput(false)}\r\n                <span>:</span>\r\n                {this.msInput(false)}\r\n              </div>\r\n              <div className=\"time-divider\" />\r\n              <div className=\"time-name-container\">\r\n                <span>end</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"moment-section-selector-wrapper\">\r\n            <div className=\"moment-section-selector\">\r\n              <div className=\"selector-title\">\r\n                <span>section</span>\r\n              </div>\r\n              <div className=\"section-buttons-container\">\r\n                {this.createSectionButtons()}\r\n              </div>\r\n              <div className=\"section-selector-final-button\">\r\n                <i className=\"icon-right-open\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst MomentEditorContainer: ConnectedComponent<\r\n  typeof MomentEditor,\r\n  any\r\n> = connect(mapStateToProps, mapDispatchToProps)(MomentEditor);\r\n\r\nexport default MomentEditorContainer;\r\n","import React, { Dispatch, ComponentClass } from \"react\";\r\n\r\nimport \"./rating-list.scss\";\r\nimport { AppState } from \"../../../core/state/store\";\r\n\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\n\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport CSS from \"csstype\";\r\nimport { Rating } from \"../../../core/shared\";\r\nimport { RatingEditorMode } from \"../../../core/state/ducks/rating-editor/rating-editor.state\";\r\n\r\nconst mapStateToProps = (state: AppState): RatingListProps | any => ({\r\n  userRating: tasks.viewedTrackSelectors.getUserRating(state),\r\n  otherRatings: tasks.viewedTrackSelectors.getOtherRatings(state),\r\n  selectedRatingId: state.viewedTrack.selectedRatingId,\r\n  mode: state.ratingEditor.mode\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<any>\r\n): RatingListProps | any => ({\r\n  onChangeRating: (ratingId: number): void => {\r\n    dispatch(tasks.viewedTrackActions.setSelectedRatingId(ratingId));\r\n  }\r\n});\r\n\r\ntype RatingListProps = {\r\n  userRating: Rating;\r\n  otherRatings: Array<Rating>;\r\n  selectedRatingId: number;\r\n  mode: RatingEditorMode;\r\n  onChangeRating: (ratingId: number) => void;\r\n  match?: any;\r\n};\r\n\r\ntype RatingListState = {};\r\n\r\nclass RatingList extends React.Component<RatingListProps, RatingListState> {\r\n  constructor(props: RatingListProps) {\r\n    super(props);\r\n  }\r\n\r\n  renderButtons(): Array<JSX.Element> {\r\n    const { userRating, otherRatings } = this.props;\r\n    const buttons: Array<JSX.Element> = [this.renderUserButton(userRating, -1)];\r\n    return buttons.concat(otherRatings.map(this.renderButton));\r\n  }\r\n\r\n  renderUserButton(rating: Rating, index: number): JSX.Element {\r\n    const { ratingId } = rating;\r\n    const { avatar } = rating.user;\r\n\r\n    const ratingButtonClassName: string =\r\n      ratingId === this.props.selectedRatingId\r\n        ? \"rating-button selected\"\r\n        : \"rating-button\";\r\n    const avatarStyles: CSS.Properties = {\r\n      backgroundImage: `url(${avatar})`\r\n    };\r\n    return (\r\n      <div\r\n        key={index}\r\n        className={ratingButtonClassName}\r\n        onClick={(event: React.MouseEvent) => {\r\n          this.props.onChangeRating(ratingId);\r\n        }}\r\n      >\r\n        <div className=\"avatar-box\">\r\n          <div className=\"avatar\" style={avatarStyles} />\r\n        </div>\r\n        <div className=\"text-box\">\r\n          <div>\r\n            <div className=\"nickname\">\r\n              <span>Your</span>\r\n            </div>\r\n            <div>\r\n              <span>Rating</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderButton = (rating: Rating, index: number): JSX.Element => {\r\n    const { nickname, avatar } = rating.user;\r\n    const { selectedRatingId } = this.props;\r\n\r\n    const ratingButtonClassName: string =\r\n      rating.ratingId === selectedRatingId\r\n        ? \"rating-button selected\"\r\n        : \"rating-button\";\r\n    const avatarStyles: CSS.Properties = {\r\n      backgroundImage: `url(${avatar})`\r\n    };\r\n\r\n    return (\r\n      <div\r\n        key={index}\r\n        className={ratingButtonClassName}\r\n        onClick={(event: React.MouseEvent) => {\r\n          this.props.onChangeRating(rating.ratingId);\r\n        }}\r\n      >\r\n        <div className=\"avatar-box\">\r\n          <div className=\"avatar\" style={avatarStyles} />\r\n        </div>\r\n        <div className=\"text-box\">\r\n          <div>\r\n            <div className=\"nickname\">\r\n              <span>{`${nickname}'s`}</span>\r\n            </div>\r\n            <div>\r\n              <span>Rating</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rating-list\">\r\n        <div>{this.renderButtons()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RatingListContainer: ComponentClass = withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(RatingList) as ConnectedComponent<typeof RatingList, any>\r\n);\r\n\r\nexport default RatingListContainer;\r\n","import React, { Dispatch, ComponentClass } from \"react\";\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport TrackInfo from \"../../entities/track-info/track-info\";\r\nimport TrackWaver from \"../../entities/track-waver/track-waver\";\r\n\r\nimport MiniTimeline from \"../../entities/mini-timeline/mini-timeline\";\r\nimport Timeline from \"../../entities/timeline/Timeline\";\r\nimport MomentEditor from \"../../entities/moment-editor/moment-editor\";\r\nimport \"./track.scss\";\r\n\r\nimport { AppState } from \"../../../core/state/store\";\r\n\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\nimport RatingList from \"../../entities/rating-list/rating-list\";\r\nimport { scrollTo } from \"../../../utils\";\r\nimport { RatingEditorMode } from \"../../../core/state/ducks/rating-editor/rating-editor.state\";\r\n\r\nconst mapStateToProps = (state: AppState): TrackProps | any => ({\r\n  playerTrackId: state.track.trackId,\r\n  viewedTrackId: state.viewedTrack.trackId,\r\n  isSetInPlayer: state.viewedTrack.isSetInPlayer,\r\n  isPlaying: state.track.isPlaying,\r\n  mode: state.ratingEditor.mode\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): TrackProps | any => ({\r\n  unsetPlayer: () => {\r\n    dispatch(tasks.viewedTrackActions.unsetInPlayer());\r\n  },\r\n  setPlayer: () => {\r\n    dispatch(tasks.viewedTrackActions.setInPlayer());\r\n  },\r\n  fetchTrack: async (trackId: number, ratingId?: number) => {\r\n    await dispatch(\r\n      tasks.viewedTrackOperations.fetchViewedTrack(trackId, ratingId)\r\n    );\r\n  }\r\n});\r\n\r\ntype TrackProps = {\r\n  playerTrackId: number;\r\n  viewedTrackId: number;\r\n  isSetInPlayer: boolean;\r\n  isPlaying: boolean;\r\n  mode: RatingEditorMode;\r\n  match?: any;\r\n  unsetPlayer: () => void;\r\n  setPlayer: () => void;\r\n  fetchTrack: (trackId: number, ratingId: number) => void;\r\n};\r\n\r\ntype TrackState = any;\r\n\r\nclass TrackComponent extends React.Component<TrackProps, TrackState> {\r\n  infoWrapperRef: React.RefObject<HTMLDivElement>;\r\n  waverWrapperRef: React.RefObject<HTMLDivElement>;\r\n  ratingsWrapperRef: React.RefObject<HTMLDivElement>;\r\n  timelineWrapperRef: React.RefObject<HTMLDivElement>;\r\n  momentEditorWrapperRef: React.RefObject<HTMLDivElement>;\r\n  momentsDescriptionWrapperRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: TrackProps) {\r\n    super(props);\r\n    this.infoWrapperRef = React.createRef();\r\n    this.ratingsWrapperRef = React.createRef();\r\n    this.waverWrapperRef = React.createRef();\r\n    this.timelineWrapperRef = React.createRef();\r\n    this.momentEditorWrapperRef = React.createRef();\r\n    this.momentsDescriptionWrapperRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadTrack();\r\n  }\r\n\r\n  componentDidUpdate(oldProps: TrackProps) {\r\n    const { match, mode } = this.props;\r\n\r\n    if (match.params.trackId != oldProps.match.params.trackId) {\r\n      this.loadTrack();\r\n    }\r\n    if (mode !== oldProps.mode) {\r\n      if (mode === RatingEditorMode.RECORDING) {\r\n        scrollTo(this.ratingsWrapperRef);\r\n      }\r\n      if (mode === RatingEditorMode.MODIFYING) {\r\n        scrollTo(this.momentEditorWrapperRef);\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadTrack() {\r\n    const trackId: number = parseInt(this.props.match.params.trackId);\r\n    const ratingId: number = parseInt(this.props.match.params.ratingId);\r\n\r\n    this.readParams(trackId);\r\n    await this.props.fetchTrack(trackId, ratingId);\r\n  }\r\n\r\n  readParams(trackId: number) {\r\n    if (this.props.viewedTrackId != trackId) {\r\n      this.props.unsetPlayer();\r\n    } else {\r\n      this.props.setPlayer();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"track-page\">\r\n        <div ref={this.infoWrapperRef} id=\"info-wrapper\">\r\n          <TrackInfo />\r\n        </div>\r\n        <div ref={this.waverWrapperRef} id=\"waver-wrapper\">\r\n          <TrackWaver />\r\n        </div>\r\n        <div ref={this.ratingsWrapperRef} id=\"rating-list-wrapper\">\r\n          <RatingList />\r\n        </div>\r\n        <div id=\"mini-timeline-wrapper\">\r\n          <MiniTimeline />\r\n        </div>\r\n        <div ref={this.timelineWrapperRef} id=\"timeline-wrapper\">\r\n          <Timeline />\r\n        </div>\r\n        <div ref={this.momentEditorWrapperRef} id=\"moment-editor-wrapper\">\r\n          <MomentEditor />\r\n        </div>\r\n        <div\r\n          ref={this.momentsDescriptionWrapperRef}\r\n          id=\"moments-description-wrapper\"\r\n        >\r\n          \"Track Description\" section\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TrackContainer: ComponentClass = withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TrackComponent) as ConnectedComponent<typeof TrackComponent, any>\r\n);\r\n\r\nexport default TrackContainer;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport CSS from \"csstype\";\r\n\r\nimport \"./global-player.scss\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { RatingEditorMode } from \"../../../core/state/ducks/rating-editor/rating-editor.state\";\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\n\r\nconst mapStateToProps = (state: AppState): GlobalPlayerProps | any => ({\r\n  autoplay: state.track.autoplay,\r\n  trackId: state.track.trackId,\r\n  cover: state.track.cover,\r\n  author: state.track.author,\r\n  title: state.track.title,\r\n  audioSource: state.track.audioSource,\r\n  isPlaying: state.track.isPlaying,\r\n  mode: state.ratingEditor.mode,\r\n  selectedTimeStart: state.ratingEditor.selectedTime.start,\r\n  selectedTimeEnd: state.ratingEditor.selectedTime.end,\r\n  currentTime: state.track.currentTime,\r\n  newTime: state.track.newTime,\r\n  duration: state.track.duration,\r\n  volume: state.track.volume\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<any>\r\n): GlobalPlayerProps | any => ({\r\n  fetchTrack: async () => {\r\n    await dispatch(tasks.trackOperations.fetchTrack());\r\n  },\r\n  onAudioCanPlay: (duration: number) => {\r\n    dispatch(tasks.trackActions.setAudioDuration(duration));\r\n  },\r\n  toogleAudioPlay: () => {\r\n    dispatch(tasks.trackActions.toogleAudioStatus());\r\n  },\r\n  onAudioAutoplay: () => {\r\n    dispatch(tasks.trackActions.setAudioStatus(true));\r\n    dispatch(tasks.trackActions.setAudioAutoplay(false));\r\n  },\r\n  onAudioPlay: () => {\r\n    dispatch(tasks.trackActions.setAudioStatus(true));\r\n  },\r\n  onAudioPause: () => {\r\n    dispatch(tasks.trackActions.setAudioStatus(false));\r\n  },\r\n  onAudioRecordStart: () => {\r\n    dispatch(tasks.ratingEditorOperations.startRecording());\r\n  },\r\n  onAudioRecordStop: () => {\r\n    dispatch(tasks.ratingEditorOperations.stopRecording());\r\n  },\r\n  onAudioVolumeChange: (volume: number) => {\r\n    dispatch(() => {});\r\n  },\r\n  onAudioTimeUpdate: (currentTime: number) => {\r\n    dispatch(tasks.trackActions.setAudioCurrentTime(currentTime));\r\n  },\r\n  onAudioTimeChange: (newTime: number) => {\r\n    dispatch(tasks.trackActions.setAudioNewTime(newTime));\r\n  }\r\n});\r\n\r\ntype GlobalPlayerProps = {\r\n  trackId: number;\r\n  autoplay: boolean;\r\n  cover: string;\r\n  author: string;\r\n  title: string;\r\n  audioSource: string;\r\n  isPlaying: boolean;\r\n  mode: RatingEditorMode;\r\n  selectedTimeStart: number;\r\n  selectedTimeEnd: number;\r\n  currentTime: number;\r\n  newTime: number;\r\n  duration: number;\r\n  volume: number;\r\n  fetchTrack: () => void;\r\n  toogleAudioPlay: () => void;\r\n  onAudioCanPlay: (duration: number) => void;\r\n  onAudioAutoplay: () => void;\r\n  onAudioPlay: () => void;\r\n  onAudioPause: () => void;\r\n  onAudioRecordStart: () => void;\r\n  onAudioRecordStop: () => void;\r\n  onAudioVolumeChange: (volume: number) => void;\r\n  onAudioTimeUpdate: (currentTime: number) => void;\r\n  onAudioTimeChange: (newTime: number) => void;\r\n};\r\n\r\ntype GlobalPlayerState = any;\r\n\r\nclass GlobalPlayerComponent extends React.Component<\r\n  GlobalPlayerProps,\r\n  GlobalPlayerState\r\n> {\r\n  audio: HTMLAudioElement;\r\n  allowToKeyPressOnSpaceTimeout: NodeJS.Timeout | any;\r\n  isAllowToKeyPressOnSpace: boolean;\r\n\r\n  constructor(props: GlobalPlayerProps) {\r\n    super(props);\r\n    this.audio = new Audio();\r\n    this.isAllowToKeyPressOnSpace = true;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.fetchTrack();\r\n    await this.loadAudio();\r\n    this.loadAudioController();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: GlobalPlayerProps) {\r\n    if (prevProps.isPlaying !== this.props.isPlaying) {\r\n      this.props.isPlaying ? this.audio.play() : this.audio.pause();\r\n    }\r\n    if (prevProps.audioSource !== this.props.audioSource) {\r\n      this.loadAudio();\r\n    }\r\n    if (prevProps.newTime !== this.props.newTime) {\r\n      this.audio.currentTime = this.props.newTime;\r\n      this.props.onAudioTimeUpdate(this.props.newTime);\r\n    }\r\n    if (prevProps.volume !== this.props.volume) {\r\n      this.audio.volume = this.props.volume;\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.audio.pause();\r\n  }\r\n\r\n  handleAudioCanPlay = () => {\r\n    if (this.props.autoplay) this.props.onAudioAutoplay();\r\n    this.props.onAudioCanPlay(this.audio.duration);\r\n  };\r\n\r\n  handleAudioPlay = () => {\r\n    this.props.onAudioPlay();\r\n  };\r\n\r\n  handleAudioPause = () => {\r\n    this.props.onAudioPause();\r\n  };\r\n\r\n  handleAudioTimeUpdate = () => {\r\n    if (this.props.mode === RatingEditorMode.MODIFYING) {\r\n      if (this.audio.currentTime >= this.props.selectedTimeEnd) {\r\n        this.audio.currentTime = this.props.selectedTimeStart;\r\n      }\r\n    }\r\n    this.props.onAudioTimeUpdate(this.audio.currentTime);\r\n  };\r\n\r\n  handleAudioEnded = () => {};\r\n  handleAudioWaiting = () => {};\r\n  handleAudioError = () => {};\r\n\r\n  async loadAudio() {\r\n    this.audio.pause();\r\n    this.audio = new Audio(this.props.audioSource);\r\n    this.audio.load();\r\n    this.audio.volume = this.props.volume;\r\n    this.audio.oncanplaythrough = this.handleAudioCanPlay;\r\n    this.audio.onplay = this.handleAudioPlay;\r\n    this.audio.ontimeupdate = this.handleAudioTimeUpdate;\r\n    this.audio.onpause = this.handleAudioPause;\r\n    this.audio.onended = this.handleAudioEnded;\r\n    this.audio.onwaiting = this.handleAudioWaiting;\r\n    this.audio.onerror = this.handleAudioError;\r\n  }\r\n\r\n  loadAudioController() {\r\n    window.onkeypress = (event: Event | any): void => {\r\n      if (event.target.tagName === \"INPUT\") return;\r\n\r\n      switch (event.which) {\r\n        case 32: // \"Space\" key\r\n          if (!this.isAllowToKeyPressOnSpace) return;\r\n          event.preventDefault();\r\n          this.props.toogleAudioPlay();\r\n          this.isAllowToKeyPressOnSpace = false;\r\n          this.allowToKeyPressOnSpaceTimeout = setTimeout(() => {\r\n            this.isAllowToKeyPressOnSpace = true;\r\n          }, 100);\r\n          return;\r\n      }\r\n    };\r\n\r\n    window.onkeydown = (event: Event | any): void => {\r\n      if (event.target.tagName === \"INPUT\") return;\r\n      const { currentTime, duration } = this.props;\r\n      const diffTime: number = 0.5;\r\n      switch (event.which) {\r\n        case 37: // \"Left-arrow\" key\r\n          event.preventDefault();\r\n          const prevTime: number =\r\n            currentTime > diffTime ? currentTime - diffTime : 0;\r\n          this.audio.currentTime = prevTime;\r\n          return;\r\n        case 39: // \"Right-arrow\" key\r\n          event.preventDefault();\r\n          const nextTime: number =\r\n            duration > currentTime + diffTime\r\n              ? currentTime + diffTime\r\n              : duration - (currentTime + diffTime);\r\n          this.audio.currentTime = nextTime;\r\n          return;\r\n        case 82: // \"R\" key\r\n          const { mode, onAudioRecordStart, onAudioRecordStop } = this.props;\r\n          mode === RatingEditorMode.RECORDING\r\n            ? onAudioRecordStop()\r\n            : onAudioRecordStart();\r\n\r\n          return;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  handlePlayButtonClick = (event: React.MouseEvent) => {\r\n    this.props.isPlaying ? this.props.onAudioPause() : this.props.onAudioPlay();\r\n  };\r\n\r\n  handleRecordButtonClick = (event: React.MouseEvent) => {\r\n    this.props.mode === RatingEditorMode.RECORDING\r\n      ? this.props.onAudioRecordStop()\r\n      : this.props.onAudioRecordStart();\r\n  };\r\n\r\n  handleBarAreaClick = (event: React.MouseEvent | any) => {\r\n    const { offsetX, toElement } = event.nativeEvent;\r\n    const newTime = (offsetX / toElement.offsetWidth) * this.props.duration;\r\n    this.props.onAudioTimeChange(newTime);\r\n  };\r\n\r\n  render() {\r\n    const { currentTime, duration, isPlaying, mode } = this.props;\r\n\r\n    const BarNotFillStyles: CSS.Properties = {\r\n      width: 100 - (currentTime / duration) * 100 + \"%\"\r\n    };\r\n\r\n    const TrackCoverStyles: CSS.Properties = {\r\n      backgroundImage: `url(${this.props.cover})`\r\n    };\r\n\r\n    const playButtonIcon: string = isPlaying ? \"icon-pause\" : \"icon-play\";\r\n\r\n    const recordButtonActive: string =\r\n      mode === RatingEditorMode.RECORDING ? \"active\" : \"\";\r\n    return (\r\n      <div className=\"global-player\">\r\n        <div>\r\n          <div\r\n            className=\"button playing-box\"\r\n            onClick={this.handlePlayButtonClick}\r\n          >\r\n            <i className={playButtonIcon} />\r\n          </div>\r\n          <div\r\n            className={`button recording-box ${recordButtonActive}`}\r\n            onClick={this.handleRecordButtonClick}\r\n          >\r\n            <div className=\"background\" />\r\n            <i className=\"icon-note\" />\r\n          </div>\r\n          <div className=\"bar-box\">\r\n            <div className=\"bar-area\" onClick={this.handleBarAreaClick}>\r\n              <div className=\"bar\">\r\n                <div className=\"not-fill\" style={BarNotFillStyles} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"volume-box\">\r\n            <i className=\"icon-volume\" />\r\n          </div>\r\n          <NavLink to={`/track/${this.props.trackId}`}>\r\n            <div className=\"track-box\">\r\n              <div className=\"left\">\r\n                <div className=\"track-cover\" style={TrackCoverStyles} />\r\n              </div>\r\n              <div className=\"right\">\r\n                <div>\r\n                  <div>\r\n                    <span className=\"author\">{this.props.author}</span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"title\">{this.props.title}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst GlobalPlayerContainer: ConnectedComponent<\r\n  typeof GlobalPlayerComponent,\r\n  any\r\n> = connect(mapStateToProps, mapDispatchToProps)(GlobalPlayerComponent);\r\n\r\nexport default GlobalPlayerContainer;\r\n","import React, { Dispatch, ComponentClass } from \"react\";\r\n\r\nimport \"./my-profile.scss\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { ConnectedComponent, connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state: AppState): MyProfileComponentProps | any => ({\r\n  isLogged: state.user.isLogged,\r\n  nickname: state.user.nickname\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<any>\r\n): MyProfileComponentProps | any => ({});\r\n\r\ntype MyProfileComponentProps = {\r\n  isLogged: boolean;\r\n  nickname: string;\r\n};\r\ntype MyProfileComponentState = {};\r\n\r\nclass MyProfileComponent extends React.Component<\r\n  MyProfileComponentProps,\r\n  MyProfileComponentState\r\n> {\r\n  constructor(props: MyProfileComponentProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    if (!this.props.isLogged) {\r\n      return <Redirect to=\"/access\" />;\r\n    }\r\n    return <div>Hello {this.props.nickname}!</div>;\r\n  }\r\n}\r\n\r\nconst MyProfileContainer: ComponentClass = withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MyProfileComponent) as ConnectedComponent<typeof MyProfileComponent, any>\r\n);\r\n\r\nexport default MyProfileContainer;\r\n","import React from \"react\";\r\nimport \"./spinner.scss\";\r\nimport { random } from \"../../../utils\";\r\n\r\ntype SpinnerComponentProps = {\r\n  progress: number;\r\n  onLoaded?: () => any;\r\n};\r\n\r\ntype SpinnerComponentState = {};\r\n\r\nclass SpinnerComponent extends React.Component<\r\n  SpinnerComponentProps,\r\n  SpinnerComponentState\r\n> {\r\n  spacing: number = 6;\r\n  randomHeights: Array<number> = [];\r\n  constructor(props: SpinnerComponentProps) {\r\n    super(props);\r\n    this.randomHeights = this.getRandomHeights();\r\n  }\r\n\r\n  getRandomHeights(): Array<number> {\r\n    let heights: Array<number> = [];\r\n    for (let i = 0; i < 360 / this.spacing; ++i) {\r\n      heights.push(random(10, 16));\r\n    }\r\n    return heights;\r\n  }\r\n\r\n  render() {\r\n    const progress: number =\r\n      this.props.progress <= 100 ? this.props.progress : 100;\r\n    const area: number = ((progress / 100) * 360) / this.spacing;\r\n    let degs: Array<number> = [];\r\n    for (let i = 0; i <= area; ++i) {\r\n      degs.push(i * this.spacing);\r\n    }\r\n\r\n    return (\r\n      <div className=\"spinner\">\r\n        <div className=\"sticks\">\r\n          {degs.map((deg, i) => (\r\n            <div\r\n              className=\"stick-box\"\r\n              style={{ transform: `rotate(${deg}deg)` }}\r\n            >\r\n              <div\r\n                className=\"stick\"\r\n                style={{\r\n                  top: `${this.randomHeights[i]}%`\r\n                }}\r\n              >\r\n                <div className=\"fulfillment\"></div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"box\">\r\n          <div className=\"inner\">\r\n            <div className=\"note-box\">\r\n              <i className=\"icon-note\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpinnerComponent;\r\n","import React, { ComponentClass, Dispatch } from \"react\";\r\n\r\nimport \"./rate.scss\";\r\nimport { API_KEY, SoundCloud } from \"../../../core/soundcloud\";\r\nimport { withRouter, NavLink } from \"react-router-dom\";\r\nimport CSS from \"csstype\";\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\nimport SpinnerComponent from \"../../shared/spinner/spinner\";\r\n\r\nconst mapStateToProps = (state: AppState): RateComponentProps | any => ({\r\n  isLogged: state.user.isLogged,\r\n  soundcloudId: state.user.soundcloudId\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<any>\r\n): RateComponentProps | any => ({});\r\n\r\ntype RateComponentProps = {\r\n  isLogged: boolean;\r\n  soundcloudId: number;\r\n  history?: any;\r\n  match?: any;\r\n};\r\n\r\ntype RateComponentState = {\r\n  isUserFavourtiesLoaded: boolean;\r\n  userFavourites: Array<SoundCloud.UserFavouritesData>;\r\n  progress: number;\r\n};\r\n\r\nclass RateComponent extends React.Component<\r\n  RateComponentProps,\r\n  RateComponentState\r\n> {\r\n  interval: any;\r\n  state: RateComponentState = {\r\n    isUserFavourtiesLoaded: false,\r\n    userFavourites: [],\r\n    progress: 0\r\n  };\r\n\r\n  constructor(props: RateComponentProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserFavourites();\r\n\r\n    this.interval = setInterval(() => {\r\n      if (this.state.progress > 100) {\r\n        clearInterval(this.interval);\r\n        return;\r\n      }\r\n      this.setState({ progress: this.state.progress + 1 });\r\n    }, 100);\r\n  }\r\n\r\n  async fetchTrackInfo(url: string): Promise<any> {\r\n    const apiUrl = `https://api.soundcloud.com/resolve?url=${url}&client_id=${API_KEY}`;\r\n    try {\r\n      const response: Response = await fetch(apiUrl);\r\n      const data: any = await response.json();\r\n      this.props.history.push(`/track/${data.id}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async fetchUserFavourites(): Promise<void> {\r\n    const { isLogged, soundcloudId } = this.props;\r\n    this.setState({ isUserFavourtiesLoaded: false });\r\n\r\n    if (!isLogged) return;\r\n\r\n    const apiUrl: string = `https://api.soundcloud.com/users/${soundcloudId}/favorites?client_id=${API_KEY}`;\r\n    try {\r\n      const response: Response = await fetch(apiUrl);\r\n      const data: Array<SoundCloud.UserFavouritesData> = await response.json();\r\n      this.setState({\r\n        userFavourites: data,\r\n        isUserFavourtiesLoaded: true\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  createBoxes = (): Array<JSX.Element> => {\r\n    try {\r\n      return this.state.userFavourites\r\n        .filter(userFavourite => userFavourite.streamable === true)\r\n        .slice(0, 6)\r\n        .map(({ id, artwork_url }) => this.createBox(id, artwork_url));\r\n    } catch (error) {\r\n      console.error(error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  createBox = (trackId: number, artwork_url: string | null): JSX.Element => {\r\n    const url: string = `/track/${trackId}`;\r\n    const artUrl: string =\r\n      artwork_url === null\r\n        ? \"\"\r\n        : artwork_url.toString().replace(\"large\", \"t500x500\");\r\n\r\n    const coverStyles: CSS.Properties = {\r\n      backgroundImage: `url(${artUrl})`\r\n    };\r\n    return (\r\n      <NavLink to={url}>\r\n        <div className=\"box\">\r\n          <div className=\"cover\" style={coverStyles}></div>\r\n        </div>\r\n      </NavLink>\r\n    );\r\n  };\r\n\r\n  handleKeyDown = (event: React.KeyboardEvent | any) => {\r\n    if (event.key === \"Enter\") {\r\n      this.fetchTrackInfo(event.target.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isLogged } = this.props;\r\n\r\n    const favouritesWrapperStyles: CSS.Properties = {\r\n      display: isLogged ? \"flex\" : \"none\"\r\n    };\r\n\r\n    return (\r\n      <div className=\"rate\">\r\n        <div>\r\n          <div className=\"search-wrapper\">\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                autoFocus\r\n                onKeyDown={this.handleKeyDown}\r\n                placeholder=\"Type url to track on SoundCloud...\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"favourites-wrapper\" style={favouritesWrapperStyles}>\r\n            <div>\r\n              <div className=\"header-wrapper\">\r\n                <h2>or choose your last favourites:</h2>\r\n              </div>\r\n              <div className=\"box-list\">{this.createBoxes()}</div>\r\n            </div>\r\n          </div>\r\n\r\n          {this.props.isLogged && !this.state.isUserFavourtiesLoaded && (\r\n            <div className=\"spinner-wrapper\">\r\n              <SpinnerComponent progress={this.state.progress} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RateComponentContainer: ComponentClass = withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(RateComponent) as ConnectedComponent<typeof RateComponent, any>\r\n);\r\n\r\nexport default RateComponentContainer;\r\n","import React, { Dispatch, ComponentClass } from \"react\";\r\nimport \"./access.scss\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { ConnectedComponent, connect } from \"react-redux\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\nimport {\r\n  LoginStage,\r\n  RegisterStage,\r\n  FeedbackError\r\n} from \"../../../core/state/ducks/user/user.state\";\r\n\r\nconst mapStateToProps = (state: AppState): AccessComponentProps | any => ({\r\n  isLogged: state.user.isLogged,\r\n  loginStage: state.user.loginStage,\r\n  loginError: state.user.loginError,\r\n  registerStage: state.user.registerStage,\r\n  registerError: state.user.registerError\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<any>\r\n): AccessComponentProps | any => ({\r\n  signIn: (login: string, password: string): void => {\r\n    dispatch(tasks.userOperations.signIn(login, password));\r\n  },\r\n  signUp: (login: string, password: string, nickname: string): void => {\r\n    dispatch(tasks.userOperations.signUp(login, password, nickname));\r\n  }\r\n});\r\n\r\ntype AccessComponentProps = {\r\n  isLogged: boolean;\r\n  loginStage: LoginStage;\r\n  loginError: FeedbackError;\r\n  registerStage: RegisterStage;\r\n  registerError: FeedbackError;\r\n  signIn: (login: string, password: string) => void;\r\n  signUp: (login: string, password: string, nickname: string) => void;\r\n};\r\n\r\ntype AccessComponentState = {};\r\n\r\nclass AccessComponent extends React.Component<\r\n  AccessComponentProps,\r\n  AccessComponentState\r\n> {\r\n  signInLoginRef: React.RefObject<HTMLInputElement>;\r\n  signInPasswordRef: React.RefObject<HTMLInputElement>;\r\n  signUpLoginRef: React.RefObject<HTMLInputElement>;\r\n  signUpSoundCloudUriRef: React.RefObject<HTMLInputElement>;\r\n  signUpPasswordRef: React.RefObject<HTMLInputElement>;\r\n\r\n  constructor(props: AccessComponentProps) {\r\n    super(props);\r\n    this.signInLoginRef = React.createRef();\r\n    this.signInPasswordRef = React.createRef();\r\n    this.signUpLoginRef = React.createRef();\r\n    this.signUpSoundCloudUriRef = React.createRef();\r\n    this.signUpPasswordRef = React.createRef();\r\n  }\r\n\r\n  handleLoginButtonClick = (event: React.MouseEvent): void => {\r\n    const { signInLoginRef, signInPasswordRef } = this;\r\n    const login: string = (signInLoginRef.current as HTMLInputElement).value;\r\n    const password: string = (signInPasswordRef.current as HTMLInputElement)\r\n      .value;\r\n    this.props.signIn(login, password);\r\n  };\r\n\r\n  handleRegisterButtonClick = (event: React.MouseEvent): void => {\r\n    const { signUpLoginRef, signUpPasswordRef, signUpSoundCloudUriRef } = this;\r\n    const login: string = (signUpLoginRef.current as HTMLInputElement).value;\r\n    const password: string = (signUpPasswordRef.current as HTMLInputElement)\r\n      .value;\r\n    const soundcloudUri: string = (signUpSoundCloudUriRef.current as HTMLInputElement)\r\n      .value;\r\n    this.props.signUp(login, password, soundcloudUri);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isLogged) {\r\n      return <Redirect to=\"/my-profile\" />;\r\n    }\r\n\r\n    const isDisabled: boolean =\r\n      this.props.loginStage === LoginStage.PENDING ||\r\n      this.props.registerStage === RegisterStage.PENDING\r\n        ? true\r\n        : false;\r\n    return (\r\n      <div className=\"access\">\r\n        <div>\r\n          <section className=\"sign-in-area\">\r\n            <div>\r\n              <h2>Sign in</h2>\r\n              <div className=\"form\">\r\n                <div className=\"error-box\">\r\n                  <span>\r\n                    {this.props.loginError === undefined\r\n                      ? \"\"\r\n                      : this.props.loginError.message}\r\n                  </span>\r\n                </div>\r\n                <div className=\"input-box\" tabIndex={0}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type login...\"\r\n                    disabled={isDisabled}\r\n                    ref={this.signInLoginRef}\r\n                  />\r\n                  <div className=\"icon\">\r\n                    <i className=\"icon-user\"></i>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" tabIndex={1}>\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Type password...\"\r\n                    disabled={isDisabled}\r\n                    ref={this.signInPasswordRef}\r\n                  />\r\n                  <div className=\"icon\">\r\n                    <i className=\"icon-key\"></i>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"input-box button\" tabIndex={2}>\r\n                  <input\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    value=\"Sign in\"\r\n                    disabled={isDisabled}\r\n                    onClick={this.handleLoginButtonClick}\r\n                  />\r\n                  <div className=\"icon\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"sign-up-area\">\r\n            <div>\r\n              <h2>Sign up</h2>\r\n              <div className=\"form\">\r\n                <div className=\"error-box\">\r\n                  <span>\r\n                    {this.props.registerError === undefined\r\n                      ? \"\"\r\n                      : this.props.registerError.message}\r\n                  </span>\r\n                </div>\r\n                <div className=\"input-box\" tabIndex={3}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type login...\"\r\n                    disabled={isDisabled}\r\n                    ref={this.signUpLoginRef}\r\n                  />\r\n                  <div className=\"icon\">\r\n                    <i className=\"icon-user\"></i>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" tabIndex={4}>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Type url to your SoundCloud Profile...\"\r\n                    disabled={isDisabled}\r\n                    ref={this.signUpSoundCloudUriRef}\r\n                  />\r\n                  <div className=\"icon\">\r\n                    <i className=\"icon-soundcloud\"></i>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" tabIndex={5}>\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Type password...\"\r\n                    disabled={isDisabled}\r\n                    ref={this.signUpPasswordRef}\r\n                  />\r\n                  <div className=\"icon\">\r\n                    <i className=\"icon-key\"></i>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"input-box button\" tabIndex={2}>\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Sign up\"\r\n                    disabled={isDisabled}\r\n                    onClick={this.handleRegisterButtonClick}\r\n                  />\r\n                  <div className=\"icon\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst AccessContainer: ComponentClass = withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(AccessComponent) as ConnectedComponent<typeof AccessComponent, any>\r\n);\r\n\r\nexport default AccessContainer;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./Content.scss\";\r\nimport TrackComponent from \"../../pages/track/track\";\r\nimport GlobalPlayer from \"../global-player/global-player\";\r\nimport MyProfileComponent from \"../../pages/my-profile/my-profile\";\r\nimport RateComponent from \"../../pages/rate/rate\";\r\nimport AccessContainer from \"../../pages/access/access\";\r\n\r\nconst Content: React.FC = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"global-player-wrapper\">\r\n        <GlobalPlayer />\r\n      </div>\r\n      <div className=\"pages\">\r\n        <Route\r\n          exact\r\n          path=\"/track/:trackId/(rating)?/:ratingId?\"\r\n          component={TrackComponent}\r\n        />\r\n        <Route exact path=\"/my-profile\" component={MyProfileComponent} />\r\n        <Route exact path=\"/rate\" component={RateComponent} />\r\n        <Route exact path=\"/access\" component={AccessContainer} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React, { Dispatch, RefObject } from \"react\";\r\nimport CSS from \"csstype\";\r\nimport \"./timeline-moment-contextmenu.scss\";\r\nimport options from \"./options.json\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\n\r\nconst mapStateToProps = (\r\n  state: AppState\r\n): TimelineMomentContextmenuProps | any => ({\r\n  isHidden: state.view.timelineMomentContextMenu.isHidden,\r\n  x: state.view.timelineMomentContextMenu.position.x,\r\n  y: state.view.timelineMomentContextMenu.position.y\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<any>\r\n): TimelineMomentContextmenuProps | any => ({});\r\n\r\ntype TimelineMomentContextmenuProps = {\r\n  isHidden: boolean;\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype TimelineMomentContextmenuState = {};\r\n\r\nclass TimelineMomentContextmenu extends React.Component<\r\n  TimelineMomentContextmenuProps,\r\n  TimelineMomentContextmenuState\r\n> {\r\n  contextMenuRef: React.RefObject<HTMLDivElement>;\r\n  constructor(props: TimelineMomentContextmenuProps) {\r\n    super(props);\r\n    this.contextMenuRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { isHidden, x, y } = this.props;\r\n\r\n    const TimelineMomentContextmenuStyles: CSS.Properties = {\r\n      display: isHidden ? \"none\" : \"block\",\r\n      transform: `translate(${x}px, ${y}px)`\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className=\"timeline-moment-contextmenu\"\r\n        style={TimelineMomentContextmenuStyles}\r\n        ref={this.contextMenuRef}\r\n      >\r\n        <div className=\"options-wrapper\">\r\n          <ul>\r\n            {options.map((option, index) => (\r\n              <li key={index}>\r\n                <i\r\n                  className={`${option.icon}`}\r\n                  style={{ color: option.color }}\r\n                />\r\n                <span>{option.name}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TimelineMomentContextmenuContainer: ConnectedComponent<\r\n  typeof TimelineMomentContextmenu,\r\n  any\r\n> = connect(mapStateToProps, mapDispatchToProps)(TimelineMomentContextmenu);\r\n\r\nexport default TimelineMomentContextmenuContainer;\r\n","import React, { Dispatch } from \"react\";\r\n\r\nimport \"./view.scss\";\r\nimport { AppState } from \"../../../core/state/store\";\r\nimport { connect, ConnectedComponent } from \"react-redux\";\r\nimport TimelineMomentContextmenu from \"../../entities/timeline-moment-contextmenu/timeline-moment-contextmenu\";\r\n\r\nimport * as tasks from \"../../../core/state/ducks/tasks\";\r\n\r\nconst mapStateToProps = (state: AppState): ViewProps | any => ({\r\n  isContextMenuHidden: state.view.timelineMomentContextMenu.isHidden\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): ViewProps | any => ({\r\n  onCloseContextMenu: () => {\r\n    dispatch(tasks.viewActions.hideTimelineMomentContextMenu());\r\n  }\r\n});\r\n\r\ntype ViewProps = {\r\n  isContextMenuHidden: boolean;\r\n  onCloseContextMenu: () => void;\r\n};\r\ntype ViewState = {};\r\n\r\nclass View extends React.Component<ViewProps, ViewState> {\r\n  constructor(props: ViewProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"contextmenu\", event => {\r\n      event.preventDefault();\r\n    });\r\n    document.addEventListener(\"click\", event => {\r\n      if (this.props.isContextMenuHidden) return;\r\n      this.props.onCloseContextMenu();\r\n    });\r\n    document.addEventListener(\"scroll\", event => {\r\n      if (this.props.isContextMenuHidden) return;\r\n      this.props.onCloseContextMenu();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"view\">\r\n        <TimelineMomentContextmenu />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ViewContainer: ConnectedComponent<typeof View, any> = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(View);\r\n\r\nexport default ViewContainer;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { Store } from \"redux\";\r\nimport getStore from \"../../../core/state/store\";\r\n\r\nimport Menu from \"../menu/Menu\";\r\nimport Content from \"../content/Content\";\r\n\r\nimport \"./App.scss\";\r\nimport ViewContainer from \"../view/view\";\r\n\r\nconst store: Store = getStore();\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"app\">\r\n          <div className=\"view-wrapper\">\r\n            <ViewContainer />\r\n          </div>\r\n          <div className=\"menu-wrapper\">\r\n            <Menu />\r\n          </div>\r\n          <div className=\"content-wrapper\">\r\n            <Content />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./components/main/app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}